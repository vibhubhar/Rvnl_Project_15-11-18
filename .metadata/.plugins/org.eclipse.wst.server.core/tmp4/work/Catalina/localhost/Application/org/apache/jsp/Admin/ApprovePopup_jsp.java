/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.86
 * Generated at: 2018-04-29 05:13:59 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.Admin;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import javax.servlet.*;
import javax.servlet.http.*;
import javax.naming.*;
import java.sql.*;
import javax.sql.*;
import javax.naming.*;
import java.sql.*;
import javax.sql.*;
import java.util.*;
import java.util.Date;
import java.text.SimpleDateFormat;

public final class ApprovePopup_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/sessionCheck1.jspf", Long.valueOf(1524567358000L));
    _jspx_dependants.put("/Admin/sessionCheck.jsp", Long.valueOf(1524567356000L));
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fchoose;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fvar_005fdataSource;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fotherwise;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fchoose = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fvar_005fdataSource = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fotherwise = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fchoose.release();
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.release();
    _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fvar_005fdataSource.release();
    _005fjspx_005ftagPool_005fc_005fotherwise.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

 
int timeout = session.getMaxInactiveInterval();
response.setHeader("Refresh", timeout + "; URL = admn_login.jsp");

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
 

int timeout1 = session.getMaxInactiveInterval();
response.setHeader("Refresh", timeout1 + "; URL = admn_login.jsp");

if(((String)session.getAttribute("user_name"))==null)
       {
           
	response.sendRedirect("admn_login.jsp");
           
       }
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\r\n");
      out.write("<title>RVNL Document Portal</title>\r\n");
      out.write("<link href=\"resources/bootstrap/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n");
      out.write("<link href=\"resources/bootstrap/css/bootstrap.css\" rel=\"stylesheet\" />\r\n");
      out.write("<script src=\"resources/JS/Approval_wf230.js\"></script>\r\n");
      out.write("<script\r\n");
      out.write("\tsrc=\"http://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t");

		String user = (String) session.getAttribute("user_name");
		//System.out.println("UZER:"+user);
	
      out.write("\r\n");
      out.write("\t<form id='approve_pop' name='approve_pop' method=\"post\">\r\n");
      out.write("\t\t<INPUT TYPE=\"HIDDEN\" NAME=\"Doc_Id\"> <INPUT TYPE=\"HIDDEN\"\r\n");
      out.write("\t\t\tNAME=\"Action\"> <INPUT TYPE=\"HIDDEN\" NAME=\"AddedBy\"> <INPUT\r\n");
      out.write("\t\t\tTYPE=\"HIDDEN\" NAME=\"checkedval\"> <INPUT TYPE=\"HIDDEN\"\r\n");
      out.write("\t\t\tNAME=\"C_Level\"> <INPUT TYPE=\"HIDDEN\" NAME=\"remarks\">\r\n");
      out.write("\r\n");
      out.write("\t\t");

			String Document_id = request.getParameter("doc_id");
			String Added_by = request.getParameter("added_by");
			
			String Clevel = request.getParameter("C_Level");
		
      out.write("\r\n");
      out.write("\t\t");
      //  c:choose
      org.apache.taglibs.standard.tag.common.core.ChooseTag _jspx_th_c_005fchoose_005f0 = (org.apache.taglibs.standard.tag.common.core.ChooseTag) _005fjspx_005ftagPool_005fc_005fchoose.get(org.apache.taglibs.standard.tag.common.core.ChooseTag.class);
      boolean _jspx_th_c_005fchoose_005f0_reused = false;
      try {
        _jspx_th_c_005fchoose_005f0.setPageContext(_jspx_page_context);
        _jspx_th_c_005fchoose_005f0.setParent(null);
        int _jspx_eval_c_005fchoose_005f0 = _jspx_th_c_005fchoose_005f0.doStartTag();
        if (_jspx_eval_c_005fchoose_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("\r\n");
            out.write("\r\n");
            out.write("\r\n");
            out.write("\t\t\t");
            //  c:when
            org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f0 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
            boolean _jspx_th_c_005fwhen_005f0_reused = false;
            try {
              _jspx_th_c_005fwhen_005f0.setPageContext(_jspx_page_context);
              _jspx_th_c_005fwhen_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
              // /Admin/ApprovePopup.jsp(46,3) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_c_005fwhen_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${param.Action == null}", java.lang.Boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false)).booleanValue());
              int _jspx_eval_c_005fwhen_005f0 = _jspx_th_c_005fwhen_005f0.doStartTag();
              if (_jspx_eval_c_005fwhen_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                do {
                  out.write("\r\n");
                  out.write("\r\n");
                  out.write("\r\n");
                  out.write("\t\t\t\t<INPUT TYPE=\"text\" NAME=\"Approval\" id=\"Approval\" VALUE=\"2\" />\r\n");
                  out.write("Return with Remarks\r\n");
                  out.write("<div id=\"App1\" class=\"desc\"></div>\r\n");
                  out.write("\t\t\t\t<div id=\"App2\" class=\"desc\" style='display: none;'>\r\n");
                  out.write("\t\t\t\t\t<br> &nbsp;&nbsp;&nbsp;\r\n");
                  out.write("\t\t\t\t\t<textarea name=\"remark\" id=\"remark\" maxlength=\"500\" rows=\"10\" cols=\"50\"\r\n");
                  out.write("\t\t\t\t\t\tname=\"comment\" placeholder=\"Enter Remark\"></textarea>\r\n");
                  out.write("\r\n");
                  out.write("\r\n");
                  out.write("\t\t\t\t</div>\r\n");
                  out.write("\r\n");
                  out.write("\t\t\t\t<br>\r\n");
                  out.write("\t\t\t\t<br>\r\n");
                  out.write("&nbsp;&nbsp;&nbsp;<button id=\"Approve\" type=\"button\"\r\n");
                  out.write("\t\t\t\t\tclass=\"btn btn-primary\"\r\n");
                  out.write("\t\t\t\t\tonclick=\"approvedpopup('");
                  out.print(Document_id);
                  out.write('\'');
                  out.write(',');
                  out.write('\'');
                  out.print(Added_by);
                  out.write('\'');
                  out.write(',');
                  out.write('\'');
                  out.print(Clevel);
                  out.write("')\">Submit</button>\r\n");
                  out.write("\r\n");
                  out.write("\r\n");
                  out.write("\t\t\t");
                  int evalDoAfterBody = _jspx_th_c_005fwhen_005f0.doAfterBody();
                  if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                    break;
                } while (true);
              }
              if (_jspx_th_c_005fwhen_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                return;
              }
              _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f0);
              _jspx_th_c_005fwhen_005f0_reused = true;
            } finally {
              org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fwhen_005f0_reused);
            }
            out.write("\r\n");
            out.write("\t\t\t");
            //  c:when
            org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f1 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
            boolean _jspx_th_c_005fwhen_005f1_reused = false;
            try {
              _jspx_th_c_005fwhen_005f1.setPageContext(_jspx_page_context);
              _jspx_th_c_005fwhen_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
              // /Admin/ApprovePopup.jsp(68,3) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_c_005fwhen_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${param.Action != null}", java.lang.Boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false)).booleanValue());
              int _jspx_eval_c_005fwhen_005f1 = _jspx_th_c_005fwhen_005f1.doStartTag();
              if (_jspx_eval_c_005fwhen_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                do {
                  out.write("\r\n");
                  out.write("\t\t\t\t");

					String action = request.getParameter("Action");
							if (action.equalsIgnoreCase("approved")) {
								String doc_id = request.getParameter("Doc_Id");
								String document_id = request
										.getParameter("document_id");
								String addedBy = request.getParameter("AddedBy");
								String check = request.getParameter("checkedval");

								//System.out.println("DocID :" +doc_id);
								PreparedStatement getLevelPS = null, getUserPS = null, MaxPS = null, getUser = null;
								ResultSet getLevelRS = null, getUserRS = null, MaxRS = null, UserRs = null;
								Context initCtx = new InitialContext();
								Context envCtx = (Context) initCtx
										.lookup("java:comp/env");
								DataSource ds = (DataSource) envCtx
										.lookup("jdbc/MySQLDB");
								Connection conn = null;
								conn = ds.getConnection();

								String getLevel = "select * from xx_approval_workflow where document_id = '"
										+ doc_id + "'";
								getLevelPS = conn.prepareStatement(getLevel);
								getLevelRS = getLevelPS.executeQuery();
								String zh_id = null, hier_id = null, dh_id = null, assigned_to = null;

								String c_levels = request.getParameter("C_Level");
								
								int c_level = Integer.parseInt(c_levels);
								if (getLevelRS.next()) {
									zh_id = getLevelRS.getString(4);
									assigned_to = getLevelRS.getString(5);
									dh_id = getLevelRS.getString(6);

									PreparedStatement hierPS = null;
									ResultSet hierRS = null;

									
									if (zh_id != null) {
										hier_id = getLevelRS.getString(4);
										String getMax = "select MAX(CAST(level AS SIGNED)) from xx_doc_zones_hierarchy where hierarchy_id ='"
												+ hier_id + "'";
										MaxPS = conn.prepareStatement(getMax);
										MaxRS = MaxPS.executeQuery();
										int level = 0;
										String slevel = null;
										while (MaxRS.next()) {
											slevel = MaxRS.getString(1);
											level = Integer.parseInt(slevel);
										}
										if (c_level < level) {
											int c_level2 = c_level + 1;
											String getHier = "select * from xx_doc_zones_hierarchy where hierarchy_id ='"
													+ hier_id
													+ "' and level = '"
													+ c_level2 + "'";
											hierPS = conn.prepareStatement(getHier);
											hierRS = hierPS.executeQuery();
											String zone = null, dept = null, desg = null;
											while (hierRS.next()) {
												zone = hierRS.getString(4);
												dept = hierRS.getString(6);
												desg = hierRS.getString(7);
											}
											String getU = "select user_name from xx_user_master where zone_id =(select zone_id from xx_zones_master where zone_name = '"
													+ zone
													+ "') and division_id = 86 and department_id =  (select department_id from xx_departments_master where department_name = '"
													+ dept
													+ "') and Designation_Id = (select designation_id from xx_designation_master where designation_name ='"
													+ desg + "')";
											getUser = (PreparedStatement) conn
													.prepareStatement(getU);
											                	
											UserRs = getUser.executeQuery();
											String assign_to = null;
											while (UserRs.next()) {
												assign_to = UserRs.getString(1);
											}
											Date dNow = new Date();
											SimpleDateFormat ft = new SimpleDateFormat(
													"dd/MM/yyyy");
											ft.format(dNow);
											

											Statement insertStmt = (Statement) conn
													.createStatement();
											String insertStg = "insert into xx_approval_workflow (Document_id,Added_byUser,zone_hierarchy_id,Assigned_To,Action,CurrentDate,level) Values ('"
													+ doc_id
													+ "','"
													+ addedBy
													+ "','"
													+ hier_id
													+ "','"
													+ assign_to
													+ "','N',CURDATE(),'"
													+ c_level2
													+ "')";
											insertStmt.executeUpdate(insertStg);
				
                  out.write("\r\n");
                  out.write("\t\t\t\t");
                  //  sql:update
                  org.apache.taglibs.standard.tag.rt.sql.UpdateTag _jspx_th_sql_005fupdate_005f0 = (org.apache.taglibs.standard.tag.rt.sql.UpdateTag) _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fvar_005fdataSource.get(org.apache.taglibs.standard.tag.rt.sql.UpdateTag.class);
                  boolean _jspx_th_sql_005fupdate_005f0_reused = false;
                  try {
                    _jspx_th_sql_005fupdate_005f0.setPageContext(_jspx_page_context);
                    _jspx_th_sql_005fupdate_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fwhen_005f1);
                    // /Admin/ApprovePopup.jsp(168,4) name = dataSource type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                    _jspx_th_sql_005fupdate_005f0.setDataSource("jdbc/MySQLDB");
                    // /Admin/ApprovePopup.jsp(168,4) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                    _jspx_th_sql_005fupdate_005f0.setVar("rs");
                    int[] _jspx_push_body_count_sql_005fupdate_005f0 = new int[] { 0 };
                    try {
                      int _jspx_eval_sql_005fupdate_005f0 = _jspx_th_sql_005fupdate_005f0.doStartTag();
                      if (_jspx_eval_sql_005fupdate_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                        if (_jspx_eval_sql_005fupdate_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                          _jspx_push_body_count_sql_005fupdate_005f0[0]++;
                          out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_sql_005fupdate_005f0);
                        }
                        do {
                          out.write("\r\n");
                          out.write("                    update xx_approval_workflow set action ='Y' where document_id =");
                          out.print(doc_id);
                          out.write(" and level ='");
                          out.print(c_level);
                          out.write("'\r\n");
                          out.write("                  ");
                          int evalDoAfterBody = _jspx_th_sql_005fupdate_005f0.doAfterBody();
                          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                            break;
                        } while (true);
                        if (_jspx_eval_sql_005fupdate_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                          out = _jspx_page_context.popBody();
                          _jspx_push_body_count_sql_005fupdate_005f0[0]--;
                        }
                      }
                      if (_jspx_th_sql_005fupdate_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                        return;
                      }
                    } catch (java.lang.Throwable _jspx_exception) {
                      while (_jspx_push_body_count_sql_005fupdate_005f0[0]-- > 0)
                        out = _jspx_page_context.popBody();
                      _jspx_th_sql_005fupdate_005f0.doCatch(_jspx_exception);
                    } finally {
                      _jspx_th_sql_005fupdate_005f0.doFinally();
                    }
                    _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fvar_005fdataSource.reuse(_jspx_th_sql_005fupdate_005f0);
                    _jspx_th_sql_005fupdate_005f0_reused = true;
                  } finally {
                    org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sql_005fupdate_005f0, _jsp_getInstanceManager(), _jspx_th_sql_005fupdate_005f0_reused);
                  }
                  out.write("\r\n");
                  out.write("\t\t\t\t");

					}
									} else if (dh_id != null) {
										hier_id = getLevelRS.getString(6);
										//System.out.println("HZ. "+hier_id);
										String getMax = "select MAX(CAST(level AS SIGNED)) from xx_doc_divisions_hierarchy where hierarchy_id ='"
												+ hier_id + "'";
										MaxPS = conn.prepareStatement(getMax);
										MaxRS = MaxPS.executeQuery();
										int level = 0;
										String slevel = null;
										while (MaxRS.next()) {
											slevel = MaxRS.getString(1);
											
											level = Integer.parseInt(slevel);
										}
										if (c_level < level) {
											int c_level2 = c_level + 1;
											String getHier = "select * from xx_doc_divisions_hierarchy where hierarchy_id ='"
													+ hier_id
													+ "' and level = '"
													+ c_level2 + "'";
											hierPS = conn.prepareStatement(getHier);
											hierRS = hierPS.executeQuery();

											String division = null, dept = null, desg = null;
											while (hierRS.next()) {
												division = hierRS.getString(4);
												dept = hierRS.getString(6);
												desg = hierRS.getString(7);
												
											}
											String getU = "select user_name from xx_user_master where division_id =(select division_id from xx_divisions_map where division_name ='"
													+ division
													+ "') and department_id = (select department_id from xx_departments_master where department_name = '"
													+ dept
													+ "') and Designation_Id = (select designation_id from xx_designation_master where designation_name ='"
													+ desg + "')";
											getUser = (PreparedStatement) conn
													.prepareStatement(getU);
											UserRs = getUser.executeQuery();
											String assign_to = null;
				
                  out.write("\r\n");
                  out.write("\t\t\t\t");
                  if (_jspx_meth_sql_005fupdate_005f1(_jspx_th_c_005fwhen_005f1, _jspx_page_context))
                    return;
                  out.write("\r\n");
                  out.write("\r\n");
                  out.write("\r\n");
                  out.write("\r\n");
                  out.write("\t\t\t\t");

					while (UserRs.next()) {
												assign_to = UserRs.getString(1);
												//System.out.println("UZ.N. "+assign_to);
											}
											Statement insertStmt = (Statement) conn
													.createStatement();
											String insertStg = "insert into xx_approval_workflow (Document_id,Added_byUser,division_hierarchy_id,Assigned_To,CurrentDate,Action,level) Values ('"
													+ doc_id
													+ "','"
													+ addedBy
													+ "','"
													+ hier_id
													+ "','"
													+ assign_to
													+ "',CURDATE(),'N','"
													+ c_level2
													+ "')";
											insertStmt.executeUpdate(insertStg);

										}
									}
									if (check.equalsIgnoreCase("1")) {
				
                  out.write("\r\n");
                  out.write("\t\t\t\t");
                  //  sql:update
                  org.apache.taglibs.standard.tag.rt.sql.UpdateTag _jspx_th_sql_005fupdate_005f2 = (org.apache.taglibs.standard.tag.rt.sql.UpdateTag) _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fvar_005fdataSource.get(org.apache.taglibs.standard.tag.rt.sql.UpdateTag.class);
                  boolean _jspx_th_sql_005fupdate_005f2_reused = false;
                  try {
                    _jspx_th_sql_005fupdate_005f2.setPageContext(_jspx_page_context);
                    _jspx_th_sql_005fupdate_005f2.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fwhen_005f1);
                    // /Admin/ApprovePopup.jsp(244,4) name = dataSource type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                    _jspx_th_sql_005fupdate_005f2.setDataSource("jdbc/MySQLDB");
                    // /Admin/ApprovePopup.jsp(244,4) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                    _jspx_th_sql_005fupdate_005f2.setVar("rs");
                    int[] _jspx_push_body_count_sql_005fupdate_005f2 = new int[] { 0 };
                    try {
                      int _jspx_eval_sql_005fupdate_005f2 = _jspx_th_sql_005fupdate_005f2.doStartTag();
                      if (_jspx_eval_sql_005fupdate_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                        if (_jspx_eval_sql_005fupdate_005f2 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                          _jspx_push_body_count_sql_005fupdate_005f2[0]++;
                          out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_sql_005fupdate_005f2);
                        }
                        do {
                          out.write("\r\n");
                          out.write("       insert into xx_record_actions (Document_id,CurrentDate,ActionPerformed,ActionPerformedBy) Values ('");
                          out.print(doc_id);
                          out.write("',CURDATE(),'approved','");
                          out.print(user);
                          out.write("')\r\n");
                          out.write("     ");
                          int evalDoAfterBody = _jspx_th_sql_005fupdate_005f2.doAfterBody();
                          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                            break;
                        } while (true);
                        if (_jspx_eval_sql_005fupdate_005f2 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                          out = _jspx_page_context.popBody();
                          _jspx_push_body_count_sql_005fupdate_005f2[0]--;
                        }
                      }
                      if (_jspx_th_sql_005fupdate_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                        return;
                      }
                    } catch (java.lang.Throwable _jspx_exception) {
                      while (_jspx_push_body_count_sql_005fupdate_005f2[0]-- > 0)
                        out = _jspx_page_context.popBody();
                      _jspx_th_sql_005fupdate_005f2.doCatch(_jspx_exception);
                    } finally {
                      _jspx_th_sql_005fupdate_005f2.doFinally();
                    }
                    _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fvar_005fdataSource.reuse(_jspx_th_sql_005fupdate_005f2);
                    _jspx_th_sql_005fupdate_005f2_reused = true;
                  } finally {
                    org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sql_005fupdate_005f2, _jsp_getInstanceManager(), _jspx_th_sql_005fupdate_005f2_reused);
                  }
                  out.write("\r\n");
                  out.write("\t\t\t\t");

					} else {
										String remark = request.getParameter("remarks");
										String query = "insert into xx_record_actions (Document_id,CurrentDate,ActionPerformed,ActionPerformedBy,Information,Real_ActionDate) Values ("
												+ doc_id
												+ ",CURDATE(),'approved','"
												+ user + "','" + remark + "',now())";
										conn.createStatement().executeUpdate(query);
										conn.close();
									}

								}
				
                  out.write("\r\n");
                  out.write("\t\t\t\t<div class=\"alert alert-success\" align=\"center\">\r\n");
                  out.write("\t\t\t\t\t<strong>Success!</strong> Document has been approved.\r\n");
                  out.write("\t\t\t\t</div>\r\n");
                  out.write("\t\t\t\t");

					}
				
                  out.write("\r\n");
                  out.write("\r\n");
                  out.write("\t\t\t");
                  int evalDoAfterBody = _jspx_th_c_005fwhen_005f1.doAfterBody();
                  if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                    break;
                } while (true);
              }
              if (_jspx_th_c_005fwhen_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                return;
              }
              _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f1);
              _jspx_th_c_005fwhen_005f1_reused = true;
            } finally {
              org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fwhen_005f1_reused);
            }
            out.write("\r\n");
            out.write("\t\t\t");
            if (_jspx_meth_c_005fotherwise_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
              return;
            out.write("\r\n");
            out.write("\r\n");
            out.write("\r\n");
            out.write("\t\t");
            int evalDoAfterBody = _jspx_th_c_005fchoose_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fchoose_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
        _005fjspx_005ftagPool_005fc_005fchoose.reuse(_jspx_th_c_005fchoose_005f0);
        _jspx_th_c_005fchoose_005f0_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fchoose_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fchoose_005f0_reused);
      }
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t</form>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_sql_005fupdate_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fwhen_005f1, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  sql:update
    org.apache.taglibs.standard.tag.rt.sql.UpdateTag _jspx_th_sql_005fupdate_005f1 = (org.apache.taglibs.standard.tag.rt.sql.UpdateTag) _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fvar_005fdataSource.get(org.apache.taglibs.standard.tag.rt.sql.UpdateTag.class);
    boolean _jspx_th_sql_005fupdate_005f1_reused = false;
    try {
      _jspx_th_sql_005fupdate_005f1.setPageContext(_jspx_page_context);
      _jspx_th_sql_005fupdate_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fwhen_005f1);
      // /Admin/ApprovePopup.jsp(214,4) name = dataSource type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_sql_005fupdate_005f1.setDataSource("jdbc/MySQLDB");
      // /Admin/ApprovePopup.jsp(214,4) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_sql_005fupdate_005f1.setVar("rs");
      int[] _jspx_push_body_count_sql_005fupdate_005f1 = new int[] { 0 };
      try {
        int _jspx_eval_sql_005fupdate_005f1 = _jspx_th_sql_005fupdate_005f1.doStartTag();
        if (_jspx_eval_sql_005fupdate_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          if (_jspx_eval_sql_005fupdate_005f1 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
            _jspx_push_body_count_sql_005fupdate_005f1[0]++;
            out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_sql_005fupdate_005f1);
          }
          do {
            out.write("\r\n");
            out.write("       update xx_approval_workflow set action ='Y' where document_id =\"doc_id+\" and level ='\"+c_level+\"'\r\n");
            out.write("     ");
            int evalDoAfterBody = _jspx_th_sql_005fupdate_005f1.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
          if (_jspx_eval_sql_005fupdate_005f1 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
            out = _jspx_page_context.popBody();
            _jspx_push_body_count_sql_005fupdate_005f1[0]--;
          }
        }
        if (_jspx_th_sql_005fupdate_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_sql_005fupdate_005f1[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_sql_005fupdate_005f1.doCatch(_jspx_exception);
      } finally {
        _jspx_th_sql_005fupdate_005f1.doFinally();
      }
      _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fvar_005fdataSource.reuse(_jspx_th_sql_005fupdate_005f1);
      _jspx_th_sql_005fupdate_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sql_005fupdate_005f1, _jsp_getInstanceManager(), _jspx_th_sql_005fupdate_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fotherwise_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:otherwise
    org.apache.taglibs.standard.tag.common.core.OtherwiseTag _jspx_th_c_005fotherwise_005f0 = (org.apache.taglibs.standard.tag.common.core.OtherwiseTag) _005fjspx_005ftagPool_005fc_005fotherwise.get(org.apache.taglibs.standard.tag.common.core.OtherwiseTag.class);
    boolean _jspx_th_c_005fotherwise_005f0_reused = false;
    try {
      _jspx_th_c_005fotherwise_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fotherwise_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      int _jspx_eval_c_005fotherwise_005f0 = _jspx_th_c_005fotherwise_005f0.doStartTag();
      if (_jspx_eval_c_005fotherwise_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("\r\n");
          out.write("\t\t\t");
          int evalDoAfterBody = _jspx_th_c_005fotherwise_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fotherwise_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fotherwise.reuse(_jspx_th_c_005fotherwise_005f0);
      _jspx_th_c_005fotherwise_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fotherwise_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fotherwise_005f0_reused);
    }
    return false;
  }
}
