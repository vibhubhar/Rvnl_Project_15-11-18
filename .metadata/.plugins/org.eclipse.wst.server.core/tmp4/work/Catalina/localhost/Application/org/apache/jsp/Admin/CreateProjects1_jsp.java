/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.86
 * Generated at: 2018-10-09 05:57:08 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.Admin;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import javax.servlet.*;
import javax.servlet.http.*;
import java.io.*;
import java.util.*;
import javax.script.*;
import java.nio.file.*;
import java.nio.charset.*;
import java.text.DateFormat;
import javax.naming.*;
import java.sql.*;
import javax.sql.*;
import org.apache.taglibs.standard.tag.common.sql.ResultImpl;
import java.util.Date;
import java.text.SimpleDateFormat;
import java.util.Locale;
import java.lang.Integer;
import javax.servlet.*;
import javax.servlet.http.*;
import java.util.*;
import javax.naming.*;
import java.sql.*;
import javax.sql.*;

public final class CreateProjects1_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(4);
    _jspx_dependants.put("/Admin/included/NewHeader.jsp", Long.valueOf(1538119203935L));
    _jspx_dependants.put("/WEB-INF/sessionCheck1.jspf", Long.valueOf(1524567358000L));
    _jspx_dependants.put("/Admin/included/Newfooter.jsp", Long.valueOf(1526628672412L));
    _jspx_dependants.put("/Admin/sessionCheck.jsp", Long.valueOf(1524567356000L));
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fvar_005fdataSource;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fdataSource;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fvar_005fdataSource = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fdataSource = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
    _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fvar_005fdataSource.release();
    _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fdataSource.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 32768, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

 
int timeout = session.getMaxInactiveInterval();
response.setHeader("Refresh", timeout + "; URL = admn_login.jsp");

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t");

 String theme3 = (String) pageContext.getAttribute("myTheme", PageContext.SESSION_SCOPE);
if (theme3!=null) {
if (theme3.equalsIgnoreCase("brown") ) { 
      out.write("\r\n");
      out.write("\t\t<link rel=\"stylesheet\" type=\"text/css\" href=\"resources/css/ThmBrown.css\">\r\n");
      out.write("\t\t");
 } else if (theme3.equalsIgnoreCase("blue")) { 
      out.write(" \r\n");
      out.write("\t\t<link rel=\"stylesheet\" type=\"text/css\" href=\"resources/css/ThmBlue.css\">\r\n");
      out.write("\t\t");
} else if (theme3.equalsIgnoreCase("green")) { 
      out.write(" \r\n");
      out.write("\t\t<link rel=\"stylesheet\" type=\"text/css\" href=\"resources/css/ThmGreen.css\">\r\n");
      out.write("\t\t");
} else if (theme3.equalsIgnoreCase("magenta")) { 
      out.write(" \r\n");
      out.write("\t\t<link rel=\"stylesheet\" type=\"text/css\" href=\"resources/css/Thmmagenta.css\">\r\n");
      out.write("\t\t");
}
} else {
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"resources/css/ThmBrown.css\">\r\n");
      out.write("\t\t");
} 
      out.write("\r\n");
      out.write("\t\t\r\n");
      out.write("<meta charset=\"ISO-8859-1\">\r\n");
      out.write("<title>PDAMS</title>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script src=\"//code.jquery.com/jquery-1.10.2.js\"></script>\r\n");
      out.write("<style>\r\n");
      out.write(".white-marquee {\r\n");
      out.write("   font-family:   arial, serif, \"Times New Roman\", calibri, Times;\r\n");
      out.write("\tfont-size: 14px;\r\n");
      out.write("\tcolor:  white;\r\n");
      out.write("\t//margin-left:50px;\r\n");
      out.write("\tfont-weight:bold;\r\n");
      out.write("\tpadding:10px;\r\n");
      out.write("\tpadding-bottom:5px;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>   \r\n");

//String mailstatus=(String)session.getAttribute("MailStatus"); 
//String user = (String) session.getAttribute("user_name");
String user_code = (String) session.getAttribute("User_Code");
if (user_code!=null) {} else {user_code="0";}
 String mq=null, mqLaunch=null, mqMaint=null, mqOther=null, mqRly=null, mqRVNL=null;					
 //System.out.println("code="+user_code);	
  Connection conn7 = null;                                                      
     			PreparedStatement ps777=null;
     			ResultSet  rs777=null;
     						//Statement stmt7 = null;
     						try {
     							Context initCtx = new InitialContext();
     							Context envCtx = (Context) initCtx.lookup("java:comp/env");
     							DataSource ds = (DataSource) envCtx.lookup("jdbc/MySQLDB");

     							conn7 = ds.getConnection();
     							String sql35 = "select item, description from xx_maintenance";
     									
    								ps777 = conn7.prepareStatement(sql35);
    								rs777 = ps777.executeQuery();
    								while (rs777.next()) {
    									String item=rs777.getString(1);
    									 String desc=rs777.getString(2);
    									if (item.equalsIgnoreCase("marquee-launch")) {
    										mqLaunch=desc;
    									} else if (item.equalsIgnoreCase("marquee-maint")) {
    										mqMaint=desc;
    									} else if (item.equalsIgnoreCase("marquee-other")) {
    										mqOther=desc;
    									} else if (item.equalsIgnoreCase("marquee-Rly")) {
    										mqRly=desc;
    									} else if (item.equalsIgnoreCase("marquee-RVNL")) {
    										mqRVNL=desc;
    									} 
    								}
    								if (user_code.equalsIgnoreCase("2")) {
    									mq= mqLaunch+"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"+mqMaint+"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"+mqOther+"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"+mqRly;
    								} else if (user_code.equalsIgnoreCase("5")) {
    									mq= mqLaunch+"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"+mqMaint+"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"+mqOther+"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"+mqRVNL;
    								} else {
    								mq= mqLaunch+"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"+mqMaint+"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"+mqOther;
    								}		 
    				    				//System.out.println("marquee="+mq);
     						}catch(Exception e){
    							
    							e.printStackTrace();
    						} finally {
    						    try { rs777.close(); } catch (Exception e) { /* ignored */ }
    						    try { ps777.close(); } catch (Exception e) { /* ignored */ }
    						    try { conn7.close(); } catch (Exception e) { /* ignored */ }
    						}



      out.write("\r\n");
      out.write("<input type=\"hidden\" id=\"menu1\" value='");
      out.print(session.getAttribute("user_name") );
      out.write("'>\r\n");
      out.write("     \t   <div class=\"header\">\r\n");
      out.write("   \r\n");
      out.write(" \t\t   <table width=\"100%\"><tr><th width=15%>\r\n");
      out.write("    \t\t  <img src=\"images/Rail_logo.png\"  class=\"img-responsive\" style=\"float:left;height:80px;margin-left:10px;\">\r\n");
      out.write("    \t\t  \r\n");
      out.write("   </td>\r\n");
      out.write("   <th width=60%>\r\n");
      out.write("      \t\t <h2 style=\" margin-left:5px;\"><i>Project Documents Approval Monitoring System (PDAMS)</i></h2>\t\r\n");
      out.write("   \r\n");
      out.write("   </th><th width=25%>\r\n");
      out.write("\t  <img src=\"images/RVNL_LOGO.jpg\"  class=\"img-responsive\" style=\"float:left;height:80px;margin-left:10px;\">\r\n");
      out.write(" \t\t  </table>\t\r\n");
      out.write("   </div>\r\n");
      out.write("\t   <div class=\"topmenu\" id=\"menu\">\r\n");
      out.write("\t  <div id=\"menu1\"  style=\"float:left;\"> \r\n");
      out.write("\t  \t\t<ul>\r\n");
      out.write("\t  \t\t\r\n");
      out.write("\t  \t\t<!-- <li><a href=\"user_index.jsp\">Add/Modify Docs</a></li>\r\n");
      out.write("\t   \t\t\t\t\t<li><a href=\"user_Project.jsp\">My Projects</a></li>\r\n");
      out.write("\t   \t\t\t\t\t<li><a href=\"Reportpiuinitiate.jsp\">My Reports</a></li>\r\n");
      out.write("\t   \t\t\t\t\t<li><a href=\"MoreInfo.jsp\">Returned Tasks</a></li>\r\n");
      out.write("\t   \t\t\t\t\t<li><a href=\"PullBack.jsp\">PullBack Doc</a></li>\r\n");
      out.write("\t   \t\t\t\t\t<li><a href=\"FinalApproval.jsp\">Docs under Approval</a></li>\r\n");
      out.write("\t   \t\t\t\t\t<li><a href=\"FinallyApprovedShow.jsp\">Approved Docs</a></li>\r\n");
      out.write("\t   \t\t\t\t\t<li><a href=\"ManualMail.jsp\">Reminders</a></li>\r\n");
      out.write("\t   \t\t\t\t\t<li><a href=\"User_List.jsp\">User List</a></li>\r\n");
      out.write("\t   \t\t\t\t\t<li><a href=\"changepasswordlocaladmin.jsp\">Change Password</a></li>\r\n");
      out.write("\t   \t\t\t\t\t<li><a href=\"helpmain.jsp\">Help</a></li>\r\n");
      out.write("\t   \t\t\t\t\t<li><a href=\"admn_logout.jsp\">Logout</a></li>  -->\r\n");
      out.write("\t   \t\t\t\t\t<li><a href=\"NewIndex.jsp\">Home</a></li>\r\n");
      out.write("\t   \t\t\t\t\t\r\n");
      out.write("\t   \t\t\t\t\t</ul>\t \r\n");
      out.write("\t   \t\t\t\t\t</div>  \r\n");
      out.write("\t   \t\t\t\t\t");

	   					if (!mq.equalsIgnoreCase("") && mq!=null) {
	   					
      out.write("\t\r\n");
      out.write("\t   \t<div id=\"menu11\" ></div>\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t   <div id=\"menu2\"  style=\"width:70%; float:left;\">     \t\t\t\t\t\r\n");
      out.write("\t   <marquee><span class=\"white-marquee\" id=\"white-marquee\" style=\"float:right; width:100%\">");
      out.print(mq );
      out.write("</span></marquee>  </div>\r\n");
      out.write("\t  ");

	  	}
	   	
      out.write("\t\r\n");
      out.write("\t   \t\r\n");
      out.write("\t\t\t\t\t\t\t</div> \r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("\r\n");
      out.write(" ");
 

int timeout1 = session.getMaxInactiveInterval();
response.setHeader("Refresh", timeout1 + "; URL = admn_login.jsp");

if(((String)session.getAttribute("user_name"))==null)
       {
           
	response.sendRedirect("admn_login.jsp");
           
       }
      out.write("\r\n");
      out.write(" \r\n");
      out.write(" \r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<script type=\"text/javascript\"\r\n");
      out.write("\tsrc=\"https://code.jquery.com/jquery-1.12.4.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\"\r\n");
      out.write("\tsrc=\"https://code.jquery.com/ui/1.12.1/jquery-ui.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\r\n");
      out.write("<title>Project Document Approval Monitoring Portal </title>\r\n");
      out.write("<link href=\"resources/css/main.css\" rel=\"stylesheet\" type=\"text/css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css\">    \r\n");
      out.write("<link href=\"resources/bootstrap/css/bootstrap.min.css\" rel=\"stylesheet\"/>\r\n");
      out.write("<link href=\"resources/bootstrap/css/bootstrap.css\" rel=\"stylesheet\"/>\r\n");
      out.write("<script src=\"resources/JS/backButton.js\"></script>\r\n");
      out.write("<script src=\"resources/JS/validate230.js\"></script>\r\n");
      out.write("<script src=\"resources/JS/PIU_depend230.js\"></script>\r\n");
      out.write("<script src=\"resources/jQuery/jquery-1.12.3.min.js\"></script> \r\n");
      out.write("<script src=\"resources/jQuery/jquery-ui.js\"></script>\r\n");
      out.write("  <script src=\"resources/jQuery/CSS/jquery-ui.css\"></script> -->\r\n");
      out.write(" <!--  <script src=\"//code.jquery.com/jquery-1.10.2.js\"></script>\r\n");
      out.write("  <script src=\"//code.jquery.com/ui/1.11.4/jquery-ui.js\"></script>-->\r\n");
      out.write("  <script type=\"text/javascript\"\r\n");
      out.write("\tsrc=\"http://ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js\"></script>\r\n");
      out.write("<script\r\n");
      out.write("\tsrc=\"http://ajax.aspnetcdn.com/ajax/jquery.ui/1.8.9/jquery-ui.js\"\r\n");
      out.write("\ttype=\"text/javascript\"></script>\r\n");
      out.write("<script src=\"resources/JS/Approval_wf230.js\"></script>\r\n");
      out.write("<link\r\n");
      out.write("\thref=\"http://ajax.aspnetcdn.com/ajax/jquery.ui/1.8.9/themes/blitzer/jquery-ui.css\"\r\n");
      out.write("\trel=\"stylesheet\" type=\"text/css\" />\r\n");
      out.write("<style>\r\n");
      out.write(".ui-datepicker-year {\r\n");
      out.write("   background-color: #cc0000;\r\n");
      out.write(" padding-left:20px;\r\n");
      out.write("}\r\n");
      out.write("textarea {\r\n");
      out.write("   resize: none;\r\n");
      out.write("}\r\n");
      out.write("* { font-family:Arial; }\r\n");
      out.write("h2 { padding:0 0 5px 5px; }\r\n");
      out.write("h2 a { color: #224f99; }\r\n");
      out.write("a { color:#999; text-decoration: none; }\r\n");
      out.write("a:hover { color:#802727; }\r\n");
      out.write("p { padding:0 0 5px 0; }\r\n");
      out.write("\r\n");
      out.write(".disabled {pointer-events: none; cursor: not-allowed; border: 1px solid #999; color: #333; opacity: 0.5;}\r\n");
      out.write(".disabled option {color: #000; opacity: 1;}\r\n");
      out.write("div.absolute {\r\n");
      out.write("   \tposition:absolute;\r\n");
      out.write("   \tmargin-top: 5px;\r\n");
      out.write("   \tmargin-left: 39px;\r\n");
      out.write("   \tmargin-bottom: 20px;\r\n");
      out.write(" \tpadding: 15 px;\r\n");
      out.write("    width: auto;\r\n");
      out.write("    height: 30px;\r\n");
      out.write("    border: 3px double #ff4d4d;\r\n");
      out.write("    background-color:#ffe6e6;\r\n");
      out.write("        }\r\n");
      out.write("   table.center {\r\n");
      out.write("    margin-left:auto; \r\n");
      out.write("    margin-right:auto;\r\n");
      out.write("  }\r\n");
      out.write(" \r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("   <script>\r\n");
      out.write("\r\n");
      out.write(" //input { padding:5px; border:1px solid #999; border-radius:4px; -moz-border-radius:4px; -web-kit-border-radius:4px; -khtml-border-radius:4px; }\r\n");
      out.write("function stopRKey(evt) { \r\n");
      out.write("\t  var evt = (evt) ? evt : ((event) ? event : null); \r\n");
      out.write("\t  var node = (evt.target) ? evt.target : ((evt.srcElement) ? evt.srcElement : null); \r\n");
      out.write("\t  if ((evt.keyCode == 13))  {return false;} \r\n");
      out.write("\t} \r\n");
      out.write("\r\n");
      out.write("\tdocument.onkeypress = stopRKey; \r\n");
      out.write("\r\n");
      out.write("   $(function() {\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$(\"#start_Date\").datepicker({\r\n");
      out.write("\t\t\tdateFormat : 'dd/mm/yy',\r\n");
      out.write("\t\t\t\tmaxDate:'0', changeYear: true\r\n");
      out.write("\t\t}).val();\r\n");
      out.write("\t\t//  $( \"#Dateofsubmission\" ).datepicker();\r\n");
      out.write("\t});\r\n");
      out.write("</script>\r\n");
      out.write("   <script type=\"text/javascript\">\r\n");
      out.write("\tfunction frezedate(id, startDate) {\r\n");
      out.write("\t\tvar $j = jQuery.noConflict();\r\n");
      out.write("\r\n");
      out.write("\t\tvar idof = id;\r\n");
      out.write("\t\t//alert(startDate);\r\n");
      out.write("\t\t//var chunks = startDate.split('-');\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar formattedDate = startDate;\r\n");
      out.write("\t\t//alert(formattedDate);\r\n");
      out.write("\t\t$j(\"#\" + idof).datepicker({\r\n");
      out.write("\r\n");
      out.write("\t\t\tdateFormat : 'dd/mm/yy',\r\n");
      out.write("\t\t\tminDate : formattedDate,\r\n");
      out.write("\t\t\tmaxDate : '0', changeYear: true\r\n");
      out.write("\r\n");
      out.write("\t\t}).datepicker(\"show\").val();\r\n");
      out.write("\t\t//var today = new Date(); var dd = today.getDate(); \r\n");
      out.write("\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tfunction majseccheck(id) {\r\n");
      out.write("\t\t var majsec0=document.getElementById(\"Majsec\"+id).value;\r\n");
      out.write("\t\t\t$(\"#frmKm\"+id).val(null);\r\n");
      out.write("\t\t\t$(\"#toKm\"+id).val(null);\r\n");
      out.write("\t\t\tvar ans=\"No\";\r\n");
      out.write("\t\t\t//var j=document.getElementById(\"No_Majsec\").value;\r\n");
      out.write("\t\t\tfor(var i=1;i<id;i++){\r\n");
      out.write("\t\t\t//\tif (i!=id) { \r\n");
      out.write("\t\t\t\tvar majsec=document.getElementById(\"Majsec\"+i);\r\n");
      out.write("\t\t\t\tif (majsec!=\"\" && majsec!=null) {\r\n");
      out.write("\t\t\t\t\tmajsec=document.getElementById(\"Majsec\"+i).value;\r\n");
      out.write("\t\t\t\t\tif (majsec0==majsec) {\r\n");
      out.write("\t\t\t\t\t\tans=\"yes\"; i=id+1;\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t//\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tif (ans==\"yes\"){\r\n");
      out.write("\t\t\t\tvar dialogid=\"#kmdialogid\"+id;\r\n");
      out.write("\t\t\t\t $(dialogid).dialog({\r\n");
      out.write("\t\t\t        modal: true,\r\n");
      out.write("\t\t\t        autoOpen: false,\r\n");
      out.write("\t\t\t        title:\"Invalid Entry\",\r\n");
      out.write("\t\t\t        width: 400,\r\n");
      out.write("\t\t\t        height: 200\r\n");
      out.write("\t\t\t    });\r\n");
      out.write("\t\t\t\t \r\n");
      out.write("\t\t\t\t  $(dialogid).dialog('open');\r\n");
      out.write("\t\t\t\t\t$(\"#Majsec\"+id).val(\"\");\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t          return false;\r\n");
      out.write("\t\t \t\t}\r\n");
      out.write("\t  }\r\n");
      out.write("\r\n");
      out.write("\t  function stnnamecheck(id) {\r\n");
      out.write("\t\t  \tvar smajsec0=document.getElementById(\"sMajsec\"+id).value;\r\n");
      out.write("\t\t\t var stn0=document.getElementById(\"stn\"+id).value;\r\n");
      out.write("\t\t\t\tvar ans=\"No\";\r\n");
      out.write("\t\t\t\t//var j=document.getElementById(\"No_Stn\").value;\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tfor(var i=1;i<id;i++){\r\n");
      out.write("\t\t\t\t\t // alert(\"hello\"+j+\"nnn\"+i);\r\n");
      out.write("\t\t\t\t\t//if (i!=id) { \r\n");
      out.write("\t\t\t\t\tvar stn=document.getElementById(\"stn\"+i);\r\n");
      out.write("\t\t\t\t\tif (stn!=\"\" && stn!=null) {\r\n");
      out.write("\t\t\t\t\t\tvar smajsec=document.getElementById(\"sMajsec\"+i).value;\r\n");
      out.write("\t\t\t\t\t\tstn=document.getElementById(\"stn\"+i).value;\r\n");
      out.write("\t\t\t\t\t\t//alert(\"hello\"+smajsec0+stn0+\"nnn\"+smajsec+stn+\"cond\"+(stn0==stn && smajsec0==smajsec));\r\n");
      out.write("\t\t\t\t\t\tif (stn0==stn && smajsec0==smajsec) {\r\n");
      out.write("\t\t\t\t\t\t\tans=\"yes\"; i=id+1;\r\n");
      out.write("\t\t\t\t\t\t  }\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t//\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\tif (ans==\"yes\"){\r\n");
      out.write("\t\t\t\t\tvar dialogid=\"#stnnamedialogid\"+id;\r\n");
      out.write("\t\t\t\t\t $(dialogid).dialog({\r\n");
      out.write("\t\t\t\t        modal: true,\r\n");
      out.write("\t\t\t\t        autoOpen: false,\r\n");
      out.write("\t\t\t\t        title:\"Invalid Entry\",\r\n");
      out.write("\t\t\t\t        width: 400,\r\n");
      out.write("\t\t\t\t        height: 200\r\n");
      out.write("\t\t\t\t    });\r\n");
      out.write("\t\t\t\t\t \r\n");
      out.write("\t\t\t\t\t  $(dialogid).dialog('open');\r\n");
      out.write("\t\t\t\t\t\t$(\"#stn\"+id).val(\"\");\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t          return false;\r\n");
      out.write("\t\t\t \t\t}\r\n");
      out.write("\t\t  }\r\n");
      out.write("\t  function stnkmcheck(id) {\r\n");
      out.write("\t\t\t\t// Km repetition check  \r\n");
      out.write("\t\t\t\tvar smajsec0=document.getElementById(\"sMajsec\"+id).value;\r\n");
      out.write("\t\t\t\tvar stnKm1=document.getElementById(\"stnKm\"+id).value;\r\n");
      out.write("\t\t\t\tvar stnKm0=parseFloat(stnKm1);\r\n");
      out.write("\t\t\t\tvar ans=\"No\";\r\n");
      out.write("\t\t\t\tvar j=document.getElementById(\"No_Stn\").value;\r\n");
      out.write("\t\t\t\tfor(var i=1;i<=j;i++){\r\n");
      out.write("\t\t\t\t\t//  alert(\"hello\"+j+\"nnn\"+i);\r\n");
      out.write("\t\t\t\t\tif (i!=id) { \r\n");
      out.write("\t\t\t\t\tvar stnKm=document.getElementById(\"stnKm\"+i);\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t  if (stnKm!=\"\" && stnKm!=null) {\r\n");
      out.write("\t\t\t\t\t\tstnKm=document.getElementById(\"stnKm\"+i).value;\r\n");
      out.write("\t\t\t\t\t\tvar smajsec=document.getElementById(\"sMajsec\"+i).value;\r\n");
      out.write("\t\t\t\t\t\tif (stnKm0==stnKm && smajsec0==smajsec) {\r\n");
      out.write("\t\t\t\t\t\t\tans=\"yes\"; i=j+1;\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tif (ans==\"yes\"){\r\n");
      out.write("\t\t\t\t\tvar dialogid=\"#stnkmdialogid\"+id;\r\n");
      out.write("\t\t\t\t\t $(dialogid).dialog({\r\n");
      out.write("\t\t\t\t        modal: true,\r\n");
      out.write("\t\t\t\t        autoOpen: false,\r\n");
      out.write("\t\t\t\t        title:\"Invalid Entry\",\r\n");
      out.write("\t\t\t\t        width: 400,\r\n");
      out.write("\t\t\t\t        height: 200\r\n");
      out.write("\t\t\t\t    });\r\n");
      out.write("\t\t\t\t\t \r\n");
      out.write("\t\t\t\t\t  $(dialogid).dialog('open');\r\n");
      out.write("\t\t\t\t\t\t$(\"#stnKm\"+id).val(\"\");\r\n");
      out.write("\t\t \t\t}\r\n");
      out.write("\t\t\t\t// Km limit check \r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t//var smajsec0=document.getElementById(\"sMajsec\"+id).value;\r\n");
      out.write("\t\t\t\t var ans1=\"No\";\r\n");
      out.write("\t\t\t\t var j1=document.getElementById(\"No_Majsec\").value;\r\n");
      out.write("\t\t\t\t\tfor(var i=1;i<=j1;i++){\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tvar majsec=document.getElementById(\"Majsec\"+i);\r\n");
      out.write("\t\t\t\tif (majsec!=\"\" && majsec!=null) {\r\n");
      out.write("\t\t\t\t\tmajsec=document.getElementById(\"Majsec\"+i).value;\r\n");
      out.write("\t\t\t\t\tif (smajsec0==majsec) {\r\n");
      out.write("\t\t\t\t\tvar frmKm1=document.getElementById(\"frmKm\"+i).value;\r\n");
      out.write("\t\t\t\t\tvar toKm1=document.getElementById(\"toKm\"+i).value;\r\n");
      out.write("\t\t\t\t\tvar frmKm=parseFloat(frmKm1);\r\n");
      out.write("\t\t\t\t\tvar toKm=parseFloat(toKm1);\r\n");
      out.write("\t\t\t\t\tif (stnKm0!=\"\" && stnKm0!=null) {\r\n");
      out.write("\t\t\t\t\t\tif (toKm>frmKm) { \r\n");
      out.write("\t\t\t\t\t\t\tif ((stnKm0 < frmKm) || (stnKm0 > toKm)) {\r\n");
      out.write("\t\t\t\t\t\t\t\t//alert(\"111stnkm<frmkm or >tokm\");\r\n");
      out.write("\t\t\t\t\t\t\t\tans1=\"yes\"; i=j1+1;\r\n");
      out.write("\t\t\t\t\t\t\t} \r\n");
      out.write("\t\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\tif ((stnKm0 < toKm) || (stnKm0 > frmKm)) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tans1=\"yes\"; i=j1+1;\r\n");
      out.write("\t\t\t\t\t\t\t\t//\talert(\"22stnkm<tokm or >frmkm\");\r\n");
      out.write("\t\t\t\t\t\t\t\t} }\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\tif (ans1==\"yes\"){\r\n");
      out.write("\t\t\t\t\t\tvar dialogid=\"#stnkm1dialogid\"+id;\r\n");
      out.write("\t\t\t\t\t\t $(dialogid).dialog({\r\n");
      out.write("\t\t\t\t\t        modal: true,\r\n");
      out.write("\t\t\t\t\t        autoOpen: false,\r\n");
      out.write("\t\t\t\t\t        title:\"Invalid Entry\",\r\n");
      out.write("\t\t\t\t\t        width: 400,\r\n");
      out.write("\t\t\t\t\t        height: 200\r\n");
      out.write("\t\t\t\t\t    });\r\n");
      out.write("\t\t\t\t\t\t \r\n");
      out.write("\t\t\t\t\t\t  $(dialogid).dialog('open');\r\n");
      out.write("\t\t\t\t\t\t\t$(\"#stnKm\"+id).val(\"\");\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t          return false;\r\n");
      out.write("\t\t\t\t \t\t}\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t  }\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t  function stnmajseccheck(id) {\r\n");
      out.write("\t\t  var smajsec=document.getElementById(\"sMajsec\"+id).value;\r\n");
      out.write("\t\t\tvar ans=\"No\";\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$(\"#stn\"+id).val(null);\r\n");
      out.write("\t\t\t$(\"#stnKm\"+id).val(null);\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tvar j=document.getElementById(\"No_Majsec\").value;\r\n");
      out.write("\t\t\tfor(var i=1;i<=j;i++){\r\n");
      out.write("\t\t\t\tvar majsec=document.getElementById(\"Majsec\"+i);\r\n");
      out.write("\t\t\t\tif (majsec!=\"\" && majsec!=null) {\r\n");
      out.write("\t\t\t\t\tmajsec=document.getElementById(\"Majsec\"+i).value;\r\n");
      out.write("\t\t\t\t\tvar majdel1=document.getElementById(\"majdel\"+i).value;\r\n");
      out.write("\t\t\t\t\tif (smajsec==majsec && majdel1==\"Delete\") {\r\n");
      out.write("\t\t\t\t\t\tans=\"yes\";\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\tif (ans==\"No\"){\r\n");
      out.write("\t\t\t\t//.............................fill up here\r\n");
      out.write("\t\t\t\tvar dialogid=\"#stndialogid\"+id;\r\n");
      out.write("\t\t\t\t //alert(\"c..\"+id+\",,,\"+dialogid+\"...\"+ans)\r\n");
      out.write("\t\t\t\t $(dialogid).dialog({\r\n");
      out.write("\t\t\t        modal: true,\r\n");
      out.write("\t\t\t        autoOpen: false,\r\n");
      out.write("\t\t\t        title:\"Invalid Entry\",\r\n");
      out.write("\t\t\t        width: 400,\r\n");
      out.write("\t\t\t        height: 200\r\n");
      out.write("\t\t\t      });\r\n");
      out.write("\t\t\t\t \r\n");
      out.write("\t\t\t\t  $(dialogid).dialog('open');\r\n");
      out.write("\t\t\t\t\t$(\"#sMajsec\"+id).val(\"\");\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t          return false;\r\n");
      out.write("\t\t \t\t}\r\n");
      out.write("\t  }\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("    function refreshAndClose() {\r\n");
      out.write("        window.opener.location.reload(true);\r\n");
      out.write("        window.close();\r\n");
      out.write("    }\r\n");
      out.write("</script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("function loadXMLDoc(element,er)\r\n");
      out.write("{\r\n");
      out.write("var xmlhttp;\r\n");
      out.write("var k1=document.getElementById(element).value;\r\n");
      out.write("k1=k1.replace( /\\s\\s+/g, ' ' );   \r\n");
      out.write("var k = encodeURIComponent(k1);\r\n");
      out.write("document.getElementById(element).value=k1;\r\n");
      out.write("var urls=\"projectexist.jsp?ver=\"+k;\r\n");
      out.write("\r\n");
      out.write("if (window.XMLHttpRequest)\r\n");
      out.write("  {\r\n");
      out.write("  xmlhttp=new XMLHttpRequest();\r\n");
      out.write("  }\r\n");
      out.write("else\r\n");
      out.write("  {\r\n");
      out.write("  xmlhttp=new ActiveXObject(\"Microsoft.XMLHTTP\");\r\n");
      out.write("  }\r\n");
      out.write("xmlhttp.onreadystatechange=function()\r\n");
      out.write("  {\r\n");
      out.write("  if (xmlhttp.readyState==4)\r\n");
      out.write("    {\r\n");
      out.write("        //document.getElementById(\"err\").style.color=\"red\";\r\n");
      out.write("        document.getElementById(er).innerHTML=xmlhttp.responseText;\r\n");
      out.write("\t\tvar ex=document.getElementById(\"exist\");\r\n");
      out.write("\t\tif(ex!=null){\r\n");
      out.write("\t\t\tdocument.getElementById(\"btnclick\").disabled = true;\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t}else{\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tdocument.getElementById(\"btnclick\").disabled = false;\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("    }\r\n");
      out.write("  }\r\n");
      out.write("xmlhttp.open(\"GET\",urls,true);\r\n");
      out.write("xmlhttp.send();\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("function showDivisionspackage(str,index) {\r\n");
      out.write("\tshowDivisionspackagesub1(str,index);\r\n");
      out.write("//\tshowDivisionspackagesub2(str,index);\r\n");
      out.write("\t\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function showDivisionspackagesub1(str1,index){\r\n");
      out.write("\tvar str = encodeURIComponent(str1);\r\n");
      out.write("\t//alert(\"zone1:.....\"+str+\"index\"+index);\r\n");
      out.write("\tindex1=index;\r\n");
      out.write("\tvar test=\"test\"+index1;\r\n");
      out.write("\tvar a=\"#\"+test;\r\n");
      out.write("\tvar div = document.getElementById(test);\r\n");
      out.write("\t //if (div.style.display !== \"none\") {\r\n");
      out.write("   //     div.style.display = \"none\";\r\n");
      out.write("    //    $(\"a\").val(null); \r\n");
      out.write("   // }\r\n");
      out.write("   \tdiv.innerHTML=\"\"; \r\n");
      out.write("\tif (typeof XMLHttpRequest != \"undefined\") {\r\n");
      out.write("\t\txmlHttp3 = new XMLHttpRequest();\r\n");
      out.write("\t} else if (window.ActiveXObject) {\r\n");
      out.write("\t\txmlHttp3 = new ActiveXObject(\"Microsoft.XMLHTTP\");\r\n");
      out.write("\t}\r\n");
      out.write("\tif (xmlHttp3 == null) {\r\n");
      out.write("\t\talert(\"Browser does not support XMLHTTP Request\")\r\n");
      out.write("\t\treturn;\r\n");
      out.write("\t}\r\n");
      out.write("\tvar url = \"modifycheck.jsp\";\r\n");
      out.write("\tvar z=\"Zone 1\";\r\n");
      out.write("\turl += \"?cont=\" + str+\"&zone=\"+z+\"&index=\"+index+\"&id=1\";\r\n");
      out.write("\t//alert(\"zone1:\"+url);\r\n");
      out.write("\txmlHttp3.onreadystatechange = stateChangespackage;\r\n");
      out.write("\txmlHttp3.open(\"GET\", url, true);\r\n");
      out.write("\txmlHttp3.send(null);\r\n");
      out.write("\t\r\n");
      out.write("}\r\n");
      out.write("/*\r\n");
      out.write("function showDivisionspackagesub2(str,index){\r\n");
      out.write("\tvar test=\"test\"+index;\r\n");
      out.write("\tvar a=\"#\"+test;\r\n");
      out.write("\tvar div = document.getElementById(test);\r\n");
      out.write("   // if (div.style.display !== \"none\") {\r\n");
      out.write("    //    div.style.display = \"none\";\r\n");
      out.write("     //   $(\"a\").val(null); \r\n");
      out.write("   // }\r\n");
      out.write("    div.innerHTML=\"\"; \r\n");
      out.write("\t\r\n");
      out.write("\tindex1=index;\r\n");
      out.write("\tif (typeof XMLHttpRequest != \"undefined\") {\r\n");
      out.write("\t\txmlHttp2 = new XMLHttpRequest();\r\n");
      out.write("\t} else if (window.ActiveXObject) {\r\n");
      out.write("\t\txmlHttp2 = new ActiveXObject(\"Microsoft.XMLHTTP\");\r\n");
      out.write("\t}\r\n");
      out.write("\tif (xmlHttp2 == null) {\r\n");
      out.write("\t\talert(\"Browser does not support XMLHTTP Request\")\r\n");
      out.write("\t\treturn;\r\n");
      out.write("\t}\r\n");
      out.write("\tvar url = \"modifycheck.jsp\";\r\n");
      out.write("\tvar z=\"Zone 1\";\r\n");
      out.write("\turl += \"?cont=\" + str+\"&zone=\"+z+\"&index=\"+index+\"&id=1\";\r\n");
      out.write("\txmlHttp2.onreadystatechange = stateChangespackage;  // need to be changed for another dropdown\r\n");
      out.write("\txmlHttp2.open(\"GET\", url, true);\r\n");
      out.write("\txmlHttp2.send(null);\r\n");
      out.write("\t\r\n");
      out.write("}\r\n");
      out.write("*/\r\n");
      out.write("\r\n");
      out.write("function stateChangespackage() {\r\n");
      out.write("\tvar divid=\"test\"+index1;\r\n");
      out.write("\r\n");
      out.write("\tif (xmlHttp3.readyState == 4 || xmlHttp3.readyState == \"complete\") {\r\n");
      out.write("\t\tdocument.getElementById(divid).innerHTML = xmlHttp3.responseText\r\n");
      out.write("\t}\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function showDivisions2package(str1,index) {\r\n");
      out.write("\tvar str = encodeURIComponent(str1);\r\n");
      out.write("\tindex2=index;\r\n");
      out.write("\tif (typeof XMLHttpRequest != \"undefined\") {\r\n");
      out.write("\t\txmlHttp3 = new XMLHttpRequest();\r\n");
      out.write("\t} else if (window.ActiveXObject) {\r\n");
      out.write("\t\txmlHttp3 = new ActiveXObject(\"Microsoft.XMLHTTP\");\r\n");
      out.write("\t}\r\n");
      out.write("\tif (xmlHttp3 == null) {\r\n");
      out.write("\t\talert(\"Browser does not support XMLHTTP Request\")\r\n");
      out.write("\t\treturn;\r\n");
      out.write("\t}\r\n");
      out.write("\tif (typeof XMLHttpRequest != \"undefined\") {\r\n");
      out.write("\t\txmlHttp2 = new XMLHttpRequest();\r\n");
      out.write("\t} else if (window.ActiveXObject) {\r\n");
      out.write("\t\txmlHttp2= new ActiveXObject(\"Microsoft.XMLHTTP\");\r\n");
      out.write("\t}\r\n");
      out.write("\tif (xmlHttp2== null) {\r\n");
      out.write("\t\talert(\"Browser does not support XMLHTTP Request\")\r\n");
      out.write("\t\treturn;\r\n");
      out.write("\t}\r\n");
      out.write("\tvar url = \"modifycheck.jsp\";\r\n");
      out.write("\tvar z=\"Zone 2\";\r\n");
      out.write("\turl += \"?cont=\" + str+\"&zone=\"+z+\"&index=\"+index+\"&id=2\";\r\n");
      out.write("\txmlHttp3.onreadystatechange = stateChanges2package;\r\n");
      out.write("\txmlHttp3.open(\"GET\", url, true);\r\n");
      out.write("\txmlHttp3.send(null);\r\n");
      out.write("}\r\n");
      out.write("function stateChanges2package() {\r\n");
      out.write("\tvar divid=\"test\"+index2+index2;\r\n");
      out.write("\r\n");
      out.write("\tif (xmlHttp3.readyState == 4 || xmlHttp3.readyState == \"complete\") {\r\n");
      out.write("\t\tdocument.getElementById(divid).innerHTML = xmlHttp3.responseText\r\n");
      out.write("\t}\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\r\n");
      out.write("\t$(document).ready(function() {\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t  $('input').on('keypress', function (event) {\r\n");
      out.write("\t  \t\t    //var regex = new RegExp(\"^[a-zA-Z0-9]+$\");\r\n");
      out.write("\t  \t\t    var regex = new RegExp(\"['?!<\\\">\\\\\\\\&]+$\");\r\n");
      out.write("\t  \t\t    var key = String.fromCharCode(!event.charCode ? event.which : event.charCode);\r\n");
      out.write("\t  \t\t    if (regex.test(key)) {\r\n");
      out.write("\t  \t\t       event.preventDefault();\r\n");
      out.write("\t  \t\t       return false;\r\n");
      out.write("\t  \t\t    }\r\n");
      out.write("\t   \t  });\r\n");
      out.write("\t    \r\n");
      out.write("\t   \t\t\r\n");
      out.write("\t  \t$('#Project').on('keypress', function (event) {\r\n");
      out.write("\t  \t\t   // var regex = new RegExp(\"^[a-zA-Z0-9]+$\");\r\n");
      out.write("\t  \t\t  var regex = new RegExp(\"['?!<\\\">\\\\\\\\&]+$\");\r\n");
      out.write("\t  \t\t    var key = String.fromCharCode(!event.charCode ? event.which : event.charCode);\r\n");
      out.write("\t  \t\t    if (regex.test(key)) {\r\n");
      out.write("\t  \t\t       event.preventDefault();\r\n");
      out.write("\t  \t\t       return false;\r\n");
      out.write("\t  \t\t    }\r\n");
      out.write("\t  \t\t});\r\n");
      out.write("\r\n");
      out.write("\t    var wrapper         = $(\".input_fields_wrap\"); //Fields wrapper\r\n");
      out.write("\t    var add_button      = $(\".add_field_button\"); //Add button ID \r\n");
      out.write("\t    \r\n");
      out.write("\t    //alert(basis1);\r\n");
      out.write("\t    var x = 1; //initlal text box count\r\n");
      out.write("\t    var sx=1;\r\n");
      out.write("\t    var mx=1;\r\n");
      out.write("    $(add_button).click(function(e){ //on add input button click\r\n");
      out.write("        e.preventDefault();\r\n");
      out.write("        var j=document.getElementById(\"counttest\").value;\r\n");
      out.write("\t\tvar max=17;\r\n");
      out.write("\t\tvar max_fields=max-j;\r\n");
      out.write("\t\t//var max_fields      = diff; //maximum input boxes allowed\r\n");
      out.write("\t    var basis1 \t\t\t= document.getElementById(\"pack\").value;\r\n");
      out.write("\t    var dateofproject \t= document.getElementById(\"dateofproject\").value;\r\n");
      out.write("\t    var piuname\t\t\t= document.getElementById(\"PIU_name\").value; \r\n");
      out.write("        var packal3=\"\";\r\n");
      out.write("\t\tfor (var i=0; i<(j-1); i++) {\r\n");
      out.write("\t\t\tvar pacname3=document.getElementById(\"Package\"+i).value; \r\n");
      out.write("\t\tif (i==0) {\r\n");
      out.write("\t\t\tpackal3=pacname3;\r\n");
      out.write("\t\t\t} else {\r\n");
      out.write("\t\t\t\tpackal3=packal3+\"~\"+pacname3;\t\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("        if(x < max_fields){ //max input box allowed\r\n");
      out.write("            x++; //text box increment\r\n");
      out.write("            /* /* $(wrapper).append('<div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Package Name &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<input type=\"text\" name=\"mytext[]\" style=\"width: 240px;\"/><a href=\"#\" class=\"remove_field\">Remove</a></div>'); */ //add input box\r\n");
      out.write("             var url=\"addmorepackage.jsp?type=package&dateofproject=\"+dateofproject+\"&projectid=\"+basis1+\"&packal3=\"+packal3+\"&PIU=\"+piuname;\r\n");
      out.write("        \twindow.open(url,this.target );\r\n");
      out.write("        }\r\n");
      out.write("    });\r\n");
      out.write("    //'width=800,height=900,scrollbars=1,top=0px,left=300px'\r\n");
      out.write("    $(wrapper).on(\"click\",\".remove_field\", function(e){ //user click on remove text\r\n");
      out.write("        e.preventDefault(); $(this).parent('div').remove(); x--;\r\n");
      out.write("    });\r\n");
      out.write("  /*  \r\n");
      out.write("    \r\n");
      out.write("   */ \r\n");
      out.write("    $('#addmajor1').click(function(e){ //on add input button click\r\n");
      out.write("        e.preventDefault();\r\n");
      out.write("        var jk=document.getElementById(\"No_Majsec\").value;\r\n");
      out.write("\t\tvar max=10;\r\n");
      out.write("\t\tif(jk < max){ //max input box allowed\r\n");
      out.write("            var j1= parseInt(jk)+1;\r\n");
      out.write("            var maj4=\"#Majorsec\"+jk;\r\n");
      out.write("           // var majsecid2=document.getElementById(\"Stnid22\"+j1).value;\r\n");
      out.write("           var majsecid2=null;\r\n");
      out.write("           // alert(\"maj4\"+maj4+\"j=\"+j1+\"jk\"+jk);\r\n");
      out.write("            if (j1==10) {var marg=\"margin-left: 15px;\"} else {var marg=\"margin-left: 22px;\"}\r\n");
      out.write("             $(\"<br><div id='Majorsec\"+j1+\"' style='display: inline'>\"+j1+\"<INPUT TYPE='HIDDEN' NAME='Majsecid22\"+j1+\"'>&nbsp;<input type='text' name='Majsec\"+j1+\"' id ='Majsec\"+j1+\"'  maxlength='150' style='width:205px;\"+  marg+\"  margin-top: 15px;' onchange='majseccheck(\"+j1+\");'> &nbsp;\"+\r\n");
      out.write("             \"&nbsp;<input type='number' Step='0.001' name='frmKm\"+j1+\"' id ='frmKm\"+j1+\"'  style='width:80px; margin-left:10px;margin-top: 15px;' >\"+\r\n");
      out.write("             \"&nbsp;&nbsp;&nbsp;<input type='number' Step='0.001' name='toKm\"+j1+\"' id ='toKm\"+j1+\"'  style='width:80px; margin-left:10px;margin-top: 15px;'>\"+\r\n");
      out.write("             \"&nbsp;&nbsp;&nbsp;&nbsp; <input  type='button' class='btn btn-warning' id='majdelBtn\"+j1+\"' value='Delete' onClick='deletemajsec(\\\"\"+j1+\"\\\", this.value)' /> <INPUT TYPE='HIDDEN' ID='majdel\"+j1+\"' NAME='majdel\"+j1+\"' value='Delete'> \"+\r\n");
      out.write("             \"<div id='kdialogid\"+j1+\"' style='display: none' align='center'><br> Are You Sure You Want To Delete Major Section entry<br> <br>\"+\r\n");
      out.write("             \"<button id='ok\"+j1+\"' class='btn btn-primary' onclick='majsecdelete(\\\"\"+majsecid2+\"\\\",\\\"\"+j1+\"\\\");'>OK</button> <button id='cancel\"+j1+\"' class='btn btn-primary' \"+\r\n");
      out.write("             \" onclick='$(\\\"#kdialogid\"+j1+\"\\\").dialog(\\\"close\\\");'>cancel</button> </div> \" +\r\n");
      out.write("             \"<div id='kmdialogid\"+j1+\"' style='display: none' align='center'><br> Duplicate 'Major Section' entry......<br><br>\"+\r\n");
      out.write("      \t\t\"<button id='canclez\"+j1+\"' class='btn btn-primary' onclick='$(\\\"#kmdialogid\"+j1+\"\\\").dialog(\\\"close\\\");$(\\\"#Majsec\"+j1+\"\\\").focus(); $(\\\"#Majsec\"+j1+\"\\\")[0].setSelectionRange(0,1);'>cancel</button></div></div>\").insertAfter(maj4);\r\n");
      out.write("             \t\t\t\t\t\t\t\t               \t\t\r\n");
      out.write("\r\n");
      out.write("             // mx++; //text box increment\r\n");
      out.write("             document.getElementById(\"No_Majsec\").value=j1; \r\n");
      out.write("           } else {\tvar dialogid=\"#kdialogid22\";\r\n");
      out.write("    \t\t\t$(dialogid).dialog({\r\n");
      out.write("    \t        modal: true,\r\n");
      out.write("    \t        autoOpen: false,\r\n");
      out.write("    \t        title: \"Alert\",\r\n");
      out.write("    \t        width: 400,\r\n");
      out.write("    \t        height: 200\r\n");
      out.write("    \t    });\r\n");
      out.write("    \t\t \r\n");
      out.write("    \t\t  $(dialogid).dialog('open');\r\n");
      out.write("    \t  \t}\r\n");
      out.write("\t\t $('input').on('keypress', function (event) {\r\n");
      out.write("\t  \t\t    //var regex = new RegExp(\"^[a-zA-Z0-9]+$\");\r\n");
      out.write("\t  \t\t    var regex = new RegExp(\"['?!<\\\">\\\\\\\\&]+$\");\r\n");
      out.write("\t  \t\t    var key = String.fromCharCode(!event.charCode ? event.which : event.charCode);\r\n");
      out.write("\t  \t\t    if (regex.test(key)) {\r\n");
      out.write("\t  \t\t       event.preventDefault();\r\n");
      out.write("\t  \t\t       return false;\r\n");
      out.write("\t  \t\t    }\r\n");
      out.write("\t   \t  });\r\n");
      out.write("\t    \r\n");
      out.write("    \r\n");
      out.write("    });\r\n");
      out.write("  \r\n");
      out.write("    $('#addstn1').click(function(e){ //on add input button click\r\n");
      out.write("        e.preventDefault();\r\n");
      out.write("        var j=document.getElementById(\"No_Stn\").value;\r\n");
      out.write("\t\tvar max=100;\r\n");
      out.write("\t\tif(j < max) { //max input box allowed\r\n");
      out.write("            var j1= parseInt(j)+1;\r\n");
      out.write("            var maj4=\"#sMajorsec\"+j;\r\n");
      out.write("            //var stnid2=document.getElementById(\"Stnid22\"+j1).value;\r\n");
      out.write("            var stnid2=null;\r\n");
      out.write("                        //alert(\"maj4\"+maj4+j1);\r\n");
      out.write("             if (j1==10) {var marg=\"margin-left: 15px;\"} else {var marg=\"margin-left: 25px;\"}\r\n");
      out.write("             $(\"<br><div id='sMajorsec\"+j1+\"' style='display: inline'>\"+j1+\"<INPUT TYPE='HIDDEN' NAME='Stnid22\"+j1+\"'><input type='text' name='sMajsec\"+j1+\"' id ='sMajsec\"+j1+\"' maxlength='150' style='width:205px; \"+ marg+\" margin-top: 15px;' onchange='stnmajseccheck(\"+j1+\");'>\"+\r\n");
      out.write("             \"&nbsp;&nbsp;&nbsp;<input type='text' name='stn\"+j1+\"' id ='stn\"+j1+\"' maxlength='75' style='width:100px; margin-left:10px;margin-top: 15px;' onchange='stnnamecheck(\"+j1+\");' >\"+\r\n");
      out.write("             \"&nbsp; &nbsp; <input type='number' Step='0.001' name='stnKm\"+j1+\"' id ='stnKm\"+j1+\"'  style='width:80px; margin-left:10px;margin-top: 15px;' onchange='stnkmcheck(\"+j1+\");'>\"+\r\n");
      out.write("             \"&nbsp;&nbsp;&nbsp; <input  type='button' class='btn btn-warning' id='sdelBtn\"+j1+\"' value='Delete' onClick='deletestn(\\\"\"+j1+\"\\\", this.value)' /> <INPUT TYPE='HIDDEN' ID='sdel\"+j1+\"' NAME='sdel\"+j1+\"' value='Delete'>  \"+\r\n");
      out.write("             \"<div id='sdialogid\"+j1+\"' style='display: none' align='center'><br> Are You Sure You Want To Delete this Station entry<br><br><button id='oka\"+j1+\"' class='btn btn-primary' \"+\r\n");
      out.write("             \" onclick='stndelete(\\\"\"+stnid2+\"\\\",\\\"\"+j1+\"\\\");'>OK</button><button id='cancelc\"+j1+\"' class='btn btn-primary' onclick='$(\\\"#sdialogid\"+j1+\"\\\").dialog(\\\"close\\\");' >cancel</button></div> <div id='stndialogid\"+j1+\"' style='display: none' align='center'><br>\"+\r\n");
      out.write("             \"Not a Valid entry. Major Section should be one of the mentioned above in km wise details.....<br><br> <button id='canclea\"+j1+\"' class='btn btn-primary' onclick='$(\\\"#stndialogid\"+j1+\"\\\").dialog(\\\"close\\\");\"+\r\n");
      out.write("             \" $(\\\"#sMajsec\"+j1+\"\\\").focus(); $(\\\"#sMajsec\"+j1+\"\\\")[0].setSelectionRange(0,1); '>cancel</button></div><div id='stnnamedialogid\"+j1+\"' style='display: none' align='center'> <br> Duplicate 'Station Name' entry..........<br><br>\"+\r\n");
      out.write("             \" <button id='canclee\"+j1+\"' class='btn btn-primary' onclick='$(\\\"#stnnamedialogid\"+j1+\"\\\").dialog(\\\"close\\\");$(\\\"#stn\"+j1+\"\\\").focus(); $(\\\"#stn\"+j1+\"\\\")[0].setSelectionRange(0,1);'>cancel</button></div> <div id='stnkmdialogid\"+j1+\"' style='display: none'\"+\r\n");
      out.write("             \" align='center'><br> Duplicate 'Station Km' entry..........<br><br><button id='canclef\"+j1+\"' class='btn btn-primary' onclick='$(\\\"#stnkmdialogid\"+j1+\"\\\").dialog(\\\"close\\\");$(\\\"#stnKm\"+j1+\"\\\").focus();'>cancel</button></div>\"+\r\n");
      out.write("             \" <div id='stnkm1dialogid\"+j1+\"' style='display: none' align='center'> <br> 'Station Km' entered is not within the km limits of the major section given above.........<br><br> <button id='canclef\"+j1+\"' class='btn btn-primary' onclick='$(\\\"#stnkm1dialogid\"+j1+\"\\\").dialog(\\\"close\\\");\"+\r\n");
      out.write("             \" $(\\\"#stnKm\"+j1+\"\\\").focus();'>cancel</button> </div></div>\" ).insertAfter(maj4);\r\n");
      out.write("           \r\n");
      out.write("            // sx++; //text box increment\r\n");
      out.write("             document.getElementById(\"No_Stn\").value=j1; \r\n");
      out.write("             \r\n");
      out.write("           } else { \tvar dialogid=\"#sdialogid222\";\r\n");
      out.write("    \t\t\t$(dialogid).dialog({\r\n");
      out.write("    \t        modal: true,\r\n");
      out.write("    \t        autoOpen: false,\r\n");
      out.write("    \t        title: \"Alert\",\r\n");
      out.write("    \t        width: 400,\r\n");
      out.write("    \t        height: 200\r\n");
      out.write("    \t    });\r\n");
      out.write("    \t\t \r\n");
      out.write("    \t\t  $(dialogid).dialog('open');\r\n");
      out.write("    \t  \t}\r\n");
      out.write("\t\t $('input').on('keypress', function (event) {\r\n");
      out.write("\t  \t\t    //var regex = new RegExp(\"^[a-zA-Z0-9]+$\");\r\n");
      out.write("\t  \t\t    var regex = new RegExp(\"['?!<\\\">\\\\\\\\&]+$\");\r\n");
      out.write("\t  \t\t    var key = String.fromCharCode(!event.charCode ? event.which : event.charCode);\r\n");
      out.write("\t  \t\t    if (regex.test(key)) {\r\n");
      out.write("\t  \t\t       event.preventDefault();\r\n");
      out.write("\t  \t\t       return false;\r\n");
      out.write("\t  \t\t    }\r\n");
      out.write("\t   \t  });\r\n");
      out.write("\t    \r\n");
      out.write("});\r\n");
      out.write("    });\r\n");
      out.write(" \r\n");
      out.write(" function deletemajsec(id,str){\r\n");
      out.write("\t if (str==\"Delete\") {\r\n");
      out.write("\t\t $(\"#majdelBtn\"+id).val(\"Undelete\");\r\n");
      out.write("\t\t $(\"#majdel\"+id).val(\"Undelete\");\r\n");
      out.write("\t\t var maj2= document.getElementById(\"Majsec\"+id).value;\r\n");
      out.write("\t\t var nstn= document.getElementById(\"No_Stn\").value;\r\n");
      out.write("\t\t $(\"#Majsec\"+id).prop(\"disabled\", true);   \r\n");
      out.write("\t\t $(\"#frmKm\"+id).prop(\"disabled\", true);   \r\n");
      out.write("\t\t $(\"#toKm\"+id).prop(\"disabled\", true);  \r\n");
      out.write("\t\t// alert(\"maj\"+maj2);\r\n");
      out.write("\t\t for (var i = 1; i <= nstn; i++) {\r\n");
      out.write("\t\t\tif ($(\"#sMajsec\"+i).val()==maj2){\r\n");
      out.write("\t\t\t\t$(\"#sMajsec\"+i).prop(\"disabled\", true);   \r\n");
      out.write("\t\t\t\t $(\"#stn\"+i).prop(\"disabled\", true);   \r\n");
      out.write("\t\t\t\t $(\"#stnKm\"+i).prop(\"disabled\", true); \r\n");
      out.write("\t\t\t\t $(\"#sdelBtn\"+i).val(\"Undelete\");\r\n");
      out.write("\t\t\t\t $(\"#sdelBtn\"+i).prop(\"disabled\", true); \r\n");
      out.write("\t\t\t\t $(\"#sdel\"+i).val(\"Undelete\");\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t }\r\n");
      out.write("\t } else if (str==\"Undelete\") {\r\n");
      out.write("\t\t $(\"#majdelBtn\"+id).val(\"Delete\");\r\n");
      out.write("\t\t $(\"#majdel\"+id).val(\"Delete\");\r\n");
      out.write("\t\t var maj2= document.getElementById(\"Majsec\"+id).value;\r\n");
      out.write("\t\t var nstn= document.getElementById(\"No_Stn\").value;\r\n");
      out.write("\t\t $(\"#Majsec\"+id).prop(\"disabled\", false); \r\n");
      out.write("\t\t $(\"#frmKm\"+id).prop(\"disabled\", false);   \r\n");
      out.write("\t\t $(\"#toKm\"+id).prop(\"disabled\", false);  \r\n");
      out.write("\t\t for (var i = 1; i <= nstn; i++) {\r\n");
      out.write("\t\t\t\tif ($(\"#sMajsec\"+i).val()==maj2){\r\n");
      out.write("\t\t\t\t\t$(\"#sMajsec\"+i).prop(\"disabled\", false);   \r\n");
      out.write("\t\t\t\t\t $(\"#stn\"+i).prop(\"disabled\", false);   \r\n");
      out.write("\t\t\t\t\t $(\"#stnKm\"+i).prop(\"disabled\", false); \r\n");
      out.write("\t\t\t\t\t $(\"#sdelBtn\"+i).val(\"Delete\");\r\n");
      out.write("\t\t\t\t\t $(\"#sdelBtn\"+i).prop(\"disabled\", false); \r\n");
      out.write("\t\t\t\t\t $(\"#sdel\"+i).val(\"Delete\");\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t }\r\n");
      out.write("\t }\r\n");
      out.write("}\r\n");
      out.write("   \t\r\n");
      out.write("\t function deletestn(id, str){\r\n");
      out.write("\t\t if (str==\"Delete\") {\r\n");
      out.write("\t\t\t $(\"#sdelBtn\"+id).val(\"Undelete\");\r\n");
      out.write("\t\t\t $(\"#sdel\"+id).val(\"Undelete\");\r\n");
      out.write("\t\t\t $(\"#sMajsec\"+id).prop(\"disabled\", true);   \r\n");
      out.write("\t\t\t $(\"#stn\"+id).prop(\"disabled\", true);   \r\n");
      out.write("\t\t\t $(\"#stnKm\"+id).prop(\"disabled\", true);   \r\n");
      out.write("\t\t\t// alert(\"delid=\"+id);\r\n");
      out.write("\t\t } else if (str==\"Undelete\") {\r\n");
      out.write("\t\t\t $(\"#sdelBtn\"+id).val(\"Delete\");\r\n");
      out.write("\t\t\t $(\"#sdel\"+id).val(\"Delete\");\r\n");
      out.write("\t\t\t $(\"#sMajsec\"+id).prop(\"disabled\", false); \r\n");
      out.write("\t\t\t $(\"#stn\"+id).prop(\"disabled\", false);   \r\n");
      out.write("\t\t\t $(\"#stnKm\"+id).prop(\"disabled\", false);  \r\n");
      out.write("\t\t }\r\n");
      out.write("}\r\n");
      out.write("   \r\n");
      out.write("\t\r\n");
      out.write("\r\n");
      out.write(" function deletepackage1(id){\r\n");
      out.write("\t\t var dialogid=\"#dialogid\"+id;\r\n");
      out.write("\t\t $(dialogid).dialog({\r\n");
      out.write("\t        modal: true,\r\n");
      out.write("\t        autoOpen: false,\r\n");
      out.write("\t        title: \"Alert\",\r\n");
      out.write("\t        width: 400,\r\n");
      out.write("\t        height: 200\r\n");
      out.write("\t    });\r\n");
      out.write("\t\t \r\n");
      out.write("\t\t  $(dialogid).dialog('open');\r\n");
      out.write("\t}\r\n");
      out.write(" \r\n");
      out.write("\tfunction packagedelete1(id){\r\n");
      out.write("\t\tdocument.CreateProject.doc_id.value=id;\r\n");
      out.write("\t\tdocument.CreateProject.deletepackage.value=\"delete\";\r\n");
      out.write("\t\tdocument.getElementById(\"CreateProject\").submit();\r\n");
      out.write("\t}\r\n");
      out.write(" \r\n");
      out.write(" </script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
String user = (String)session.getAttribute("user_name");
//System.out.println("UZER:"+user);
String Id =request.getParameter("ID");
int count1=0;

      out.write("\r\n");
      out.write("<input type=\"hidden\" name=\"project_Id\" id=\"project_Id\" value=\"");
      out.print(Id);
      out.write("\">\r\n");
      out.write("<div class=\"absolute\" style=\"font-weight:bold\" ><h8>&nbsp;&nbsp;&nbsp;[Modify Project] &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</h8>\r\n");
      out.write("\r\n");
      out.write("<h8><font style=\"color:red; font-weight:normal\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Welcome&nbsp;</font><font style=\"color:#3333cc; font-weight:normal\">:&nbsp;");
      out.print((String)session.getAttribute("user_name") );
      out.write("&nbsp;&nbsp;&nbsp;</font></h8>\r\n");
      out.write("</div>\r\n");
      out.write("<form name=\"CreateProject\" id=\"CreateProject\" method=\"post\" style=\"margin-left:40px; margin-top:45px;\" >\r\n");
      out.write("\r\n");
      out.write("<INPUT TYPE=\"HIDDEN\" NAME=\"count\">\r\n");
      out.write("<INPUT TYPE=\"HIDDEN\" NAME=\"buttonName\">\r\n");
      out.write("<INPUT TYPE=\"HIDDEN\" NAME=\"ProjectID\">\r\n");
      out.write("<INPUT TYPE=\"HIDDEN\" NAME=\"doc_id\">\r\n");
      out.write("<INPUT TYPE=\"HIDDEN\" NAME=\"Project_stage\">\r\n");
      out.write("<INPUT TYPE=\"HIDDEN\" NAME=\"Project_stage1\">\r\n");
      out.write("<INPUT TYPE=\"HIDDEN\" NAME=\"final_project\">\r\n");
      out.write("<INPUT TYPE=\"HIDDEN\" NAME=\"deletepackage\">\r\n");
      out.write("<INPUT TYPE=\"HIDDEN\" NAME=\"document_type\">\r\n");
      out.write("<INPUT TYPE=\"HIDDEN\" NAME=\"designation\">\r\n");
      out.write("<INPUT TYPE=\"HIDDEN\" NAME=\"documentid\">\r\n");
      out.write("<INPUT TYPE=\"HIDDEN\" NAME=\"Department_RVNL\">\r\n");
      //  c:if
      org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
      boolean _jspx_th_c_005fif_005f0_reused = false;
      try {
        _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
        _jspx_th_c_005fif_005f0.setParent(null);
        // /Admin/CreateProjects1.jsp(758,0) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${param.Project_stage == null}", java.lang.Boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false)).booleanValue());
        int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
        if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("  <table class=\"table \"  >\r\n");
            out.write("  <tr class=\"success\"><td colspan=\"3\"><h3 style=\"text-align:center;\"><font color=\"grey\">Create Project</font></h3></td></tr>\r\n");
            out.write("<tr><td width=\"30%\">\r\n");
            out.write("\r\n");
            out.write("<table style=\"background-color: #F0FFFF; \"  class=\"table table-hover table-bordered\">\r\n");
            out.write("\t<h5><b>General Details:</b></h5>\r\n");
            out.write("\t\t\t<tr>\r\n");
            out.write("\r\n");
            out.write("\t\t\t\t<td >\r\n");
            out.write("\t\t\t\t\r\n");
            out.write("\t\t\t\t<br><br>\r\n");
            out.write("\t\t\t &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PIU of RVNL:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n");
            out.write("\t\t\t\t<select name=PIU_name id=\"PIU_name\" style=\"width: 245px\" onchange =\"javascript:returnProjects(this.value);\"  class=\"disabled\">\r\n");
            out.write("\t\t\t\t\t\t<option value=\"none\">-- Select PIU --</option>\r\n");
            out.write("\t\t\t");

			java.util.Set<String> userlistal = new java.util.HashSet<String>();
			java.util.ArrayList<String> userlistal1 = new java.util.ArrayList<String>();
			java.util.ArrayList<String> userlistal111 = new java.util.ArrayList<String>();
			ResultSet rs3 = null;
			PreparedStatement  ps3 = null;
			ResultSet rs1=null,rs5=null,rs2=null;PreparedStatement ps1 =null,ps2=null;Connection conn=null;
			Statement stmt = null;
            String piuname = null;
            String prtype = null;
            String prname = null;
            String prstartdate = null;
            String princharge = null;
            String cdepartment = null;
            String designation = null;
            String pkgno = null; 
    		String pakages=null;
    		String dname=null;
			try {
				
				Context initCtx = new InitialContext();
				Context envCtx = (Context) initCtx.lookup("java:comp/env");
				DataSource ds = (DataSource) envCtx.lookup("jdbc/MySQLDB");

				 conn = ds.getConnection();
				 ps2 = conn.prepareStatement("select * from xx_projectattributes_master where Project_ID="+Id);
				 rs2 = ps2.executeQuery();
				 while(rs2.next()){
					 piuname = rs2.getString("PIU_of_RVNL");
					 prtype =  rs2.getString("Project_Type");
					 prname =  rs2.getString("Project");
					 
					 String prstartdate1 =  rs2.getString("StartDate");
					 SimpleDateFormat formater = new SimpleDateFormat("yyyy-MM-dd");
					  Date result = formater.parse(prstartdate1);
					  SimpleDateFormat AppDateFormat = new SimpleDateFormat("dd/MM/yyyy");
					  prstartdate=AppDateFormat.format(result);
					 princharge =  rs2.getString("Project_Coordinator");
					 cdepartment =  rs2.getString("CoordinatingDepartment");
					 designation =  rs2.getString("Designation");
					 pkgno =  rs2.getString("PackageOfProject");
				 }
					String sql3 = "select * from xx_piu_master";
					ps3 = conn.prepareStatement(sql3);
					rs3 = ps3.executeQuery();
                   
					while (rs3.next()) {
						 dname = rs3.getString("PIU_Name");
				if(piuname.equalsIgnoreCase(dname)){		
			
            out.write("\r\n");
            out.write("\t\t\t<option value=\"");
            out.print(dname);
            out.write("\" selected=\"selected\">");
            out.print(dname);
            out.write("</option>\r\n");
            out.write("\r\n");
            out.write("\t\t\t");

				}else{
					
            out.write("\r\n");
            out.write("\t\t\t\t\t<option value=\"");
            out.print(dname);
            out.write('"');
            out.write('>');
            out.print(dname);
            out.write("</option>\r\n");
            out.write("\t\t\t\t\t");

				}
				}
			}catch(Exception e){
				e.printStackTrace();
			} finally {
				try {
					if (rs3 != null)
						rs3.close();
					if (rs2 != null)
						rs2.close();
					if (ps2 != null)
						ps2.close();
				} catch (Exception e) {
				}	
				try {
			    	if (ps3 != null)
					ps3.close();
				} catch (Exception e) {
				}
				try { conn.close(); } catch (Exception e) { /* ignored */ }
				}
			
            out.write("\r\n");
            out.write("\t\t\t<INPUT TYPE=\"HIDDEN\" NAME=\"piunamemain\" value=");
            out.print(dname);
            out.write(">\r\n");
            out.write("\t  </select> <br /> <br />\r\n");
            out.write("\t\t\t\t  \t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Project Type:\r\n");
            out.write("\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n");
            out.write(" <select name=Project_Type id=\"Project_Type\" style=\"width: 245px\">\r\n");
            out.write("\t\t <option value=\"none\">-- Select Type --</option>\r\n");





	try {
		Context initCtx = new InitialContext();
		Context envCtx = (Context) initCtx.lookup("java:comp/env");
		DataSource ds = (DataSource) envCtx.lookup("jdbc/MySQLDB");

		 conn = ds.getConnection();

		String sql1 = "SELECT project_type FROM xx_projecttypes_master order by project_type";
		 ps1 = conn.prepareStatement(sql1);
		 rs1 = ps1.executeQuery();

		while (rs1.next()) {
			String ptype = rs1.getString("project_type");
			if(prtype.equalsIgnoreCase(ptype)){		
				
            out.write("\r\n");
            out.write("\t\t\t\t<option value=\"");
            out.print(ptype);
            out.write("\" selected=\"selected\">");
            out.print(ptype);
            out.write("</option>\r\n");
            out.write("\r\n");
            out.write("\t\t\t\t");

					}else{
						
            out.write("\r\n");
            out.write("\t\t\t\t\t\t<option value=\"");
            out.print(ptype);
            out.write('"');
            out.write('>');
            out.print(ptype);
            out.write("</option>\r\n");
            out.write("\t\t\t\t\t\t");

					}
		}
		

            out.write("\r\n");
            out.write("</select><br />\r\n");
            out.write("\t<br />\r\n");

	}catch(Exception e){
		e.printStackTrace();
	}finally {
		try {
			if (rs1 != null)
				rs1.close();
		} catch (Exception e) {
		}
		try {
			if (ps1 != null)
				ps1.close();
			} catch (Exception e) {
			}
		//try { conn.close(); } catch (Exception e) { /* ignored */ }
		}
		
            out.write("\t\r\n");
            out.write("\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<div id=\"p1\" style=\"margin: 0px 0px -40px 50px;\">Project Name: </div>\r\n");
            out.write("\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n");
            out.write("\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n");
            out.write("\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n");
            out.write("\t\t\t\t\t\r\n");
            out.write("\t\t\t\t\t\r\n");
            out.write(" <textarea type=\"text\"  rows=\"2\" cols=\"20\" name=\"Project\" id =\"Project\" maxlength=\"200\" style=\"width:  245px\" onkeyup=\"loadXMLDoc('Project','err')\">");
            out.print(prname);
            out.write("</textarea>\r\n");
            out.write("  <span id=\"err\"> </span> <br>\r\n");
            out.write("  <br />\r\n");
            out.write("\t\t\r\n");
            out.write("\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Project Start Date:\r\n");
            out.write("\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n");
            out.write(" <input type=\"text\" name=\"start_Date\" id =\"start_Date\"  style=\"width: 245px\" value=\"");
            out.print(prstartdate);
            out.write("\" class=\"disabled\"> <br /><br>\r\n");
            out.write("  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Name Of Project In-charge:\r\n");
            out.write("\t\t\t\t&nbsp;<input type=\"text\" name=\"projectinCharge\" id =\"projectinCharge\" maxlength=\"50\" style=\"width:245px; margin-left:15px\" value=\"");
            out.print(princharge);
            out.write("\">\r\n");
            out.write("\t\t\t\t</div><br /> <br />\r\n");
            out.write(" &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Coordinating Department :&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n");
            out.write("\t\t\t\t\t<select name='Department_RVNL1' id =\"Department_RVNL1\" style=\"width: 245px\" onchange='show(1);'>\r\n");
            out.write("\t\t\t\t\t\t<option value=\"");
            out.print(cdepartment);
            out.write('"');
            out.write('>');
            out.print(cdepartment);
            out.write("</option>\r\n");
            out.write("\t\t\t\t\t\t");

							
								stmt = conn.createStatement();
								rs5 = stmt.executeQuery("select department_name from xx_departments_master where type ='RVNL' and Department_Name!='"+cdepartment+"' and Department_Name !='Headquarter' order by department_name");
								String department = null;// request.getParameter("Zone_name");

								while (rs5.next()) {
									department = rs5.getString("Department_Name");
						
            out.write("\r\n");
            out.write("\t\t\t\t\t\t<option value=\"");
            out.print(department);
            out.write('"');
            out.write('>');
            out.print(department);
            out.write("</option>\r\n");
            out.write("\t\t\t\t\t\t");

							}
																
						
            out.write("\r\n");
            out.write("\t\t\t\t</select> \r\n");
            out.write("\t\t\t\t<br><br>\r\n");
            out.write("&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Designation:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n");
            out.write("\t\t\t\t\t<div id =\"DesgDiv_RVNL1\" style=\"display: inline;\">\r\n");
            out.write("\t\t\t\t\t<select name='designation_RVNL' id='designation_RVNL' style=\"width: 245px;margin:3px 0px 12px 0px;\">\r\n");
            out.write("\t\t\t\t\t\t<option value=\"");
            out.print(designation);
            out.write('"');
            out.write('>');
            out.print(designation);
            out.write("</option>\r\n");
            out.write("\t\t\t\t\t\t");

						 String depts="Select DISTINCT Department_Id from xx_departments_master where Department_Name='"+cdepartment+"' and TYPE='RVNL'";
						 
PreparedStatement ps4 = conn.prepareStatement(depts);
  // ps3.setString(1, piu);
   ResultSet rsl = ps4.executeQuery(); 
 while(rsl.next()){
 String depatment_id=rsl.getString(1);

 String sql = "select DISTINCT Designation_name from xx_designation_mapping where Department_id='"+depatment_id+"' and designation_name!='"+designation+"'";
 
 PreparedStatement ps31 = conn.prepareStatement(sql);
   ResultSet rs = ps31.executeQuery(); 
 while(rs.next()){
	
	 String designation_name = rs.getString("designation_name");	
	
	 
            out.write("\r\n");
            out.write("\t\t\t\t<option value=\"");
            out.print(designation_name);
            out.write('"');
            out.write('>');
            out.print(designation_name);
            out.write("</option>\t\r\n");
            out.write("\t\t\t\t\t\t\t\t\r\n");
            out.write("\t\t\t");

				}
			}
			
            out.write("\t\r\n");
            out.write("\t\t\t\t\t</select></div>\t\t\t\t  \r\n");
            out.write("\t\r\n");
            out.write("</td></tr> </table>\t\r\n");
            out.write("<td width=\"30%\" rowspan=\"2\">\r\n");
            out.write("<table class=\"table table-hover table-bordered\"   style=\"background-color: #F0FFFF;\">\r\n");
            out.write(" <h5><b>Jurisdiction Details:</b></h5>\r\n");
            out.write(" <tr><td> <h5><b><font color=\"gray\">Major Section wise Kilometer Details:</font></b></h5>\r\n");
            out.write(" <b>SN&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Major Section &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; From Km &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To Km </b>\r\n");
            out.write("&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>  \r\n");
            out.write(" <div id=\"Majorsec0\" style=\"display: inline\"></div>\r\n");
 
try {
	
	String sql1 = "SELECT * FROM xx_project_km where Project_Id="+Id+" order by Major_Section";
	 ps1 = conn.prepareStatement(sql1);
	 rs1 = ps1.executeQuery();
	 int ct=1;
	 //int nmaj =1;
	while (rs1.next()) {
		String majsecid = rs1.getString("Majsec_Id");
		String majsec = rs1.getString("Major_Section");
		String frmkm = rs1.getString("From_Km");
		String tokm = rs1.getString("To_Km");

            out.write("\r\n");
            out.write("<div id=\"Majorsec");
            out.print(ct );
            out.write("\" style=\"display: inline\"> ");
            out.print(ct );
            out.write(" \r\n");
            out.write("<INPUT TYPE=\"HIDDEN\" NAME=\"Majsecid22");
            out.print(ct );
            out.write("\" value=");
            out.print(majsecid);
            out.write("> &nbsp;\r\n");
            out.write("<input type=\"text\" name=\"Majsec");
            out.print(ct);
            out.write("\" id =\"Majsec");
            out.print(ct);
            out.write("\"  maxlength=\"150\" style=\"width:205px; margin-left:15px;margin-top: 15px;\" onchange=\"majseccheck(");
            out.print(ct );
            out.write(");\" value=\"");
            out.print(majsec);
            out.write("\">\r\n");
            out.write("&nbsp;\r\n");
            out.write("<input type=\"number\" Step=\"0.001\" name=\"frmKm");
            out.print(ct);
            out.write("\" id =\"frmKm");
            out.print(ct);
            out.write("\"  style=\"width:80px; margin-left:10px;margin-top: 15px;\" value=\"");
            out.print(frmkm);
            out.write("\" >\r\n");
            out.write("&nbsp;\r\n");
            out.write("<input type=\"number\" Step=\"0.001\" name=\"toKm");
            out.print(ct);
            out.write("\" id =\"toKm");
            out.print(ct);
            out.write("\"  style=\"width:80px; margin-left:10px;margin-top: 15px;\" value=\"");
            out.print(tokm);
            out.write("\" >\r\n");
		
//String sql16="select count(*) from xx_document_mapping where Major_Section='"+majsec+"' and Project_Id="+Id;
	String sql16="select count(*) from xx_document_mapping where Majsec_Id="+majsecid+" and Project_Id="+Id;
int document=0;	
	PreparedStatement ps19 = conn.prepareStatement(sql16);
	ResultSet rs19 = ps19.executeQuery();
if(rs19.next()){
document = rs19.getInt(1);
if(document==0){

            out.write("\r\n");
            out.write("&nbsp;&nbsp;&nbsp; <input  type=\"button\" class=\"btn btn-warning\" id=\"majdelBtn");
            out.print(ct );
            out.write("\" value=\"Delete\" onClick=\"deletemajsec('");
            out.print(ct);
            out.write("', this.value)\" />\r\n");
            out.write("<INPUT TYPE=\"HIDDEN\" ID=\"majdel");
            out.print(ct );
            out.write("\" NAME=\"majdel");
            out.print(ct );
            out.write("\" value=\"Delete\"> \r\n");
}else{
            out.write("\r\n");
            out.write("&nbsp;&nbsp;&nbsp; <input  type=\"button\" class=\"btn btn-warning\" value=\"Delete\"  disabled />\r\n");
            out.write("<INPUT TYPE=\"HIDDEN\" ID=\"majdel");
            out.print(ct );
            out.write("\" NAME=\"majdel");
            out.print(ct );
            out.write("\" value=\"Delete\"> \r\n");

   }
}

            out.write("\r\n");
            out.write("\t\t\t\t\t\t\t\r\n");
            out.write("\t\t<div id=\"kmdialogid");
            out.print(ct );
            out.write("\" style=\"display: none\"\r\n");
            out.write("\t\t\t\t\t\t\t\talign=\"center\">\r\n");
            out.write("\t\t\t\t\t\t\t\t<br> Duplicate 'Major Section' entry......<br>\r\n");
            out.write("\t\t\t\t\t\t\t\t<br>\r\n");
            out.write("\t\t\t\t\t\t\t\t<button id=\"canclez");
            out.print(ct );
            out.write("\" class=\"btn btn-primary\"\r\n");
            out.write("\t\t\t\t\t\t\t\t\tonclick=\"$('#kmdialogid");
            out.print(ct );
            out.write("').dialog('close');$('#Majsec");
            out.print(ct );
            out.write("').focus(); $('#Majsec");
            out.print(ct );
            out.write("')[0].setSelectionRange(0,1);\">cancel</button>\r\n");
            out.write("\t\t\t\t</div>\t\r\n");
            out.write("\t\t\t\t</div><br>\t\t\t\t\t\t\r\n");
            out.write("\t");

	
	ct++;
	}
            out.write("\r\n");
            out.write("\t\r\n");
            out.write("\t<INPUT TYPE=\"hidden\" NAME=\"No_Majsec\"  Id=\"No_Majsec\" value=");
            out.print((ct-1));
            out.write(">\r\n");
            out.write("\t\t<INPUT TYPE=\"hidden\" NAME=\"No_Majsec_old\"  Id=\"No_Majsec_old\" value=");
            out.print((ct-1));
            out.write(">\r\n");
            out.write("\t\r\n");
            out.write("\t<div id=\"addmajor2\" >\r\n");
            out.write("   <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<button class=\"btn btn-success\" id=\"addmajor1\" value=\"");
            out.print((ct-1));
            out.write("\" >Add Major Section</button>\r\n");
            out.write("   </div>\t\t\r\n");
            out.write("\t<div id=\"kdialogid22\" style=\"display: none\"\r\n");
            out.write("\t\t\t\t\t\t\t\talign=\"center\">\r\n");
            out.write("\t\t\t\t\t\t\t\t<br> You can add up to  10 Major Sections only....<br>\r\n");
            out.write("\t\t\t\t\t\t\t\t<br>\r\n");
            out.write("\t\t\t\t\t\t\t\t<button id=\"kcancle22\" class=\"btn btn-primary\"\r\n");
            out.write("\t\t\t\t\t\t\t\t\tonclick=\"$('#kdialogid22').dialog('close');\">cancel</button>\r\n");
            out.write("\t\t\t\t\t\t\t</div>\r\n");
            out.write("\t");

}catch(Exception e){
	e.printStackTrace();
}finally {
	try {
		if (rs1 != null)
			rs1.close();
	} catch (Exception e) {
	}
	try {
		if (ps1 != null)
			ps1.close();
		} catch (Exception e) {
		}
	}
	
            out.write("\t\r\n");
            out.write("</td></tr>\r\n");
            out.write("<tr> <td><br>\r\n");
            out.write(" <h5><b><font color=\"gray\">Major Section wise Station Details:</font></b></h5>\r\n");
            out.write("<b>SN&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Major Section &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Station Name &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Station Km </b>\r\n");
            out.write("&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>\r\n");
            out.write(" <div id=\"sMajorsec0\" style=\"display: inline\"></div>\r\n");
 
try {
	
	String sql1 = "SELECT * FROM xx_project_station where Project_Id="+Id+" order by Major_Section";
	 ps1 = conn.prepareStatement(sql1);
	 rs1 = ps1.executeQuery();
	 int ctn=1;
	 int nstn =1;
	while (rs1.next()) {
		String stnid = rs1.getString("Stn_Id");
		String smajsec = rs1.getString("Major_Section");
		String stn = rs1.getString("Station_Name");
		String stnkm = rs1.getString("Station_Km");

            out.write("\r\n");
            out.write("<div id=\"sMajorsec");
            out.print(ctn );
            out.write("\" style=\"display: inline\"> ");
            out.print(ctn );
            out.write("\r\n");
            out.write("<INPUT TYPE=\"HIDDEN\" NAME=\"Stnid22");
            out.print(ctn );
            out.write("\" value=");
            out.print(stnid);
            out.write(">  &nbsp;\r\n");
            out.write("<input type=\"text\" name=\"sMajsec");
            out.print(ctn);
            out.write("\" id =\"sMajsec");
            out.print(ctn);
            out.write("\"  maxlength=\"150\" style=\"width:205px; margin-left:15px;margin-top: 15px;\" onchange=\"stnmajseccheck(");
            out.print(ctn );
            out.write(");\" value=\"");
            out.print(smajsec );
            out.write("\">\r\n");
            out.write("&nbsp;\r\n");
            out.write("<input type=\"text\" name=\"stn");
            out.print(ctn);
            out.write("\" id =\"stn");
            out.print(ctn);
            out.write("\" maxlength=\"75\" style=\"width:100px; margin-left:10px;margin-top: 15px;\" onchange=\"stnnamecheck(");
            out.print(ctn );
            out.write(");\" value=\"");
            out.print(stn );
            out.write("\" >\r\n");
            out.write("&nbsp;\r\n");
            out.write("<input type=\"number\" Step=\"0.001\" name=\"stnKm");
            out.print(ctn);
            out.write("\" id =\"stnKm");
            out.print(ctn);
            out.write("\"  style=\"width:80px; margin-left:10px;margin-top: 15px;\" onchange=\"stnkmcheck(");
            out.print(ctn );
            out.write(");\" value=\"");
            out.print(stnkm );
            out.write("\">\r\n");

//String sql16="select count(*) from xx_document_mapping where Major_Section='"+smajsec+"' and Station_Name='"+stn+"' and Project_Id="+Id;
String sql16="select count(*) from xx_document_mapping where Stn_Id="+stnid+" and Project_Id="+Id;
int document=0;	
	PreparedStatement ps19 = conn.prepareStatement(sql16);
	ResultSet rs19 = ps19.executeQuery();
if(rs19.next()){
document = rs19.getInt(1);
if(document==0){

            out.write("\r\n");
            out.write("&nbsp;&nbsp;&nbsp; <input  type=\"button\" class=\"btn btn-warning\"  id=\"sdelBtn");
            out.print(ctn );
            out.write("\" value=\"Delete\" onClick=\"deletestn('");
            out.print(ctn );
            out.write("', this.value)\" />\r\n");
            out.write("<INPUT TYPE=\"HIDDEN\" NAME=\"sdel");
            out.print(ctn );
            out.write("\" ID=\"sdel");
            out.print(ctn );
            out.write("\" value=\"Delete\"> \r\n");
}else{
            out.write("\r\n");
            out.write("&nbsp;&nbsp;&nbsp; <input  type=\"button\" class=\"btn btn-warning\" value=\"Delete\"  disabled />\r\n");
            out.write("<INPUT TYPE=\"HIDDEN\" NAME=\"sdel");
            out.print(ctn );
            out.write("\" ID=\"sdel");
            out.print(ctn );
            out.write("\" value=\"Delete\"> \r\n");

   }
}

            out.write("\r\n");
            out.write("\t\t\t<div id=\"stndialogid");
            out.print(ctn );
            out.write("\" style=\"display: none\"\r\n");
            out.write("\t\t\t\t\t\t\t\talign=\"center\">\r\n");
            out.write("\t\t\t\t\t\t\t\t<br> Not a Valid entry. Major Section should be one of the mentioned above in km wise details.....<br>\r\n");
            out.write("\t\t\t\t\t\t\t\t<br>\r\n");
            out.write("\t\t\t\t\t\t\t\t<button id=\"canclea");
            out.print(ctn );
            out.write("\" class=\"btn btn-primary\"\r\n");
            out.write("\t\t\t\t\t\t\t\t\tonclick=\"$('#stndialogid");
            out.print(ctn );
            out.write("').dialog('close');$('#sMajsec");
            out.print(ctn );
            out.write("').focus(); $('#sMajsec");
            out.print(ctn );
            out.write("')[0].setSelectionRange(0,1);\">cancel</button>\r\n");
            out.write("\t\t\t\t</div>\t\t\r\n");
            out.write("\t<div id=\"stnnamedialogid");
            out.print(ctn );
            out.write("\" style=\"display: none\"\r\n");
            out.write("\t\t\t\t\t\t\t\talign=\"center\">\r\n");
            out.write("\t\t\t\t\t\t\t\t<br> Duplicate 'Station Name' entry..........<br>\r\n");
            out.write("\t\t\t\t\t\t\t\t<br>\r\n");
            out.write("\t\t\t\t\t\t\t\t<button id=\"canclee");
            out.print(ctn );
            out.write("\" class=\"btn btn-primary\"\r\n");
            out.write("\t\t\t\t\t\t\t\t\tonclick=\"$('#stnnamedialogid");
            out.print(ctn );
            out.write("').dialog('close');$('#stn");
            out.print(ctn );
            out.write("').focus(); $('#stn");
            out.print(ctn );
            out.write("')[0].setSelectionRange(0,1);\">cancel</button>\r\n");
            out.write("\t\t\t\t</div>\t\r\n");
            out.write("\t<div id=\"stnkmdialogid");
            out.print(ctn );
            out.write("\" style=\"display: none\"\r\n");
            out.write("\t\t\t\t\t\t\t\talign=\"center\">\r\n");
            out.write("\t\t\t\t\t\t\t\t<br> Duplicate 'Station Km' entry..........<br>\r\n");
            out.write("\t\t\t\t\t\t\t\t<br>\r\n");
            out.write("\t\t\t\t\t\t\t\t<button id=\"canclef");
            out.print(ctn );
            out.write("\" class=\"btn btn-primary\"\r\n");
            out.write("\t\t\t\t\t\t\t\t\tonclick=\"$('#stnkmdialogid");
            out.print(ctn );
            out.write("').dialog('close');$('#stnKm");
            out.print(ctn );
            out.write("').focus();\">cancel</button>\r\n");
            out.write("\t\t\t\t</div>\t\r\n");
            out.write("\t\t<div id=\"stnkm1dialogid");
            out.print(ctn );
            out.write("\" style=\"display: none\"\r\n");
            out.write("\t\t\t\t\t\t\t\talign=\"center\">\r\n");
            out.write("\t\t\t\t\t\t\t\t<br> 'Station Km' entered is not within the km limits of the major section given above.........<br>\r\n");
            out.write("\t\t\t\t\t\t\t\t<br>\r\n");
            out.write("\t\t\t\t\t\t\t\t<button id=\"canclef");
            out.print(ctn );
            out.write("\" class=\"btn btn-primary\"\r\n");
            out.write("\t\t\t\t\t\t\t\t\tonclick=\"$('#stnkm1dialogid");
            out.print(ctn );
            out.write("').dialog('close');$('#stnKm");
            out.print(ctn );
            out.write("').focus();\">cancel</button>\r\n");
            out.write("\t\t\t\t</div>\t\t\r\n");
            out.write("\t\t\t\t</div><br>\r\n");
            out.write("  ");
 
    ctn++;
  }
	//System.out.println("....kk"+nstn);
  
            out.write("\r\n");
            out.write("\t\r\n");
            out.write("\t<INPUT TYPE=\"hidden\" NAME=\"No_Stn\"  Id=\"No_Stn\" value=");
            out.print((ctn-1));
            out.write(">\r\n");
            out.write("\t<INPUT TYPE=\"hidden\" NAME=\"No_Stn_old\"  Id=\"No_Stn_old\" value=");
            out.print((ctn-1));
            out.write(">\t\r\n");
            out.write("\r\n");
            out.write("\t<div id=\"addstn2\" >\r\n");
            out.write("   <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<button class=\"btn btn-success\" id=\"addstn1\" value=\"");
            out.print(nstn );
            out.write("\" >Add Station</button>\r\n");
            out.write("   </div>\t\t\r\n");
            out.write("\t<div id=\"sdialogid222\" style=\"display: none\"\r\n");
            out.write("\t\t\t\t\t\t\t\talign=\"center\">\r\n");
            out.write("\t\t\t\t\t\t\t\t<br> You can add up to  100 Stations only....<br>\r\n");
            out.write("\t\t\t\t\t\t\t\t<br>\r\n");
            out.write("\t\t\t\t\t\t\t\t<button id=\"cancle\" class=\"btn btn-primary\"\r\n");
            out.write("\t\t\t\t\t\t\t\t\tonclick=\"$('#sdialogid222').dialog('close');\">cancel</button>\r\n");
            out.write("\t</div>\r\n");
            out.write("\t\t\t\t\t\t\t\r\n");
            out.write("\t\t");

}catch(Exception e){
	e.printStackTrace();
}finally {
	try {
		if (rs1 != null)
			rs1.close();
	} catch (Exception e) {
	}
	try {
		if (ps1 != null)
			ps1.close();
		} catch (Exception e) {
		}
	try { conn.close(); } catch (Exception e) { /* ignored */ }
	} 
	
            out.write("\t\r\n");
            out.write("</td></tr>\r\n");
            out.write("\r\n");
            out.write("</table> \t\t\t\r\n");
            out.write(" \t\t\t\t\r\n");
            out.write(" \t\t\t\t\r\n");
            out.write(" \t\t\t\t</td>\r\n");
            out.write("</tr><tr>\r\n");
            out.write("<td width=\"35%\">\r\n");
            out.write(" <table  class=\"table table-hover table-bordered\"   style=\"background-color: #F0FFFF;\" >\r\n");
            out.write("\t\t <h5><b>Package Details:</b></h5>\t\t \r\n");


			ResultSet rs20 = null;
			PreparedStatement  ps20 = null;
			ResultSet rs21=null,rs22=null,rs23=null;PreparedStatement ps21 =null,ps22=null;
			Connection conn1=null;
			Statement stmt1 = null;
            String packname = null,packageid=null;
            String zonename = null;
            String divname = null,startdate=null;
            
			try {
				int k=1;
				Context initCtx = new InitialContext();
				Context envCtx = (Context) initCtx.lookup("java:comp/env");
				DataSource ds = (DataSource) envCtx.lookup("jdbc/MySQLDB");

				 conn1 = ds.getConnection();
	 
				// java.util.Set test=new java.util.HashSet();
				 
				 ps20 = conn1.prepareStatement("select * from xx_packages_project where project_id="+Id);
				 rs20 = ps20.executeQuery();
				 
				 while(rs20.next()){
					 packname= rs20.getString("package_name");
					 packageid= rs20.getString("package_id");
					 startdate= rs20.getString("packageStartDate");
					 String piet= rs20.getString("project_id");
					 String sql16="select count(*) from xx_document_mapping where Package_ID='"+packageid+"' ";
					int document=0;	
						PreparedStatement ps19 = conn1.prepareStatement(sql16);
						ResultSet rs19 = ps19.executeQuery();
					 
            out.write("\r\n");
            out.write("\t\t\t\t\t <tr>\r\n");
            out.write("\t\t\t\t\t <td>\r\n");
            out.write("\t\t\t\t\t\r\n");
            out.write("\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Package name ");
            out.print((count1+1) );
            out.write(" : \r\n");
            out.write("&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n");
            out.write("\r\n");
            out.write("\t\t<input type=\"text\" name=\"Package");
            out.print(count1 );
            out.write("\" id =\"Package");
            out.print(count1 );
            out.write("\" maxlength=\"50\" style=\"width:245px; margin-left:15px;margin-top: 15px;\"  value=\"");
            out.print(packname);
            out.write("\">\r\n");
            out.write("\t\t");

		if(rs19.next()){
			document = rs19.getInt(1);
			
			if(document==0){
				
			
            out.write("\r\n");
            out.write("\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <input type=\"reset\" class=\"btn btn-warning\" value=\"Delete\" onClick=\"deletepackage1('");
            out.print(packageid );
            out.write("')\" />\r\n");
            out.write("\t\t");
}else{
            out.write("\r\n");
            out.write("\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <input type=\"reset\" class=\"btn btn-warning\" value=\"Delete\"  disabled/>\r\n");
            out.write("\t\t");
}
		}
		
            out.write("\r\n");
            out.write("\t\t\r\n");
            out.write("\t\t\r\n");
            out.write("\t\t\r\n");
            out.write("\t\t<INPUT TYPE=\"HIDDEN\" NAME=\"Package");
            out.print(count1 );
            out.write("\" value=");
            out.print(packname);
            out.write(">\r\n");
            out.write("\t\t<INPUT TYPE=\"HIDDEN\" NAME=\"pack");
            out.print(count1);
            out.write("\">\r\n");
            out.write("\r\n");
            out.write("\t\t<INPUT TYPE=\"HIDDEN\" NAME=\"Packageid22");
            out.print(count1 );
            out.write("\" value=");
            out.print(packageid);
            out.write(">\r\n");
            out.write("\t\t<div id=\"dialogid");
            out.print(packageid);
            out.write("\" style=\"display: none\"\r\n");
            out.write("\t\t\t\t\t\t\t\talign=\"center\">\r\n");
            out.write("\t\t\t\t\t\t\t\t\r\n");
            out.write("\t\t\t\t\t\t\t\t<br> Are You Sure You Want To Delete Package<br>\r\n");
            out.write("\t\t\t\t\t\t\t\t<br>\r\n");
            out.write("\t\t\t\t\t\t\t\t<button id=\"ok\" class=\"btn btn-primary\"\tonclick=\"packagedelete1('");
            out.print(packageid);
            out.write("')\">ok</button>\r\n");
            out.write("\t\t\t\t\t\t\t\t<button id=\"cancle\" class=\"btn btn-primary\"\r\n");
            out.write("\t\t\t\t\t\t\t\t\tonclick=\"$('#dialogid");
            out.print(packageid);
            out.write("').dialog('close');\">cancel</button>\r\n");
            out.write("\t\t\t\t\t\t\t</div>\r\n");
            out.write("\t\t\r\n");
            out.write("\t");

	
	count1++;
	}
            out.write("\r\n");
            out.write("\t\r\n");
            out.write("\t\t\t\r\n");
            out.write("\t<select name='packagesofproject' id='packagesofproject' style=\"width: 245px;margin-left:60px;display:none;\" value=\"");
            out.print(count1 );
            out.write("\" onchange=\"javascript:packageval(this.value);\">\r\n");
            out.write("\t\t\t\t\t\t\r\n");
            out.write("\t\t\t\t\t</select>\r\n");
            out.write("\t\t\t\t \r\n");
            out.write("\t\t\t\t \t\t\t");
	 
				 			
			}
			catch(Exception e){
				e.printStackTrace();
			} finally {
			    try { conn1.close(); } catch (Exception e) { /* ignored */ }
			}
				 
            out.write("\r\n");
            out.write("\t\t\t\t\r\n");
            out.write("\t\t\t\t <INPUT TYPE=\"hidden\" value=\"");
            out.print((count1+1));
            out.write("\" NAME=\"counttest\" id=\"counttest\">\r\n");
            out.write("\t\t\t\t \r\n");
            out.write("\t\t\t\r\n");
            out.write("\t\t\t\t<div class=\"input_fields_wrap\">\r\n");
            out.write("   <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<button class=\"add_field_button btn btn-success\" id=\"pack\" value=\"");
            out.print(Id);
            out.write("\">Add More Packages</button>\r\n");
            out.write("    <INPUT TYPE=\"HIDDEN\" NAME=\"dateofproject\" id =\"dateofproject\" value ='");
            out.print(prstartdate);
            out.write("'>\r\n");
            out.write("    <!-- <div><input type=\"text\" name=\"mytext[]\"></div> -->\r\n");
            out.write("</div>\r\n");
            out.write("</td>\r\n");
            out.write("</tr>\r\n");
            out.write("\r\n");
            out.write("</table>\r\n");
            out.write("\r\n");
            out.write("<br/>\t\t\t\r\n");
            out.write("\t\t\t\t\t\t\t\t\t\r\n");
            out.write(" \t\t\t\t</tr>\r\n");
            out.write(" \t\t\t\t\r\n");
            out.write(" \t\t\t\t\r\n");
            out.write(" \t\t\t\t\r\n");
            out.write(" \t\t\t\t</table>\r\n");
            out.write(" \r\n");
            out.write(" \t\t\t  \t</td>\r\n");
            out.write(" \t\t\t\t \r\n");
            out.write(" </td></tr></table>\t\t\t\t\r\n");
            out.write("\t  \r\n");
            out.write("\t   \t \r\n");
            out.write("\t   \r\n");
            out.write("<button type=\"button\" style=\"margin-left:300px; width:150px; height:45px; font-size:18px;\" class=\"btn btn-primary\" id=\"btnclick\" onclick=\"javascript:validatetest();\">Next</button>  \r\n");
            out.write("\t\t<div id=\"dialogid1\" style=\"display: none;\"\r\n");
            out.write("\t\t\t\t\t\t\t\talign=\"center\">\r\n");
            out.write("\t\t\t\t\t\t\t\t<br> Please Select Different Package Name<br>\r\n");
            out.write("\t\t\t\t\t\t\t\t<br>\r\n");
            out.write("\t\t\t\t\t\t\t\t<button id=\"cancle\" class=\"btn btn-primary\" \r\n");
            out.write("\t\t\t\t\t\t\t\t\tonclick=\"$('#dialogid1').dialog('close');\">cancel</button>\r\n");
            out.write("\t\t\t\t\t\t\t</div>\r\n");
            out.write("\r\n");
            out.write("\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<input type=\"reset\" class=\"btn btn-primary\" style=\"margin-left:200px; width:150px; height:45px;font-size:18px;\"\r\n");
            out.write("\t\t\tvalue=\"Cancel\" onClick=\"refreshAndClose()\" /> \r\n");
            out.write("\t\t<div id=\"dialogid\" style=\"display: none\"\r\n");
            out.write("\t\t\t\t\t\t\t\talign=\"center\">\r\n");
            out.write("\t\t\t\t\t\t\t\t<br> Please Fill Complete/Correct Data<br>\r\n");
            out.write("\t\t\t\t\t\t\t\t<br>\r\n");
            out.write("\t\t\t\t\t\t\t\t<button id=\"cancle\" class=\"btn btn-primary\"\r\n");
            out.write("\t\t\t\t\t\t\t\t\tonclick=\"jQuery.noConflict();$('#dialogid').dialog('close');\">cancel</button>\r\n");
            out.write("\t\t\t\t\t\t\t</div>\r\n");
            out.write("\t\r\n");
            int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
        _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
        _jspx_th_c_005fif_005f0_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
      }
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      //  c:if
      org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f1 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
      boolean _jspx_th_c_005fif_005f1_reused = false;
      try {
        _jspx_th_c_005fif_005f1.setPageContext(_jspx_page_context);
        _jspx_th_c_005fif_005f1.setParent(null);
        // /Admin/CreateProjects1.jsp(1326,0) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_c_005fif_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${param.Project_stage != null}", java.lang.Boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false)).booleanValue());
        int _jspx_eval_c_005fif_005f1 = _jspx_th_c_005fif_005f1.doStartTag();
        if (_jspx_eval_c_005fif_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("\r\n");
            out.write("\r\n");

String parsedDate=null,packagedata=null, majsecdata=null, stndata=null; 
String package1=null,package2=null,package3=null,package4=null,package5=null;
		String Outprojectid="";		
		String project_id1=request.getParameter("ID");
		if (request.getParameter("buttonName") != null) { 
		String str=request.getParameter("buttonName");
		String str1=request.getParameter("Project_stage");
		
		if(str.equalsIgnoreCase("saveprojectdetails") && request.getParameter("Project_stage").equalsIgnoreCase("first")){
			
			String Projectname=request.getParameter("Project");
			String Dept_of_RVNL = request.getParameter("Department_RVNL1");
		    //String Designation_RVNL = request.getParameter("Designation_RVNL");
			String Designation_RVNL = request.getParameter("designation");
		    String Coordinator_name= request.getParameter("projectinCharge");
			String PIU_of_RVNL = request.getParameter("PIU_name");
			String start_Date=	request.getParameter("start_Date");

//System.out.println("start_date:"+start_Date);
			Date initDate = new SimpleDateFormat("dd/MM/yyyy").parse(start_Date);
			 SimpleDateFormat AppDateFormat1 = new SimpleDateFormat("dd/MM/yyyy");
			  parsedDate=AppDateFormat1.format(initDate);  
			 
			pageContext.setAttribute("PIU",PIU_of_RVNL,PageContext.SESSION_SCOPE);
			String Project_Type = request.getParameter("Project_Type");
			pageContext.setAttribute("PROJECTS",Project_Type,PageContext.SESSION_SCOPE);

// code to update major section details.................................
			String  test = request.getParameter("No_Majsec_old");
		int j=Integer.parseInt(test);
		//int j=k-1;
		 //majsecdata = Integer.toString(j);
		  			String majdel5=null, majsecid5=null, majsec5=null, frmkm5=null, tokm5=null;
// Updating existing records
					for (int i = 1; i <= j; i++) {
						majdel5 = request.getParameter("majdel"+i);
						majsecid5 = request.getParameter("Majsecid22"+i);
				if ( majdel5.equalsIgnoreCase("Undelete")) {
				
            out.write("\r\n");
            out.write("\t\t");
            //  sql:update
            org.apache.taglibs.standard.tag.rt.sql.UpdateTag _jspx_th_sql_005fupdate_005f0 = (org.apache.taglibs.standard.tag.rt.sql.UpdateTag) _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fvar_005fdataSource.get(org.apache.taglibs.standard.tag.rt.sql.UpdateTag.class);
            boolean _jspx_th_sql_005fupdate_005f0_reused = false;
            try {
              _jspx_th_sql_005fupdate_005f0.setPageContext(_jspx_page_context);
              _jspx_th_sql_005fupdate_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f1);
              // /Admin/CreateProjects1.jsp(1369,2) name = dataSource type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_sql_005fupdate_005f0.setDataSource("jdbc/MySQLDB");
              // /Admin/CreateProjects1.jsp(1369,2) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_sql_005fupdate_005f0.setVar("rs");
              int[] _jspx_push_body_count_sql_005fupdate_005f0 = new int[] { 0 };
              try {
                int _jspx_eval_sql_005fupdate_005f0 = _jspx_th_sql_005fupdate_005f0.doStartTag();
                if (_jspx_eval_sql_005fupdate_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                  if (_jspx_eval_sql_005fupdate_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                    _jspx_push_body_count_sql_005fupdate_005f0[0]++;
                    out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_sql_005fupdate_005f0);
                  }
                  do {
                    out.write("\r\n");
                    out.write("\t\t\t\tDELETE FROM xx_project_km where Project_Id=");
                    out.print(project_id1 );
                    out.write(" and Majsec_Id=");
                    out.print(majsecid5 );
                    out.write("\t\t   \r\n");
                    out.write("\t\t\t");
                    int evalDoAfterBody = _jspx_th_sql_005fupdate_005f0.doAfterBody();
                    if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                      break;
                  } while (true);
                  if (_jspx_eval_sql_005fupdate_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                    out = _jspx_page_context.popBody();
                    _jspx_push_body_count_sql_005fupdate_005f0[0]--;
                  }
                }
                if (_jspx_th_sql_005fupdate_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                  return;
                }
              } catch (java.lang.Throwable _jspx_exception) {
                while (_jspx_push_body_count_sql_005fupdate_005f0[0]-- > 0)
                  out = _jspx_page_context.popBody();
                _jspx_th_sql_005fupdate_005f0.doCatch(_jspx_exception);
              } finally {
                _jspx_th_sql_005fupdate_005f0.doFinally();
              }
              _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fvar_005fdataSource.reuse(_jspx_th_sql_005fupdate_005f0);
              _jspx_th_sql_005fupdate_005f0_reused = true;
            } finally {
              org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sql_005fupdate_005f0, _jsp_getInstanceManager(), _jspx_th_sql_005fupdate_005f0_reused);
            }
            out.write("\r\n");
            out.write("\t\t\t\t");
		
				} else {				
					majsec5 = request.getParameter("Majsec"+i);
					frmkm5 = request.getParameter("frmKm"+i);
					tokm5 = request.getParameter("toKm"+i);

            out.write("\r\n");
            out.write("\t\t\t");
            //  sql:update
            org.apache.taglibs.standard.tag.rt.sql.UpdateTag _jspx_th_sql_005fupdate_005f1 = (org.apache.taglibs.standard.tag.rt.sql.UpdateTag) _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fvar_005fdataSource.get(org.apache.taglibs.standard.tag.rt.sql.UpdateTag.class);
            boolean _jspx_th_sql_005fupdate_005f1_reused = false;
            try {
              _jspx_th_sql_005fupdate_005f1.setPageContext(_jspx_page_context);
              _jspx_th_sql_005fupdate_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f1);
              // /Admin/CreateProjects1.jsp(1378,3) name = dataSource type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_sql_005fupdate_005f1.setDataSource("jdbc/MySQLDB");
              // /Admin/CreateProjects1.jsp(1378,3) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_sql_005fupdate_005f1.setVar("rs");
              int[] _jspx_push_body_count_sql_005fupdate_005f1 = new int[] { 0 };
              try {
                int _jspx_eval_sql_005fupdate_005f1 = _jspx_th_sql_005fupdate_005f1.doStartTag();
                if (_jspx_eval_sql_005fupdate_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                  if (_jspx_eval_sql_005fupdate_005f1 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                    _jspx_push_body_count_sql_005fupdate_005f1[0]++;
                    out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_sql_005fupdate_005f1);
                  }
                  do {
                    out.write("\r\n");
                    out.write("\t\t\t\t\t\t\tUPDATE xx_project_km SET Major_Section='");
                    out.print(majsec5 );
                    out.write("', From_Km=");
                    out.print(frmkm5 );
                    out.write(", To_Km=");
                    out.print(tokm5 );
                    out.write(" where Project_Id=");
                    out.print(project_id1 );
                    out.write(" and Majsec_Id=");
                    out.print(majsecid5 );
                    out.write("\t\t   \r\n");
                    out.write("\t\t\t\t\t\t\t\t\t");
                    int evalDoAfterBody = _jspx_th_sql_005fupdate_005f1.doAfterBody();
                    if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                      break;
                  } while (true);
                  if (_jspx_eval_sql_005fupdate_005f1 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                    out = _jspx_page_context.popBody();
                    _jspx_push_body_count_sql_005fupdate_005f1[0]--;
                  }
                }
                if (_jspx_th_sql_005fupdate_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                  return;
                }
              } catch (java.lang.Throwable _jspx_exception) {
                while (_jspx_push_body_count_sql_005fupdate_005f1[0]-- > 0)
                  out = _jspx_page_context.popBody();
                _jspx_th_sql_005fupdate_005f1.doCatch(_jspx_exception);
              } finally {
                _jspx_th_sql_005fupdate_005f1.doFinally();
              }
              _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fvar_005fdataSource.reuse(_jspx_th_sql_005fupdate_005f1);
              _jspx_th_sql_005fupdate_005f1_reused = true;
            } finally {
              org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sql_005fupdate_005f1, _jsp_getInstanceManager(), _jspx_th_sql_005fupdate_005f1_reused);
            }
            out.write("\r\n");
            out.write("\t\t");

		}
	}				
// Inserting new records
					String  testn = request.getParameter("No_Majsec");
				int k=Integer.parseInt(testn);
				//int j=k-1;
				// majsecdata = Integer.toString(j);
				int j1=j+1;
							for (int i = j1; i <= k; i++) {
							//majsecid5 = request.getParameter("Majsecid"+i);
							majdel5 = request.getParameter("majdel"+i);
				if ( !majdel5.equalsIgnoreCase("Undelete")) {
					
							majsec5 = request.getParameter("Majsec"+i);
							frmkm5 = request.getParameter("frmKm"+i);
							tokm5 = request.getParameter("toKm"+i);
				
            out.write("\r\n");
            out.write("\t\t\t\t\t");
            //  sql:update
            org.apache.taglibs.standard.tag.rt.sql.UpdateTag _jspx_th_sql_005fupdate_005f2 = (org.apache.taglibs.standard.tag.rt.sql.UpdateTag) _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fvar_005fdataSource.get(org.apache.taglibs.standard.tag.rt.sql.UpdateTag.class);
            boolean _jspx_th_sql_005fupdate_005f2_reused = false;
            try {
              _jspx_th_sql_005fupdate_005f2.setPageContext(_jspx_page_context);
              _jspx_th_sql_005fupdate_005f2.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f1);
              // /Admin/CreateProjects1.jsp(1399,5) name = dataSource type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_sql_005fupdate_005f2.setDataSource("jdbc/MySQLDB");
              // /Admin/CreateProjects1.jsp(1399,5) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_sql_005fupdate_005f2.setVar("rs");
              int[] _jspx_push_body_count_sql_005fupdate_005f2 = new int[] { 0 };
              try {
                int _jspx_eval_sql_005fupdate_005f2 = _jspx_th_sql_005fupdate_005f2.doStartTag();
                if (_jspx_eval_sql_005fupdate_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                  if (_jspx_eval_sql_005fupdate_005f2 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                    _jspx_push_body_count_sql_005fupdate_005f2[0]++;
                    out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_sql_005fupdate_005f2);
                  }
                  do {
                    out.write("\r\n");
                    out.write("\t\t\t\t\t  INSERT INTO xx_project_km (Project_Id, Major_Section, From_Km, To_Km) VALUES (");
                    out.print(project_id1);
                    out.write(',');
                    out.write('\'');
                    out.print(majsec5);
                    out.write('\'');
                    out.write(',');
                    out.print(frmkm5);
                    out.write(',');
                    out.print(tokm5);
                    out.write(");\r\n");
                    out.write("\t\t\t\t\t\t\t\t\t\t\t");
                    int evalDoAfterBody = _jspx_th_sql_005fupdate_005f2.doAfterBody();
                    if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                      break;
                  } while (true);
                  if (_jspx_eval_sql_005fupdate_005f2 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                    out = _jspx_page_context.popBody();
                    _jspx_push_body_count_sql_005fupdate_005f2[0]--;
                  }
                }
                if (_jspx_th_sql_005fupdate_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                  return;
                }
              } catch (java.lang.Throwable _jspx_exception) {
                while (_jspx_push_body_count_sql_005fupdate_005f2[0]-- > 0)
                  out = _jspx_page_context.popBody();
                _jspx_th_sql_005fupdate_005f2.doCatch(_jspx_exception);
              } finally {
                _jspx_th_sql_005fupdate_005f2.doFinally();
              }
              _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fvar_005fdataSource.reuse(_jspx_th_sql_005fupdate_005f2);
              _jspx_th_sql_005fupdate_005f2_reused = true;
            } finally {
              org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sql_005fupdate_005f2, _jsp_getInstanceManager(), _jspx_th_sql_005fupdate_005f2_reused);
            }
            out.write("\r\n");
            out.write("\t\t\t\t");

				}
		}
// code to update station details..................
							  test = request.getParameter("No_Stn_old");
						      j=Integer.parseInt(test);
						//int j=k-1;
						 //majsecdata = Integer.toString(j);
						  			String sdel5=null, stnid5=null, smajsec5=null, stn5=null, stnkm5=null;
				// Updating existing records
									for (int i = 1; i <= j; i++) {
										sdel5 = request.getParameter("sdel"+i);
										stnid5 = request.getParameter("Stnid22"+i);
									//	System.out.println("smajid="+stnid5+"stn="+sdel5);
								if ( sdel5.equalsIgnoreCase("Undelete")) {
								
            out.write("\r\n");
            out.write("\t\t\t\t\t\t");
            //  sql:update
            org.apache.taglibs.standard.tag.rt.sql.UpdateTag _jspx_th_sql_005fupdate_005f3 = (org.apache.taglibs.standard.tag.rt.sql.UpdateTag) _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fvar_005fdataSource.get(org.apache.taglibs.standard.tag.rt.sql.UpdateTag.class);
            boolean _jspx_th_sql_005fupdate_005f3_reused = false;
            try {
              _jspx_th_sql_005fupdate_005f3.setPageContext(_jspx_page_context);
              _jspx_th_sql_005fupdate_005f3.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f1);
              // /Admin/CreateProjects1.jsp(1418,6) name = dataSource type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_sql_005fupdate_005f3.setDataSource("jdbc/MySQLDB");
              // /Admin/CreateProjects1.jsp(1418,6) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_sql_005fupdate_005f3.setVar("rs");
              int[] _jspx_push_body_count_sql_005fupdate_005f3 = new int[] { 0 };
              try {
                int _jspx_eval_sql_005fupdate_005f3 = _jspx_th_sql_005fupdate_005f3.doStartTag();
                if (_jspx_eval_sql_005fupdate_005f3 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                  if (_jspx_eval_sql_005fupdate_005f3 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                    _jspx_push_body_count_sql_005fupdate_005f3[0]++;
                    out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_sql_005fupdate_005f3);
                  }
                  do {
                    out.write("\r\n");
                    out.write("\t\t\t\t\t\t\t\tDELETE FROM xx_project_station where Project_Id=");
                    out.print(project_id1 );
                    out.write(" and Stn_Id=");
                    out.print(stnid5 );
                    out.write("\t\t   \r\n");
                    out.write("\t\t\t\t\t\t\t");
                    int evalDoAfterBody = _jspx_th_sql_005fupdate_005f3.doAfterBody();
                    if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                      break;
                  } while (true);
                  if (_jspx_eval_sql_005fupdate_005f3 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                    out = _jspx_page_context.popBody();
                    _jspx_push_body_count_sql_005fupdate_005f3[0]--;
                  }
                }
                if (_jspx_th_sql_005fupdate_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                  return;
                }
              } catch (java.lang.Throwable _jspx_exception) {
                while (_jspx_push_body_count_sql_005fupdate_005f3[0]-- > 0)
                  out = _jspx_page_context.popBody();
                _jspx_th_sql_005fupdate_005f3.doCatch(_jspx_exception);
              } finally {
                _jspx_th_sql_005fupdate_005f3.doFinally();
              }
              _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fvar_005fdataSource.reuse(_jspx_th_sql_005fupdate_005f3);
              _jspx_th_sql_005fupdate_005f3_reused = true;
            } finally {
              org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sql_005fupdate_005f3, _jsp_getInstanceManager(), _jspx_th_sql_005fupdate_005f3_reused);
            }
            out.write("\r\n");
            out.write("\t\t\t\t\t\t\t\t");
		
								} else {			
									smajsec5 = request.getParameter("sMajsec"+i);
									stn5 = request.getParameter("stn"+i);
									stnkm5 = request.getParameter("stnKm"+i);
								//	System.out.println("smaj="+smajsec5+"stn="+stn5+stnkm5);
					
            out.write("\r\n");
            out.write("\t\t\t\t\t\t\t");
            //  sql:update
            org.apache.taglibs.standard.tag.rt.sql.UpdateTag _jspx_th_sql_005fupdate_005f4 = (org.apache.taglibs.standard.tag.rt.sql.UpdateTag) _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fvar_005fdataSource.get(org.apache.taglibs.standard.tag.rt.sql.UpdateTag.class);
            boolean _jspx_th_sql_005fupdate_005f4_reused = false;
            try {
              _jspx_th_sql_005fupdate_005f4.setPageContext(_jspx_page_context);
              _jspx_th_sql_005fupdate_005f4.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f1);
              // /Admin/CreateProjects1.jsp(1428,7) name = dataSource type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_sql_005fupdate_005f4.setDataSource("jdbc/MySQLDB");
              // /Admin/CreateProjects1.jsp(1428,7) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_sql_005fupdate_005f4.setVar("rs");
              int[] _jspx_push_body_count_sql_005fupdate_005f4 = new int[] { 0 };
              try {
                int _jspx_eval_sql_005fupdate_005f4 = _jspx_th_sql_005fupdate_005f4.doStartTag();
                if (_jspx_eval_sql_005fupdate_005f4 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                  if (_jspx_eval_sql_005fupdate_005f4 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                    _jspx_push_body_count_sql_005fupdate_005f4[0]++;
                    out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_sql_005fupdate_005f4);
                  }
                  do {
                    out.write("\r\n");
                    out.write("\t\t\t\t\t\t\t\t UPDATE xx_project_station SET Major_Section='");
                    out.print(smajsec5 );
                    out.write("', Station_Name='");
                    out.print(stn5 );
                    out.write("', Station_Km=");
                    out.print(stnkm5 );
                    out.write(" where Project_Id=");
                    out.print(project_id1 );
                    out.write(" and Stn_Id=");
                    out.print(stnid5 );
                    out.write("\t\t\t\t\t   \r\n");
                    out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t");
                    int evalDoAfterBody = _jspx_th_sql_005fupdate_005f4.doAfterBody();
                    if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                      break;
                  } while (true);
                  if (_jspx_eval_sql_005fupdate_005f4 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                    out = _jspx_page_context.popBody();
                    _jspx_push_body_count_sql_005fupdate_005f4[0]--;
                  }
                }
                if (_jspx_th_sql_005fupdate_005f4.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                  return;
                }
              } catch (java.lang.Throwable _jspx_exception) {
                while (_jspx_push_body_count_sql_005fupdate_005f4[0]-- > 0)
                  out = _jspx_page_context.popBody();
                _jspx_th_sql_005fupdate_005f4.doCatch(_jspx_exception);
              } finally {
                _jspx_th_sql_005fupdate_005f4.doFinally();
              }
              _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fvar_005fdataSource.reuse(_jspx_th_sql_005fupdate_005f4);
              _jspx_th_sql_005fupdate_005f4_reused = true;
            } finally {
              org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sql_005fupdate_005f4, _jsp_getInstanceManager(), _jspx_th_sql_005fupdate_005f4_reused);
            }
            out.write("\r\n");
            out.write("\t\t\t\t\t\t");

						}
				}
										
				// Inserting new records
									testn = request.getParameter("No_Stn");
								k=Integer.parseInt(testn);
								int j2=j+1;
								 
								// majsecdata = Integer.toString(j);
											for (int i = j2; i <= k; i++) {
											//majsecid5 = request.getParameter("Majsecid"+i);
											sdel5 = request.getParameter("sdel"+i);
				                 if ( !sdel5.equalsIgnoreCase("Undelete")) {
											smajsec5 = request.getParameter("sMajsec"+i);
											stn5 = request.getParameter("stn"+i);
											stnkm5 = request.getParameter("stnKm"+i);
											
								
            out.write("\r\n");
            out.write("\t\t\t\t\t\t\t\t\t");
            //  sql:update
            org.apache.taglibs.standard.tag.rt.sql.UpdateTag _jspx_th_sql_005fupdate_005f5 = (org.apache.taglibs.standard.tag.rt.sql.UpdateTag) _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fvar_005fdataSource.get(org.apache.taglibs.standard.tag.rt.sql.UpdateTag.class);
            boolean _jspx_th_sql_005fupdate_005f5_reused = false;
            try {
              _jspx_th_sql_005fupdate_005f5.setPageContext(_jspx_page_context);
              _jspx_th_sql_005fupdate_005f5.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f1);
              // /Admin/CreateProjects1.jsp(1450,9) name = dataSource type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_sql_005fupdate_005f5.setDataSource("jdbc/MySQLDB");
              // /Admin/CreateProjects1.jsp(1450,9) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_sql_005fupdate_005f5.setVar("rs");
              int[] _jspx_push_body_count_sql_005fupdate_005f5 = new int[] { 0 };
              try {
                int _jspx_eval_sql_005fupdate_005f5 = _jspx_th_sql_005fupdate_005f5.doStartTag();
                if (_jspx_eval_sql_005fupdate_005f5 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                  if (_jspx_eval_sql_005fupdate_005f5 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                    _jspx_push_body_count_sql_005fupdate_005f5[0]++;
                    out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_sql_005fupdate_005f5);
                  }
                  do {
                    out.write("\r\n");
                    out.write("\t\t\t\t\t\t\t\t\t  INSERT INTO xx_project_station (Project_Id, Major_Section, Station_Name, Station_Km) VALUES (");
                    out.print(project_id1);
                    out.write(',');
                    out.write('\'');
                    out.print(smajsec5);
                    out.write('\'');
                    out.write(',');
                    out.write('\'');
                    out.print(stn5);
                    out.write('\'');
                    out.write(',');
                    out.print(stnkm5);
                    out.write(");\r\n");
                    out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t");
                    int evalDoAfterBody = _jspx_th_sql_005fupdate_005f5.doAfterBody();
                    if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                      break;
                  } while (true);
                  if (_jspx_eval_sql_005fupdate_005f5 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                    out = _jspx_page_context.popBody();
                    _jspx_push_body_count_sql_005fupdate_005f5[0]--;
                  }
                }
                if (_jspx_th_sql_005fupdate_005f5.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                  return;
                }
              } catch (java.lang.Throwable _jspx_exception) {
                while (_jspx_push_body_count_sql_005fupdate_005f5[0]-- > 0)
                  out = _jspx_page_context.popBody();
                _jspx_th_sql_005fupdate_005f5.doCatch(_jspx_exception);
              } finally {
                _jspx_th_sql_005fupdate_005f5.doFinally();
              }
              _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fvar_005fdataSource.reuse(_jspx_th_sql_005fupdate_005f5);
              _jspx_th_sql_005fupdate_005f5_reused = true;
            } finally {
              org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sql_005fupdate_005f5, _jsp_getInstanceManager(), _jspx_th_sql_005fupdate_005f5_reused);
            }
            out.write("\r\n");
            out.write("\t\t");

			}
		}								
// code to update package details........................											
// code to find package id---------- from hidden paramter
  test = request.getParameter("counttest");
 k=Integer.parseInt(test);
 j=k-1;
 packagedata = Integer.toString(j);
  			String packname5=null;
			 String	packid5=null;
			for (int i = 0; i < j; i++) {
			packid5 = request.getParameter("Packageid22"+i);

            out.write("\r\n");
            out.write("<INPUT TYPE=\"hidden\" value=\"");
            out.print(packid5 );
            out.write("\" NAME=\"packold");
            out.print(i);
            out.write("\" id=\"packold");
            out.print(i);
            out.write("\">\r\n");
            out.write("\r\n");


	packname5 = request.getParameter("Package"+i);
	
            out.write('\r');
            out.write('\n');
            out.write('	');
            //  sql:update
            org.apache.taglibs.standard.tag.rt.sql.UpdateTag _jspx_th_sql_005fupdate_005f6 = (org.apache.taglibs.standard.tag.rt.sql.UpdateTag) _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fvar_005fdataSource.get(org.apache.taglibs.standard.tag.rt.sql.UpdateTag.class);
            boolean _jspx_th_sql_005fupdate_005f6_reused = false;
            try {
              _jspx_th_sql_005fupdate_005f6.setPageContext(_jspx_page_context);
              _jspx_th_sql_005fupdate_005f6.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f1);
              // /Admin/CreateProjects1.jsp(1473,1) name = dataSource type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_sql_005fupdate_005f6.setDataSource("jdbc/MySQLDB");
              // /Admin/CreateProjects1.jsp(1473,1) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_sql_005fupdate_005f6.setVar("rs");
              int[] _jspx_push_body_count_sql_005fupdate_005f6 = new int[] { 0 };
              try {
                int _jspx_eval_sql_005fupdate_005f6 = _jspx_th_sql_005fupdate_005f6.doStartTag();
                if (_jspx_eval_sql_005fupdate_005f6 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                  if (_jspx_eval_sql_005fupdate_005f6 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                    _jspx_push_body_count_sql_005fupdate_005f6[0]++;
                    out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_sql_005fupdate_005f6);
                  }
                  do {
                    out.write("\r\n");
                    out.write("\t\t\t\t\t\t\t   UPDATE xx_packages_project SET package_name='");
                    out.print(packname5 );
                    out.write("' where package_id='");
                    out.print(packid5 );
                    out.write("'\r\n");
                    out.write("\t\t\t\t\t\t\t");
                    int evalDoAfterBody = _jspx_th_sql_005fupdate_005f6.doAfterBody();
                    if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                      break;
                  } while (true);
                  if (_jspx_eval_sql_005fupdate_005f6 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                    out = _jspx_page_context.popBody();
                    _jspx_push_body_count_sql_005fupdate_005f6[0]--;
                  }
                }
                if (_jspx_th_sql_005fupdate_005f6.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                  return;
                }
              } catch (java.lang.Throwable _jspx_exception) {
                while (_jspx_push_body_count_sql_005fupdate_005f6[0]-- > 0)
                  out = _jspx_page_context.popBody();
                _jspx_th_sql_005fupdate_005f6.doCatch(_jspx_exception);
              } finally {
                _jspx_th_sql_005fupdate_005f6.doFinally();
              }
              _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fvar_005fdataSource.reuse(_jspx_th_sql_005fupdate_005f6);
              _jspx_th_sql_005fupdate_005f6_reused = true;
            } finally {
              org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sql_005fupdate_005f6, _jsp_getInstanceManager(), _jspx_th_sql_005fupdate_005f6_reused);
            }
            out.write('\r');
            out.write('\n');

}
			Connection conn = null;
	
			try{				
//Date date =new SimpleDateFormat("dd/MM/yyyy").parse(start_Date);
//java.sql.Date st = new java.sql.Date(date.getTime());


		
			
            out.write("\r\n");
            out.write("\t\t\t<INPUT TYPE=\"HIDDEN\" NAME=\"noOfPackages\" id =\"noOfPackages\" value ='");
            out.print(packagedata);
            out.write("'>\r\n");
            out.write("\t\r\n");
            out.write("\r\n");
            out.write("\t\t\t");
            //  sql:update
            org.apache.taglibs.standard.tag.rt.sql.UpdateTag _jspx_th_sql_005fupdate_005f7 = (org.apache.taglibs.standard.tag.rt.sql.UpdateTag) _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fvar_005fdataSource.get(org.apache.taglibs.standard.tag.rt.sql.UpdateTag.class);
            boolean _jspx_th_sql_005fupdate_005f7_reused = false;
            try {
              _jspx_th_sql_005fupdate_005f7.setPageContext(_jspx_page_context);
              _jspx_th_sql_005fupdate_005f7.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f1);
              // /Admin/CreateProjects1.jsp(1490,3) name = dataSource type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_sql_005fupdate_005f7.setDataSource("jdbc/MySQLDB");
              // /Admin/CreateProjects1.jsp(1490,3) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_sql_005fupdate_005f7.setVar("rs");
              int[] _jspx_push_body_count_sql_005fupdate_005f7 = new int[] { 0 };
              try {
                int _jspx_eval_sql_005fupdate_005f7 = _jspx_th_sql_005fupdate_005f7.doStartTag();
                if (_jspx_eval_sql_005fupdate_005f7 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                  if (_jspx_eval_sql_005fupdate_005f7 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                    _jspx_push_body_count_sql_005fupdate_005f7[0]++;
                    out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_sql_005fupdate_005f7);
                  }
                  do {
                    out.write("\r\n");
                    out.write("\t   UPDATE  xx_projectattributes_master SET Project='");
                    out.print(Projectname);
                    out.write("',Project_Coordinator='");
                    out.print(Coordinator_name);
                    out.write("',Project_Type='");
                    out.print(Project_Type);
                    out.write("',PackageOfProject='");
                    out.print(packagedata);
                    out.write("',CoordinatingDepartment='");
                    out.print(Dept_of_RVNL);
                    out.write("',designation='");
                    out.print(Designation_RVNL);
                    out.write("', Proj_create_date=now() where Project_ID='");
                    out.print(project_id1 );
                    out.write("'\r\n");
                    out.write("\t");
                    int evalDoAfterBody = _jspx_th_sql_005fupdate_005f7.doAfterBody();
                    if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                      break;
                  } while (true);
                  if (_jspx_eval_sql_005fupdate_005f7 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                    out = _jspx_page_context.popBody();
                    _jspx_push_body_count_sql_005fupdate_005f7[0]--;
                  }
                }
                if (_jspx_th_sql_005fupdate_005f7.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                  return;
                }
              } catch (java.lang.Throwable _jspx_exception) {
                while (_jspx_push_body_count_sql_005fupdate_005f7[0]-- > 0)
                  out = _jspx_page_context.popBody();
                _jspx_th_sql_005fupdate_005f7.doCatch(_jspx_exception);
              } finally {
                _jspx_th_sql_005fupdate_005f7.doFinally();
              }
              _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fvar_005fdataSource.reuse(_jspx_th_sql_005fupdate_005f7);
              _jspx_th_sql_005fupdate_005f7_reused = true;
            } finally {
              org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sql_005fupdate_005f7, _jsp_getInstanceManager(), _jspx_th_sql_005fupdate_005f7_reused);
            }
            out.write('\r');
            out.write('\n');
            out.write('	');

		
			Context initCtx = new InitialContext();
			Context envCtx = (Context) initCtx.lookup("java:comp/env");
			DataSource ds = (DataSource) envCtx.lookup("jdbc/MySQLDB");
			 conn = ds.getConnection();
			Statement seq_stmt = conn.createStatement();
			ResultSet seq_rs = seq_stmt.executeQuery("SELECT MAX(project_id)  from xx_projectattributes_master");
			
			String project_id =null;
			while (seq_rs.next()) {
				project_id = seq_rs.getString(1);
			}
			pageContext.setAttribute("ProjectID",project_id,PageContext.SESSION_SCOPE);
		/*	 package1 = request.getParameter("Package1");
			 package2 = request.getParameter("Package2");
			package3 = request.getParameter("Package3");
			package4 = request.getParameter("Package4");
			 package5 = request.getParameter("Package5");
			*/

			
            out.write("\r\n");
            out.write("\t\t\t\t<br><br>\r\n");
            out.write("\t\t\t\r\n");
            out.write("\t\t\t<table class=\"table table-hover table-bordered\" style=\"background-color: #F0FFFF\">\r\n");
            out.write("\t\t\t\t\t\t\r\n");
            out.write("\t\t\t");
		String first=null;
			String second=null;
				PreparedStatement ps21=null;
				try {
					int i=0;
					int k1=1;
					 Context initCtx1 = new InitialContext();
					Context envCtx1 = (Context) initCtx1.lookup("java:comp/env");
					DataSource ds1 = (DataSource) envCtx1.lookup("jdbc/MySQLDB");

					Connection con = ds1.getConnection();
					java.util.ArrayList<String> userlistal1 = new java.util.ArrayList<String>();
				String desig=null,dep=null,pack_director=null,packname1=null,packageid1=null,startdate1=null,div_name=null,zone_id=null;
				
				//Adding all zones inside arraylist
				
				String sql0="select * from xx_packages_project where project_id="+Id+" order by package_id";
				 
				PreparedStatement ps310 = con.prepareStatement(sql0);
				ResultSet rs2210 = ps310.executeQuery();
				
				 String zone_idmain=null;
				 while(rs2210.next()){
					 zone_idmain= rs2210.getString("package_id");
					 //getting zone id from package id
					 
					 
					 
					 String sql000="select * from xx_project_division_map where package_id="+zone_idmain;
						 
						PreparedStatement ps31000 = con.prepareStatement(sql000);
						ResultSet rs221000 = ps31000.executeQuery();
						
						 String zone_namemainid=null;
						 while(rs221000.next()){
							 zone_namemainid= rs221000.getString("zone_id");
					 
					 
				//getting data from zoneid to zone name	 
					 String sql00="select * from xx_zones_master where Zone_Id="+zone_namemainid;
						 
						PreparedStatement ps3100 = con.prepareStatement(sql00);
						ResultSet rs22100 = ps3100.executeQuery();
						
						 String zone_namemain=null;
						 while(rs22100.next()){
							 zone_namemain= rs22100.getString("Zone_Name");
					 
							 userlistal1.add(zone_namemain); 				 
					 
				 }
						 }
				 }
				
				// closing all zone details inside 
				String sql="select * from xx_packages_project where project_id="+Id+" order by package_id";
			 
				PreparedStatement ps31 = con.prepareStatement(sql);
				ResultSet rs221 = ps31.executeQuery();
				
				 
				 while(rs221.next()){
					 packname1= rs221.getString("package_name");
					  packageid1= rs221.getString("package_id");
					 startdate1= rs221.getString("packageStartDate");
					 dep= rs221.getString("department");
					 desig= rs221.getString("designation");
					 pack_director= rs221.getString("package_director");
					 if (startdate1!=null){
					 SimpleDateFormat formater = new SimpleDateFormat("yyyy-MM-dd");
					  Date result = formater.parse(startdate1);
					  SimpleDateFormat AppDateFormat = new SimpleDateFormat("dd/MM/yyyy");
					  startdate1=AppDateFormat.format(result);  
					   
					  } 
					 if (dep!=null){}else{dep="";}
					 if (desig!=null){}else{desig="";}
					 if (pack_director!=null){}else{pack_director="";}
					  
						
				
            out.write("\r\n");
            out.write("\t\t\t\t<tr>\r\n");
            out.write("\t\t\t\t\t<td width=\"65%\">\r\n");
            out.write("\t&nbsp;&nbsp;&nbsp;&nbsp;<b>Package name : </b>");
            out.print( packname1);
            out.write("\r\n");
            out.write("\t<input type=\"hidden\" name=\"packagenames");
            out.print(i );
            out.write("\" id=\"packagenames");
            out.print(i );
            out.write("\" value=\"");
            out.print(packname1 );
            out.write("\">\r\n");
            out.write("\t<input type=\"hidden\" name=\"packageid");
            out.print(i);
            out.write("\" id=\"packageid");
            out.print(i );
            out.write("\" value=\"");
            out.print(packageid1 );
            out.write("\">\r\n");
            out.write("\t\t\t\t\t\t<br><br>\r\n");
            out.write("\t\t\t\t");
 if (startdate1!=null){
					
					
            out.write("\t\t\r\n");
            out.write("\t\t\t\t\t\t\t\t\t\t\r\n");
            out.write("\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Package Start Date:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n");
            out.write(" \t\t\t\t<input type=\"text\" name=\"pacstart_Date");
            out.print(i);
            out.write("\" id =\"pacstart_Date");
            out.print(i);
            out.write("\" onclick=\"frezedate('pacstart_Date");
            out.print(i);
            out.write('\'');
            out.write(',');
            out.write('\'');
            out.print(parsedDate);
            out.write("')\" value=\"");
            out.print(startdate1 );
            out.write("\"  style=\"width:204px\" readonly=\"true\"> <br />\r\n");
            out.write("\t\t\t\t\t\t<br>\r\n");
            out.write("\t\t\t\t\t\t");

				} else {
					
            out.write("\r\n");
            out.write("\t\t\t\t\t\t\t\t\t\t\t\r\n");
            out.write("\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Package Start Date:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n");
            out.write(" \t\t\t\t<input type=\"text\" name=\"pacstart_Date");
            out.print(i);
            out.write("\" id =\"pacstart_Date");
            out.print(i);
            out.write("\" onclick=\"frezedate('pacstart_Date");
            out.print(i);
            out.write('\'');
            out.write(',');
            out.write('\'');
            out.print(parsedDate);
            out.write("')\"  style=\"width:204px\" readonly=\"true\"> <br />\r\n");
            out.write("\t\t\t\t\t\t<br>\r\n");
            out.write("\t\t\t\t\t\t");

				}
				  
						String sql1="select DISTINCT(zone_id) from xx_project_division_map where package_id="+packageid1;
						
						PreparedStatement ps311 = con.prepareStatement(sql1);
						ResultSet rs211 = ps311.executeQuery();
						String [] zones=new String[2];

						 int count=0;
						 String name=null;
						 while(rs211.next()){
							 //div_name= rs211.getString("division_name");
							 zone_id= rs211.getString("zone_id");
							 String sql12="select * from xx_zones_master where Zone_Id="+zone_id;
								
								PreparedStatement ps3111 = con.prepareStatement(sql12);
								ResultSet rs2121 = ps3111.executeQuery();
								
								 
								 if(rs2121.next()){
									  zones[count]=rs2121.getString("Zone_Name");
					 
					 count++;
					 
								
						 }
						
						
						 }
						 first=zones[0];
						 second=zones[1];
						 if(first==null){
							 first="--Select--";
						 }
						 if(second==null){
							 second="--Select--";
						 }
						 java.util.ArrayList<String> zonenamesent = new java.util.ArrayList<String>();
						 String divisionselected=null;
						 String zname = null,zname2= null;// request.getParameter("Zone_name");
							Statement stmt = conn.createStatement();
						 String sql161="select Zone from xx_document_mapping where Package_ID='"+packageid1+"' group by Zone";
							
								PreparedStatement ps191 = conn.prepareStatement(sql161);
								ResultSet rs191 = ps191.executeQuery();
													
								String znamesent =null;
								while (rs191.next()){
					 znamesent = rs191.getString("Zone");
					 zonenamesent.add(znamesent);
						}
				
            out.write("\r\n");
            out.write("\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Railway:\r\n");
            out.write("\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n");
            out.write("\t\t\t\t");

				String zname3=null;
				java.util.ArrayList<String> zonalpk = new java.util.ArrayList<String>();
				String piu11 =(String)pageContext.getAttribute("PIU",PageContext.SESSION_SCOPE);
				
				Statement stmt1 = conn.createStatement();
				ResultSet rs21 = stmt1.executeQuery("select PIU_Id from xx_piu_master where PIU_Name='"+piu11+"'");
				int test3=0;
				while (rs21.next()) {
					test3 = rs21.getInt("PIU_Id");
				
				}
						Statement stmt4 = conn.createStatement();
						ResultSet rs311 = stmt4.executeQuery("select distinct Zone_ID from xx_user_zone_mapping where piu_Id="+test3);

						while (rs311.next()) {
						String Zid = rs311.getString("Zone_ID");
						
						String sql31 = "select * from xx_zones_master where Zone_Id="+Zid+" order by Zone_Name";
						PreparedStatement ps313 = conn.prepareStatement(sql31);
						ResultSet rs313 = ps313.executeQuery();
						while (rs313.next()) {
							String zname1=rs313.getString("Zone_Name");
							zonalpk.add(zname1);
						}
						}
						zonalpk.add("--Select--");
						Collections.sort(zonalpk);
					//System.out.println("zonalpk="+zonalpk+"first"+first+"second"+second);
			if(zonenamesent.contains(first) &&  zonenamesent.contains(second)){
			
            out.write("\r\n");
            out.write("\t\t\t\t<select name='Railway");
            out.print(i);
            out.write("'  class=\"drop");
            out.print(i);
            out.write(" disabled\" style=\"width:205px;\" id =\"Railway");
            out.print(i);
            out.write("\" onchange=\"showDivisionspackage(this.value,");
            out.print(i);
            out.write(")\" >\r\n");
            out.write("\t\t\t\t\t\t\t\t\t");

			 for (int c = 0; c < zonalpk.size(); c++) {
	            	zname3 = zonalpk.get(c);
	       		if (!zname3.equalsIgnoreCase(second)) {
	       			if (zname3.equalsIgnoreCase(first)) {
			
            out.write("\r\n");
            out.write("\t\t\t<option value=\"");
            out.print(first );
            out.write("\" selected>");
            out.print(first );
            out.write("</option>\r\n");
            out.write("\t");

	       			} else {
	       
            out.write("\r\n");
            out.write("\t\t\t<option value=\"");
            out.print(zname3);
            out.write('"');
            out.write('>');
            out.print(zname3);
            out.write("</option>\r\n");
            out.write("\t\t\t");

						}
				}
			 }
			
            out.write("\r\n");
            out.write("\t\t\t</select> \r\n");
            out.write("\t\t\t\t\t\r\n");
            out.write("\t\t\t\t<select name='secondRailway");
            out.print(i);
            out.write("' class=\"drop");
            out.print(i);
            out.write(" disabled\" style=\"width: 205px; margin-left:50px\" id =\"secondRailway");
            out.print(i);
            out.write("\" onchange=\"showDivisions2package(this.value,");
            out.print(i);
            out.write(")\">\r\n");
            out.write("\t\t\t\t");

						for (int c = 0; c < zonalpk.size(); c++) {
			            	zname3 = zonalpk.get(c);
			       		if (!zname3.equalsIgnoreCase(first)) {
			       			if (zname3.equalsIgnoreCase(second)) {
					
            out.write("\r\n");
            out.write("\t\t\t\t\t<option value=\"");
            out.print(second );
            out.write("\" selected>");
            out.print(second );
            out.write("</option>\r\n");
            out.write("\t\t\t");

			       			} else {
			       
            out.write("\r\n");
            out.write("\t\t\t\t\t<option value=\"");
            out.print(zname3);
            out.write('"');
            out.write('>');
            out.print(zname3);
            out.write("</option>\r\n");
            out.write("\t\t\t\t\t");

								}
						}
					 }
					
            out.write("\r\n");
            out.write("\t\t\t</select> <br /> <br />\r\n");
            out.write("\t\t\t\t\r\n");
            out.write("\t\t\t\t\r\n");
            out.write("\t\t\t\t");
}else{
					
				if(zonenamesent.contains(first) || zonenamesent.contains(second)){
					
					
					 if(zonenamesent.contains(first)){
							
            out.write("\r\n");
            out.write("\t\t\t\t\t\t\r\n");
            out.write("\r\n");
            out.write("\t\t\t<select name='Railway");
            out.print(i);
            out.write("'  class=\"drop");
            out.print(i);
            out.write(" disabled\" style=\"width:205px\" id =\"Railway");
            out.print(i);
            out.write("\" onchange=\"showDivisionspackage(this.value,");
            out.print(i);
            out.write(")\" >\r\n");
            out.write("\t\t\t\t\t\t");

						for (int c = 0; c < zonalpk.size(); c++) {
			            	zname3 = zonalpk.get(c);
			       		if (!zname3.equalsIgnoreCase(second)) {
			       			if (zname3.equalsIgnoreCase(first)) {
					
            out.write("\r\n");
            out.write("\t\t\t\t\t<option value=\"");
            out.print(first );
            out.write("\" selected>");
            out.print(first );
            out.write("</option>\r\n");
            out.write("\t\t\t");

			       			} else {
			       
            out.write("\r\n");
            out.write("\t\t\t\t\t<option value=\"");
            out.print(zname3);
            out.write('"');
            out.write('>');
            out.print(zname3);
            out.write("</option>\r\n");
            out.write("\t\t\t\t\t");

								}
						}
					 }
					
            out.write("\r\n");
            out.write("\t\t\t\t\t\t\t\t\t\t\t</select> \r\n");
            out.write("\t\t\t\t\t\t\t<select name='secondRailway");
            out.print(i);
            out.write("' class=\"drop");
            out.print(i);
            out.write("\" style=\"width: 205px; margin-left:50px\" id =\"secondRailway");
            out.print(i);
            out.write("\" onchange=\"showDivisions2package(this.value,");
            out.print(i);
            out.write(")\" style=\"background:#A9A9A9;\" >\r\n");
            out.write("\t\t\t\t\t\t");

						for (int c = 0; c < zonalpk.size(); c++) {
			            	zname3 = zonalpk.get(c);
			       		if (!zname3.equalsIgnoreCase(first)) {
			       			if (zname3.equalsIgnoreCase(second)) {
					
            out.write("\r\n");
            out.write("\t\t\t\t\t<option value=\"");
            out.print(second );
            out.write("\" selected>");
            out.print(second );
            out.write("</option>\r\n");
            out.write("\t\t\t");

			       			} else {
			       
            out.write("\r\n");
            out.write("\t\t\t\t\t<option value=\"");
            out.print(zname3);
            out.write('"');
            out.write('>');
            out.print(zname3);
            out.write("</option>\r\n");
            out.write("\t\t\t\t\t");

								}
						}
					 }
					
            out.write("\r\n");
            out.write("\t\t\t\t\t\t</select> <br /> <br />\r\n");
            out.write("\t\t\t\t\t\t");

						} else if(zonenamesent.contains(second)){
						 
						 
				
            out.write("\r\n");
            out.write("\t\t\t\r\n");
            out.write("\r\n");
            out.write("\r\n");
            out.write("<select name='Railway");
            out.print(i);
            out.write("'  class=\"drop");
            out.print(i);
            out.write("\" style=\"width:205px\" id =\"Railway");
            out.print(i);
            out.write("\" onchange=\"showDivisionspackage(this.value,");
            out.print(i);
            out.write(")\" >\r\n");
            out.write("\t\t\t\t\t");

						for (int c = 0; c < zonalpk.size(); c++) {
			            	zname3 = zonalpk.get(c);
			       		if (!zname3.equalsIgnoreCase(second)) {
			       			if (zname3.equalsIgnoreCase(first)) {
					
            out.write("\r\n");
            out.write("\t\t\t\t\t<option value=\"");
            out.print(first );
            out.write("\" selected>");
            out.print(first );
            out.write("</option>\r\n");
            out.write("\t\t\t");

			       			} else {
			       
            out.write("\r\n");
            out.write("\t\t\t\t\t<option value=\"");
            out.print(zname3);
            out.write('"');
            out.write('>');
            out.print(zname3);
            out.write("</option>\r\n");
            out.write("\t\t\t\t\t");

								}
						}
					 }
					
            out.write("\r\n");
            out.write("\t\t\t\t\r\n");
            out.write("\t\t</select> \r\n");
            out.write("\t\t\t\t\r\n");
            out.write("\t\t\t\t<select name='secondRailway");
            out.print(i);
            out.write("' class=\"drop");
            out.print(i);
            out.write(" disabled\" style=\"width: 205px; margin-left:50px\" id =\"secondRailway");
            out.print(i);
            out.write("\" onchange=\"showDivisions2package(this.value,");
            out.print(i);
            out.write(")\" >\r\n");
            out.write("\t\t\t\t\t");

						for (int c = 0; c < zonalpk.size(); c++) {
			            	zname3 = zonalpk.get(c);
			       		if (!zname3.equalsIgnoreCase(first)) {
			       			if (zname3.equalsIgnoreCase(second)) {
					
            out.write("\r\n");
            out.write("\t\t\t\t\t<option value=\"");
            out.print(second );
            out.write("\" selected>");
            out.print(second );
            out.write("</option>\r\n");
            out.write("\t\t\t");

			       			} else {
			       
            out.write("\r\n");
            out.write("\t\t\t\t\t<option value=\"");
            out.print(zname3);
            out.write('"');
            out.write('>');
            out.print(zname3);
            out.write("</option>\r\n");
            out.write("\t\t\t\t\t");

								}
						}
					 }
					
            out.write("\r\n");
            out.write("\t\t\t\t\r\n");
            out.write("\t\t\t</select> <br /> <br />\r\n");
            out.write("\t\t\t\t");
}
								
				}else{
				//	System.out.println("Printing inside else part------------");
					
            out.write("\t<select name='Railway");
            out.print(i);
            out.write("'  class=\"drop");
            out.print(i);
            out.write("\" style=\"width:205px\" id =\"Railway");
            out.print(i);
            out.write("\" onchange=\"showDivisionspackage(this.value,");
            out.print(i);
            out.write(")\"  >\r\n");
            out.write("\t\t\t");

			 for (int c = 0; c < zonalpk.size(); c++) {
	            	zname3 = zonalpk.get(c);
	       		  if (zname3.equalsIgnoreCase(first)) {
			
            out.write("\r\n");
            out.write("\t\t\t<option value=\"");
            out.print(first );
            out.write("\" selected>");
            out.print(first );
            out.write("</option>\r\n");
            out.write("\t");

	       			} else if (!zname3.equalsIgnoreCase(second) || zname3.equalsIgnoreCase("--Select--")) {
	       			// || zname3.equalsIgnoreCase("--Select--")
	       
            out.write("\r\n");
            out.write("\t\t\t<option value=\"");
            out.print(zname3);
            out.write('"');
            out.write('>');
            out.print(zname3);
            out.write("</option>\r\n");
            out.write("\t\t\t");

						}
				}
			
            out.write("\r\n");
            out.write("\t\t\t\t\t\t</select> \r\n");
            out.write("\t\t\t\t\t<select name='secondRailway");
            out.print(i);
            out.write("' class=\"drop");
            out.print(i);
            out.write("\" style=\"width: 205px; margin-left:50px\" id =\"secondRailway");
            out.print(i);
            out.write("\" onchange=\"showDivisions2package(this.value,");
            out.print(i);
            out.write(")\"  >\r\n");
            out.write("\t\t\t\t");
 
				 for (int c = 0; c < zonalpk.size(); c++) {
		            	zname3 = zonalpk.get(c);
		       	
		       			if (zname3.equalsIgnoreCase(second)) {
				
            out.write("\r\n");
            out.write("\t\t\t\t<option value=\"");
            out.print(second );
            out.write("\" selected>");
            out.print(second );
            out.write("</option>\r\n");
            out.write("\t\t");

		       			} else 	if (!zname3.equalsIgnoreCase(first)) {
		       
            out.write("\r\n");
            out.write("\t\t\t\t<option value=\"");
            out.print(zname3);
            out.write('"');
            out.write('>');
            out.print(zname3);
            out.write("</option>\r\n");
            out.write("\t\t\t\t");

							}
					}
				
            out.write("\r\n");
            out.write("\t\t\t\r\n");
            out.write("\t\t\t\t</select> <br /> <br />\r\n");
            out.write("\t\t\t\t\t");
	
					
								
				}
				
				}
		
				
            out.write("\r\n");
            out.write("\t\t\t\t\t\t \r\n");
            out.write("\t\t\t\t\t\t\r\n");
            out.write("\t\t\t\t\r\n");
            out.write("\t\t");
            out.write("\r\n");
            out.write("\t\t\r\n");
            out.write("\t\t\r\n");
            out.write("\t\t\t");
            out.write("\r\n");
            out.write("\t\t\t<script type=\"text/javascript\">\r\n");
            out.write("\t\t\t\r\n");
            out.write("\t\t\tvar $drops");
            out.print(i);
            out.write(" = $('[class^=\"drop");
            out.print(i);
            out.write("\"]');\r\n");
            out.write("\t\t\t$drops");
            out.print(i);
            out.write(".change(function(){\r\n");
            out.write("\t\t\t\t   //alert(\"opt\");\r\n");
            out.write("\t\t\t   \r\n");
            out.write("\t\t\t    \tvar $other");
            out.print(i);
            out.write(" = $drops");
            out.print(i);
            out.write(".not(this),\r\n");
            out.write("\t\t\t        otherVal");
            out.print(i);
            out.write(" = $other");
            out.print(i);
            out.write(".val(),\r\n");
            out.write("\t\t\t         newVal");
            out.print(i);
            out.write(" = $(this).val();\r\n");
            out.write("\t\t\t         if ($(this).attr('id')==\"Railway");
            out.print(i);
            out.write("\") {\r\n");
            out.write("\t\t\t        \tvar $options");
            out.print(i);
            out.write(" = $drops");
            out.print(i);
            out.write(".eq(0).children().clone();\r\n");
            out.write("\t\t\t       \t} else {\r\n");
            out.write("\t\t\t        \tvar $options");
            out.print(i);
            out.write(" = $drops");
            out.print(i);
            out.write(".eq(1).children().clone();\r\n");
            out.write("\t\t\t         }\r\n");
            out.write("\t\t\t       var $opts");
            out.print(i);
            out.write(" = $options");
            out.print(i);
            out.write(".clone().filter(function(){\r\n");
            out.write("\t\t\t        \t\r\n");
            out.write("\t\t\t    \t   return this.value !== newVal");
            out.print(i);
            out.write(";\r\n");
            out.write("\t\t\t    \t   \r\n");
            out.write("\t\t\t        \t     })\r\n");
            out.write("\t\t\t    \r\n");
            out.write("\t\t\t       $other");
            out.print(i);
            out.write(".html($opts");
            out.print(i);
            out.write(").val();\r\n");
            out.write("\t\t\t       $other");
            out.print(i);
            out.write(".append(\"<option value='\"+otherVal");
            out.print(i);
            out.write("+\"' selected>\"+otherVal");
            out.print(i);
            out.write("+\"</option>\");\r\n");
            out.write("\t\t\t       var sel = $other");
            out.print(i);
            out.write(";\r\n");
            out.write("\t\t\t       var selected1 = sel.val(); // cache selected value, before reordering\r\n");
            out.write("\t\t\t       var opts_list = sel.find('option');\r\n");
            out.write("\t\t\t       opts_list.sort(function(a, b) { return $(a).text() > $(b).text() ? 1 : -1; });\r\n");
            out.write("\t\t\t       sel.html('').append(opts_list);\r\n");
            out.write("\t\t\t       sel.val(selected1); // set cached selected value\r\n");
            out.write("\t\t\t    \r\n");
            out.write("\t\t\t});\r\n");
            out.write("\t\t\t      \r\n");
            out.write("</script>\t\r\n");
            out.write("\r\n");
            out.write("&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Division of Railway:<Br>\r\n");
            out.write("<div id=\"test");
            out.print(i);
            out.write("\" style=\"display:inline;\"> \r\n");
            out.write("&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Zone 1 :\r\n");
            out.write("\t\t\t\t\t\r\n");
            out.write("\t\t\t\t\t\r\n");
            out.write("\t\t\t");

			//java.util.Set<String> div1main=new java.util.HashSet<String>();
			//java.util.Set<String> div2main=new java.util.HashSet<String>();
			java.util.ArrayList<String> div1main = new java.util.ArrayList<String>();
			java.util.ArrayList<String> div2main = new java.util.ArrayList<String>();
			java.util.Set<String> div1mainsel=new java.util.HashSet<String>();
			java.util.Set<String> div2mainsel=new java.util.HashSet<String>();
			java.util.Set<String> divdocsent=new java.util.HashSet<String>();
			//first zone name value-------------------------------------------	
			String sqlzonename1="select * from xx_zones_master where Zone_Name='"+first+"'";
			
String zoneid1=null,zoneid2=null;

PreparedStatement ps31zone1 = con.prepareStatement(sqlzonename1);
ResultSet rs221zone = ps31zone1.executeQuery();

 
 while(rs221zone.next()){
	 zoneid1= rs221zone.getString("Zone_Id");
 }
 
 
 // Sdeoncd zone name value--------------------------------------
 
 
                    String sqlzonename2="select Zone_Id from xx_zones_master where Zone_Name='"+second+"'";
                    PreparedStatement ps31zone2 = con.prepareStatement(sqlzonename2);
                    ResultSet rs221zone2 = ps31zone2.executeQuery();

                     
                     while(rs221zone2.next()){
                    	 zoneid2= rs221zone2.getString("Zone_Id");
                     }
                     
                     
                     
                     
					// display data for first zone -----------------------------------------------------------
					String packnamezone2iddiv=null;
                     String sqlzonenamefirstdiv="select division_name from xx_project_division_map where zone_id='"+zoneid1+"' and package_id='"+packageid1+"' and division_name != 'Headquarters'";
                    
                     PreparedStatement ps31zone2div = con.prepareStatement(sqlzonenamefirstdiv);
                     ResultSet rs221zone2div = ps31zone2div.executeQuery();

                      
                      while(rs221zone2div.next()){
                     	 packnamezone2iddiv= rs221zone2div.getString("division_name");// store division what we have selected initially
                     	div1mainsel.add(packnamezone2iddiv);
                      }
                     
           // query to select first all division lying in particular zone
           
                      String divall=null;
                      String sqldivall="select Division_Name from xx_divisions_map where Ext_Zone_Id='"+zoneid1+"' and Division_Name != 'Headquarters' order by Division_Name";
                      
                      PreparedStatement sqldiv = con.prepareStatement(sqldivall);
                      ResultSet rsdiv = sqldiv.executeQuery();

                       
                       while(rsdiv.next()){
                      	 divall= rsdiv.getString("Division_Name");
                      	 div1main.add(divall);// store all division without select of particular zone first
                       }
                      	// query to store / select all divisions lying in second zone
			
                       String divall2=null;
                       String sqldivall2="select Division_Name from xx_divisions_map where Ext_Zone_Id='"+zoneid2+"' and Division_Name != 'Headquarters' order by Division_Name";
                       
                       PreparedStatement sqldiv2 = con.prepareStatement(sqldivall2);
                       ResultSet rsdiv2 = sqldiv2.executeQuery();

                        
                        while(rsdiv2.next()){
                       	 divall2= rsdiv2.getString("Division_Name");
                       	div2main.add(divall2);  // store all division without select of particular zone second---------------------------------------
                        }
                     	//display data for second zone-----------------------------------------------------------------
                      
					
					String packnamezone2iddiv1=null;
                      String divsecond="select division_name from xx_project_division_map where zone_id='"+zoneid2+"' and package_id='"+packageid1+"' and division_name != 'Headquarters' order by Division_Name";
                     
                      PreparedStatement ps31zone2div11 = con.prepareStatement(divsecond);
                      ResultSet rs221zone2div111 = ps31zone2div11.executeQuery();

                       
                       while(rs221zone2div111.next()){
                      	 packnamezone2iddiv1= rs221zone2div111.getString("division_name");//store division initilay selected from second zone
                      	div2mainsel.add(packnamezone2iddiv1);
                       }
                      
         // checking whether any document of this package is sent to any division of this zone..
                       	String sql162="select Division from xx_document_mapping where Package_ID='"+packageid1+"' group by Division";
						PreparedStatement ps192 = conn.prepareStatement(sql162);
							ResultSet rs192 = ps192.executeQuery();
												
							String divnamesent =null;
							while (rs192.next()){
				 divnamesent = rs192.getString("Division");
				 divdocsent.add(divnamesent);
					}
        // Printing my first division names
                       Iterator<String> divitr=div1main.iterator();
						String username=null;
					while(divitr.hasNext()){
						username=divitr.next();	
						
					if(div1mainsel.contains(username)){
					if(divdocsent.contains(username)){
					
            out.write("\r\n");
            out.write("\t\t\t\t\t\r\n");
            out.write("\t\t\t\t\t <input type ='checkbox' name='divisions");
            out.print(1);
            out.write(':');
            out.print(i );
            out.write("' class='divisions");
            out.print(1);
            out.write(':');
            out.print(i );
            out.write(" disabled' id='divisions");
            out.print(1);
            out.write(':');
            out.print(i );
            out.write("' style=\"margin-left:45px;display:inline\" value=\"");
            out.print(username);
            out.write("\" checked > ");
            out.print(username);
            out.write("\r\n");
            out.write("\t\t\t\t\t\r\n");
            out.write("\t\t\t\t\t");

					} else {
					
            out.write("\t\r\n");
            out.write("\t\t\t\t\t <input type ='checkbox' name='divisions");
            out.print(1);
            out.write(':');
            out.print(i );
            out.write("' class='divisions");
            out.print(1);
            out.write(':');
            out.print(i );
            out.write("' id='divisions");
            out.print(1);
            out.write(':');
            out.print(i );
            out.write("' style=\"margin-left:45px;display:inline\" value=\"");
            out.print(username);
            out.write("\" checked > ");
            out.print(username);
            out.write("\r\n");
            out.write("\t\t\t\t\t\r\n");
            out.write("\t\t\t\t\t");


				}
					}
				else{
					
            out.write("\r\n");
            out.write("\t\t\t\t\t \r\n");
            out.write("\t\t\t\t\t <input type ='checkbox' name='divisions");
            out.print(1);
            out.write(':');
            out.print(i );
            out.write("' class='divisions");
            out.print(1);
            out.write(':');
            out.print(i );
            out.write("' id='divisions");
            out.print(1);
            out.write(':');
            out.print(i );
            out.write("' style=\"margin-left:45px;display:inline\" value=\"");
            out.print(username);
            out.write("\" > ");
            out.print(username);
            out.write("\r\n");
            out.write("\t\t\t\t\t\r\n");
            out.write("\t\t\t\t\t");

					
				
				}
					
					}
					div1mainsel.clear();
					div1main.clear();
					
					
					
            out.write("</div>\r\n");
            out.write("\t\t\t\t<br>\r\n");
            out.write("\t\t\t\t<div id=\"test");
            out.print(i);
            out.print(i );
            out.write("\" style=\"display:inline;\">  \r\n");
            out.write("\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Zone 2 :\r\n");
            out.write("\t\t\t\t\t");

					 
                    Iterator<String> divitr11=div2main.iterator();
						String username1=null;
					while(divitr11.hasNext()){
						username1=divitr11.next();	
						
					if(div2mainsel.contains(username1)){
					if(divdocsent.contains(username1)){
					
            out.write("\r\n");
            out.write("\t\t\t\t\t\r\n");
            out.write("\t\t\t\t\t <input type ='checkbox' name='divisions");
            out.print(2);
            out.write(':');
            out.print(i );
            out.write("' class='divisions");
            out.print(2);
            out.write(':');
            out.print(i );
            out.write(" disabled' id='divisions");
            out.print(2);
            out.write(':');
            out.print(i );
            out.write("' style=\"margin-left:45px;display:inline\" value=\"");
            out.print(username1);
            out.write("\" checked > ");
            out.print(username1);
            out.write("\r\n");
            out.write("\t\t\t\t\t\r\n");
            out.write("\t\t\t\t\t");

					} else {
						 
					
            out.write("\r\n");
            out.write("\t\t\t\t\t <input type ='checkbox' name='divisions");
            out.print(2);
            out.write(':');
            out.print(i );
            out.write("' class='divisions");
            out.print(2);
            out.write(':');
            out.print(i );
            out.write("' id='divisions");
            out.print(2);
            out.write(':');
            out.print(i );
            out.write("' style=\"margin-left:45px;display:inline\" value=\"");
            out.print(username1);
            out.write("\" checked > ");
            out.print(username1);
            out.write("\r\n");
            out.write("\t\t\t\t\t\r\n");
            out.write("\t\t\t\t\t");

		
				}
					}
				else{
					
					
					
            out.write("\r\n");
            out.write("\t\t\t\t\t \r\n");
            out.write("\t\t\t\t\t <input type ='checkbox' name='divisions");
            out.print(2);
            out.write(':');
            out.print(i );
            out.write("' class='divisions");
            out.print(2);
            out.write(':');
            out.print(i );
            out.write("' id='divisions");
            out.print(2);
            out.write(':');
            out.print(i );
            out.write("' style=\"margin-left:45px;display:inline\" value=\"");
            out.print(username1);
            out.write("\" > ");
            out.print(username1);
            out.write("\r\n");
            out.write("\t\t\t\t\t\r\n");
            out.write("\t\t\t\t\t");

					
				
				}
					
					}
					div2main.clear();
					div2mainsel.clear();  
                       divdocsent.clear();
					
            out.write("</div>\r\n");
            out.write("\t\t\t\t\t\r\n");
            out.write("\t\t\t\t\t\t\t\t\t\t\t\t<script type=\"text/javascript\">\r\n");
            out.write("$(document).ready(function() {\r\n");
            out.write("    $(\".useriddiv");
            out.print(i);
            out.write("\").click(function() {\r\n");
            out.write("       if ($(this).is(\":checked\")) { \r\n");
            out.write("          $(\"#secondRailway");
            out.print(i);
            out.write("\").prop(\"disabled\", true);\r\n");
            out.write("       } else {\r\n");
            out.write("          $(\"#secondRailway");
            out.print(i);
            out.write("\").prop(\"disabled\", false);  \r\n");
            out.write("       }\r\n");
            out.write("    });\r\n");
            out.write("});\r\n");
            out.write("\r\n");
            out.write("$(document).ready(function() {\r\n");
            out.write("    $(\".useriddiv");
            out.print(i);
            out.write("\").click(function() {\r\n");
            out.write("       if ($(this).is(\":checked\")) { \r\n");
            out.write("          $(\"#Railway");
            out.print(i);
            out.write("\").prop(\"disabled\", true);\r\n");
            out.write("       } else {\r\n");
            out.write("          $(\"#Railway");
            out.print(i);
            out.write("\").prop(\"disabled\", false);  \r\n");
            out.write("       }\r\n");
            out.write("    });\r\n");
            out.write("});\r\n");
            out.write("\r\n");
            out.write("</script>\t\r\n");
            out.write("<br> <br>\r\n");
            out.write("\r\n");
            out.write("\t\t\t\t\t\t\r\n");
            out.write("\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Project Director:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\t\t\t\t\r\n");
            out.write("\t\t\t<input type=\"text\" name=\"projectinCharge");
            out.print(i);
            out.write("\" id =\"projectinCharge");
            out.print(i);
            out.write("\" maxlength=\"50\" value=\"");
            out.print(pack_director );
            out.write("\" style=\"width: 205px\"> <br /><br />\r\n");
            out.write("\t\t\t</div>\r\n");
            out.write("\t\t\t\t\t\t\t\r\n");
            out.write("\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Department:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  \r\n");
            out.write("\t\t\t\r\n");
            out.write("\t\t\t");

			String piu =(String)pageContext.getAttribute("PIU",PageContext.SESSION_SCOPE);
			//System.out.println("piu is xx "+piu);
			
            out.write("\r\n");
            out.write("\t\t\t\r\n");
            out.write("\t\t\t  \t\t\t  \r\n");
            out.write("\t\t\t\t  <select name='Department_RVNL");
            out.print(i );
            out.write("' id='Department_RVNL");
            out.print(i);
            out.write("' style=\"width: 205px\" onchange='show1(");
            out.print(i);
            out.write(");'>\r\n");
            out.write("\t\t\t\t\t\t<option value=\"");
            out.print(dep);
            out.write('"');
            out.write('>');
            out.print(dep);
            out.write("</option>\r\n");
            out.write("\t\t\t\t\t\t");

						ResultSet dep_rs = stmt.executeQuery("select department_name from xx_departments_master where type ='RVNL' and Department_Name !='Headquarter' order by department_name");
						String dep_name = null;
						while (dep_rs.next()) {
						dep_name = dep_rs.getString("Department_Name");
						 if (dep_name!=null){}else{dep_name="";}
								
					
            out.write("\r\n");
            out.write("\t\t\t\t\t<option value=\"");
            out.print(dep_name);
            out.write('"');
            out.write('>');
            out.print(dep_name);
            out.write("</option>\r\n");
            out.write("\t\t\t\t\t");

						}						
						
            out.write("\t\t\t\t\t\t\r\n");
            out.write("\t\t\t     \t</select> \r\n");
            out.write("\t\t\t\t  <br /> <br />\r\n");
            out.write("\t\t\t\t\t\t\t  \r\n");
            out.write("\t\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Designation:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n");
            out.write("\t\t\t\t\t<div id =\"DesgDiv_RVNL");
            out.print(i);
            out.write("\" style=\"display: inline;\">\r\n");
            out.write("\t\t\t\t\t<select name='designation_RVNL");
            out.print(i);
            out.write("' id='designation_RVNL");
            out.print(i);
            out.write("' style=\"width: 205px;margin:3px 0px 12px 0px;\">\r\n");
            out.write("\t\t\t\t\t\t<option value=\"");
            out.print(desig);
            out.write('"');
            out.write('>');
            out.print(desig);
            out.write("</option>\t\t\t\t\t\t  \r\n");
            out.write("\t\t\t\t</select> <br /> <br /></div>\r\n");
            out.write("\t\t\t\t</td>\r\n");
            out.write("\t\t\t\t <td width=\"35%\"> \t<br><center> <h5 Style=\"color:gray;\"><b>Details of Documents/ Drgs required for the Package</b></h5></center><br>\r\n");
            out.write("\t\t\t\t <table class=\"table table-hover table-bordered\"  align=\"center\" style=\"background-color: #F0FFFF; \">\r\n");
            out.write("\t\t\t\t<tr>\r\n");
            out.write("\t\t\t\t<th width=\"50px\" >S. No.</th> <th > Document/ Drg Type </th> <th width=\"150px\"> Nos. of Documents/ Drgs Required</th></tr>\r\n");
            out.write("\t\t\t\t\r\n");

             int j3=0;
				ResultSet drg_rs7 = stmt.executeQuery("select b.Document_Type_Id, b.Document_Type,  a.Nos_Reqd from xx_documentattributes_master b left join (select * from xx_project_docnos where Project_Id="+project_id1+" and Package_Id="+packageid1+") a on  b.Document_Type_Id = a.Document_Type_Id  order by b.Document_Type");
						String drgtyp = null, drgid =null, nosreqd=null;
					while (drg_rs7.next()) {
						drgtyp = drg_rs7.getString("Document_Type");
						drgid = drg_rs7.getString("Document_Type_Id");
						nosreqd = drg_rs7.getString("Nos_Reqd");
					if (nosreqd==null) {nosreqd="";}	
				
            out.write("\r\n");
            out.write("\t\t\t\t<tr><td>");
            out.print(j3+1 );
            out.write(".</td> <td>");
            out.print(drgtyp );
            out.write(":</td>\r\n");
            out.write("\t\t\t\t<td> <center><input type=\"number\"  name=\"no_drg");
            out.print(i);
            out.write('_');
            out.print(j3 );
            out.write("\" id =\"no_drg");
            out.print(i);
            out.write('_');
            out.print(j3 );
            out.write("\"  value='");
            out.print(nosreqd );
            out.write("' style=\"width: 50px; \"></center>\r\n");
            out.write("\t\t\t\t<input type=\"hidden\" name=\"drgid");
            out.print(i);
            out.write('_');
            out.print(j3 );
            out.write("\"  value=");
            out.print(drgid );
            out.write("></td></tr>\t\r\n");
            out.write("\t\t\t");

			j3++;
		}	
				
	
            out.write("\t\r\n");
            out.write("</table>\r\n");
            out.write("<INPUT TYPE=\"hidden\" NAME=\"nosofDrg");
            out.print(i);
            out.write("\" ID=\"nosofDrg");
            out.print(i);
            out.write("\" value=");
            out.print(j3);
            out.write(">\t\t\r\n");
            out.write("\r\n");
            out.write("\t\t\t\t  <br /> <br />\r\n");
            out.write("\r\n");
            out.write("\t\t\t");

			i++; 
			}
				 
				}
				catch(Exception e){
					
					e.printStackTrace();
				} 
			 
				
			
			 
            out.write("\r\n");
            out.write("\t</td>\r\n");
            out.write("\t\t\t</tr>\r\n");
            out.write("\t\t\t\t</table> <br> <br>\r\n");
            out.write("\t\t\t\t<center><button type=\"button\" class=\"btn btn-primary\" onclick=\"javascript:getvalue111(");
            out.print(packagedata );
            out.write(");\" style=\"margin-left:100px\">Submit</button> \r\n");
            out.write("       \r\n");
            out.write("      &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; <input type=\"reset\" class=\"btn btn-primary\" style=\"margin-left: 200px;\" value=\"Cancel\" onclick=\"refreshAndClose()\" /></center><br><br>\r\n");
            out.write("\t\t\t\t\r\n");
            out.write("\t\t\t\t\r\n");
            out.write("\t\t\t \r\n");
            out.write("\t\t\t");
	
			}
			catch(Exception e)
			{
				e.printStackTrace();
				
			} finally {
			    try { conn.close(); } catch (Exception e) { /* ignored */ }
			}
			//conn.close();
			
			
			
			
		}
		}
		
		
		
		
		 
            out.write("\r\n");
            out.write("       \r\n");
            out.write("\t\t<div id=\"dialogid\" style=\"display: none\"\r\n");
            out.write("\t\t\t\t\t\t\t\talign=\"center\">\r\n");
            out.write("\t\t\t\t\t\t\t\t<br> Please Fill All Data<br>\r\n");
            out.write("\t\t\t\t\t\t\t\t<br>\r\n");
            out.write("\t\t\t\t\t\t\t\t<button id=\"cancle\" class=\"btn btn-primary\"\r\n");
            out.write("\t\t\t\t\t\t\t\t\tonclick=\"jQuery.noConflict();$('#dialogid').dialog('close');\">cancel</button>\r\n");
            out.write("\t\t\t\t\t\t\t</div>\r\n");
            int evalDoAfterBody = _jspx_th_c_005fif_005f1.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fif_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
        _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f1);
        _jspx_th_c_005fif_005f1_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f1_reused);
      }
      out.write("\r\n");
      out.write("\r\n");
      //  c:if
      org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f2 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
      boolean _jspx_th_c_005fif_005f2_reused = false;
      try {
        _jspx_th_c_005fif_005f2.setPageContext(_jspx_page_context);
        _jspx_th_c_005fif_005f2.setParent(null);
        // /Admin/CreateProjects1.jsp(2258,0) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_c_005fif_005f2.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ (param.final_project !=null) && (param.Project_stage1 !=null) }", java.lang.Boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false)).booleanValue());
        int _jspx_eval_c_005fif_005f2 = _jspx_th_c_005fif_005f2.doStartTag();
        if (_jspx_eval_c_005fif_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write('\r');
            out.write('\n');
            //  c:if
            org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f3 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
            boolean _jspx_th_c_005fif_005f3_reused = false;
            try {
              _jspx_th_c_005fif_005f3.setPageContext(_jspx_page_context);
              _jspx_th_c_005fif_005f3.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f2);
              // /Admin/CreateProjects1.jsp(2259,0) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_c_005fif_005f3.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ (param.final_project !='') && (param.Project_stage1 !='') }", java.lang.Boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false)).booleanValue());
              int _jspx_eval_c_005fif_005f3 = _jspx_th_c_005fif_005f3.doStartTag();
              if (_jspx_eval_c_005fif_005f3 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                do {
                  out.write('\r');
                  out.write('\n');

// all package start dates
String packagedata = request.getParameter("noOfPackages");
//java.util.ArrayList<String> packal=new java.util.ArrayList<String>();
//java.util.ArrayList<String> packidal=new java.util.ArrayList<String>();
String packagenames1=null;
 String	Packageid11=null;
 String pacstart_Date1=null;
 String packageid1old=null;
 String projectinCharge1=null;
 String Department_RVNL1=null;
 String designation_RVNL1=null;
 String package1id="";
 String packageids=null;
 String project_id = Id;
 Connection  conn = null;
 try {
		
		Context initCtx = new InitialContext();
		Context envCtx = (Context) initCtx.lookup("java:comp/env");
		DataSource ds = (DataSource) envCtx.lookup("jdbc/MySQLDB");

		  conn = ds.getConnection();
 
 
for (int i = 0; i < Integer.parseInt(packagedata); i++) {
 Packageid11 = request.getParameter("packold"+i);
	//packidal.add(packname5);
	System.out.println("package Id---------------"+Packageid11);
	/* Iterator<String> packitr=packal.iterator();
	 
	  while(packitr.hasNext()){
		packname1=packitr.next();
*/


pacstart_Date1 = request.getParameter("pacstart_Date"+i);
if(pacstart_Date1!=null){
Date date1 = new SimpleDateFormat("dd/MM/yyyy").parse(pacstart_Date1);
pacstart_Date1 = new SimpleDateFormat("yyyy-MM-dd").format(date1);
}
else{
	pacstart_Date1="";
//	System.out.println("coming inside else first date---------------------");
}
// all packagesend dates here---
if(packagedata==null){
	packagedata="0";	
}
//Old packageid starts from 

packageid1old = request.getParameter("packageid"+i);
if(packageid1old==null){
	packageid1old="";	
}
//project encharge values ends here

// old package id ends here

projectinCharge1 = request.getParameter("projectinCharge"+i);
//project encharge values ends here

// Department encharge values starts here 

Department_RVNL1 = request.getParameter("Department_RVNL"+i);
//department values ends here

//designation values starts here
designation_RVNL1 = request.getParameter("designation_RVNL"+i);
// designation values ends here

//package names values starts here
packagenames1 = request.getParameter("packagenames"+i);
// designation values ends here
//String package1id="";String package2id="";String package3id="";String package4id="";String package5id="";
	

                  out.write("\r\n");
                  out.write("\t ");
                  //  sql:update
                  org.apache.taglibs.standard.tag.rt.sql.UpdateTag _jspx_th_sql_005fupdate_005f8 = (org.apache.taglibs.standard.tag.rt.sql.UpdateTag) _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fvar_005fdataSource.get(org.apache.taglibs.standard.tag.rt.sql.UpdateTag.class);
                  boolean _jspx_th_sql_005fupdate_005f8_reused = false;
                  try {
                    _jspx_th_sql_005fupdate_005f8.setPageContext(_jspx_page_context);
                    _jspx_th_sql_005fupdate_005f8.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f3);
                    // /Admin/CreateProjects1.jsp(2337,2) name = dataSource type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                    _jspx_th_sql_005fupdate_005f8.setDataSource("jdbc/MySQLDB");
                    // /Admin/CreateProjects1.jsp(2337,2) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                    _jspx_th_sql_005fupdate_005f8.setVar("rs");
                    int[] _jspx_push_body_count_sql_005fupdate_005f8 = new int[] { 0 };
                    try {
                      int _jspx_eval_sql_005fupdate_005f8 = _jspx_th_sql_005fupdate_005f8.doStartTag();
                      if (_jspx_eval_sql_005fupdate_005f8 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                        if (_jspx_eval_sql_005fupdate_005f8 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                          _jspx_push_body_count_sql_005fupdate_005f8[0]++;
                          out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_sql_005fupdate_005f8);
                        }
                        do {
                          out.write("\r\n");
                          out.write("\t  UPDATE xx_packages_project SET package_name='");
                          out.print(packagenames1);
                          out.write("',packageStartDate='");
                          out.print(pacstart_Date1);
                          out.write("',package_director='");
                          out.print(projectinCharge1);
                          out.write("',department='");
                          out.print(Department_RVNL1);
                          out.write("',designation='");
                          out.print(designation_RVNL1);
                          out.write("' where package_id='");
                          out.print(Packageid11 );
                          out.write("'\r\n");
                          out.write("\t");
                          int evalDoAfterBody = _jspx_th_sql_005fupdate_005f8.doAfterBody();
                          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                            break;
                        } while (true);
                        if (_jspx_eval_sql_005fupdate_005f8 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                          out = _jspx_page_context.popBody();
                          _jspx_push_body_count_sql_005fupdate_005f8[0]--;
                        }
                      }
                      if (_jspx_th_sql_005fupdate_005f8.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                        return;
                      }
                    } catch (java.lang.Throwable _jspx_exception) {
                      while (_jspx_push_body_count_sql_005fupdate_005f8[0]-- > 0)
                        out = _jspx_page_context.popBody();
                      _jspx_th_sql_005fupdate_005f8.doCatch(_jspx_exception);
                    } finally {
                      _jspx_th_sql_005fupdate_005f8.doFinally();
                    }
                    _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fvar_005fdataSource.reuse(_jspx_th_sql_005fupdate_005f8);
                    _jspx_th_sql_005fupdate_005f8_reused = true;
                  } finally {
                    org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sql_005fupdate_005f8, _jsp_getInstanceManager(), _jspx_th_sql_005fupdate_005f8_reused);
                  }
                  out.write(" \r\n");
                  out.write("\t");
		
		
	Statement package1st = conn.createStatement();
	ResultSet package1rs = package1st.executeQuery("SELECT MAX(package_id)  from xx_packages_project");
	while (package1rs.next()) {
		package1id = package1rs.getString(1);
	}

                  out.write("\r\n");
                  out.write("\t\t\t<INPUT TYPE=\"HIDDEN\" NAME=\"packageid");
                  out.print(i );
                  out.write("\" value=");
                  out.print(package1id);
                  out.write(">\r\n");
                  out.write("\t\t\t\t");
                  //  sql:update
                  org.apache.taglibs.standard.tag.rt.sql.UpdateTag _jspx_th_sql_005fupdate_005f9 = (org.apache.taglibs.standard.tag.rt.sql.UpdateTag) _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fvar_005fdataSource.get(org.apache.taglibs.standard.tag.rt.sql.UpdateTag.class);
                  boolean _jspx_th_sql_005fupdate_005f9_reused = false;
                  try {
                    _jspx_th_sql_005fupdate_005f9.setPageContext(_jspx_page_context);
                    _jspx_th_sql_005fupdate_005f9.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f3);
                    // /Admin/CreateProjects1.jsp(2349,4) name = dataSource type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                    _jspx_th_sql_005fupdate_005f9.setDataSource("jdbc/MySQLDB");
                    // /Admin/CreateProjects1.jsp(2349,4) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                    _jspx_th_sql_005fupdate_005f9.setVar("rs");
                    int[] _jspx_push_body_count_sql_005fupdate_005f9 = new int[] { 0 };
                    try {
                      int _jspx_eval_sql_005fupdate_005f9 = _jspx_th_sql_005fupdate_005f9.doStartTag();
                      if (_jspx_eval_sql_005fupdate_005f9 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                        if (_jspx_eval_sql_005fupdate_005f9 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                          _jspx_push_body_count_sql_005fupdate_005f9[0]++;
                          out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_sql_005fupdate_005f9);
                        }
                        do {
                          out.write("\r\n");
                          out.write("\t\t\t\t   DELETE FROM xx_project_division_map where package_id='");
                          out.print(Packageid11);
                          out.write("';\r\n");
                          out.write("\t\t\t\t");
                          int evalDoAfterBody = _jspx_th_sql_005fupdate_005f9.doAfterBody();
                          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                            break;
                        } while (true);
                        if (_jspx_eval_sql_005fupdate_005f9 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                          out = _jspx_page_context.popBody();
                          _jspx_push_body_count_sql_005fupdate_005f9[0]--;
                        }
                      }
                      if (_jspx_th_sql_005fupdate_005f9.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                        return;
                      }
                    } catch (java.lang.Throwable _jspx_exception) {
                      while (_jspx_push_body_count_sql_005fupdate_005f9[0]-- > 0)
                        out = _jspx_page_context.popBody();
                      _jspx_th_sql_005fupdate_005f9.doCatch(_jspx_exception);
                    } finally {
                      _jspx_th_sql_005fupdate_005f9.doFinally();
                    }
                    _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fvar_005fdataSource.reuse(_jspx_th_sql_005fupdate_005f9);
                    _jspx_th_sql_005fupdate_005f9_reused = true;
                  } finally {
                    org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sql_005fupdate_005f9, _jsp_getInstanceManager(), _jspx_th_sql_005fupdate_005f9_reused);
                  }
                  out.write("\r\n");
                  out.write("\t\t\t\t\t\r\n");
                  out.write("\t\t\t\t");
                  //  sql:update
                  org.apache.taglibs.standard.tag.rt.sql.UpdateTag _jspx_th_sql_005fupdate_005f10 = (org.apache.taglibs.standard.tag.rt.sql.UpdateTag) _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fvar_005fdataSource.get(org.apache.taglibs.standard.tag.rt.sql.UpdateTag.class);
                  boolean _jspx_th_sql_005fupdate_005f10_reused = false;
                  try {
                    _jspx_th_sql_005fupdate_005f10.setPageContext(_jspx_page_context);
                    _jspx_th_sql_005fupdate_005f10.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f3);
                    // /Admin/CreateProjects1.jsp(2353,4) name = dataSource type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                    _jspx_th_sql_005fupdate_005f10.setDataSource("jdbc/MySQLDB");
                    // /Admin/CreateProjects1.jsp(2353,4) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                    _jspx_th_sql_005fupdate_005f10.setVar("rs");
                    int[] _jspx_push_body_count_sql_005fupdate_005f10 = new int[] { 0 };
                    try {
                      int _jspx_eval_sql_005fupdate_005f10 = _jspx_th_sql_005fupdate_005f10.doStartTag();
                      if (_jspx_eval_sql_005fupdate_005f10 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                        if (_jspx_eval_sql_005fupdate_005f10 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                          _jspx_push_body_count_sql_005fupdate_005f10[0]++;
                          out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_sql_005fupdate_005f10);
                        }
                        do {
                          out.write("\r\n");
                          out.write("\t\t\t\t   DELETE FROM xx_project_docnos where package_id='");
                          out.print(Packageid11);
                          out.write("';\r\n");
                          out.write("\t\t\t\t");
                          int evalDoAfterBody = _jspx_th_sql_005fupdate_005f10.doAfterBody();
                          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                            break;
                        } while (true);
                        if (_jspx_eval_sql_005fupdate_005f10 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                          out = _jspx_page_context.popBody();
                          _jspx_push_body_count_sql_005fupdate_005f10[0]--;
                        }
                      }
                      if (_jspx_th_sql_005fupdate_005f10.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                        return;
                      }
                    } catch (java.lang.Throwable _jspx_exception) {
                      while (_jspx_push_body_count_sql_005fupdate_005f10[0]-- > 0)
                        out = _jspx_page_context.popBody();
                      _jspx_th_sql_005fupdate_005f10.doCatch(_jspx_exception);
                    } finally {
                      _jspx_th_sql_005fupdate_005f10.doFinally();
                    }
                    _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fvar_005fdataSource.reuse(_jspx_th_sql_005fupdate_005f10);
                    _jspx_th_sql_005fupdate_005f10_reused = true;
                  } finally {
                    org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sql_005fupdate_005f10, _jsp_getInstanceManager(), _jspx_th_sql_005fupdate_005f10_reused);
                  }
                  out.write("\r\n");
                  out.write("\t\t");

				String nosdrg1=request.getParameter("nosofDrg"+i);
				int nosdrg =Integer.parseInt(nosdrg1);
		for(int j2=0;j2<nosdrg;j2++){				
			String drgid=request.getParameter("drgid"+i+"_"+j2);
			String nosreqd=request.getParameter("no_drg"+i+"_"+j2);
			
                  out.write("\r\n");
                  out.write("\t\t\t");
                  //  sql:update
                  org.apache.taglibs.standard.tag.rt.sql.UpdateTag _jspx_th_sql_005fupdate_005f11 = (org.apache.taglibs.standard.tag.rt.sql.UpdateTag) _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fdataSource.get(org.apache.taglibs.standard.tag.rt.sql.UpdateTag.class);
                  boolean _jspx_th_sql_005fupdate_005f11_reused = false;
                  try {
                    _jspx_th_sql_005fupdate_005f11.setPageContext(_jspx_page_context);
                    _jspx_th_sql_005fupdate_005f11.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f3);
                    // /Admin/CreateProjects1.jsp(2363,3) name = dataSource type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                    _jspx_th_sql_005fupdate_005f11.setDataSource("jdbc/MySQLDB");
                    int[] _jspx_push_body_count_sql_005fupdate_005f11 = new int[] { 0 };
                    try {
                      int _jspx_eval_sql_005fupdate_005f11 = _jspx_th_sql_005fupdate_005f11.doStartTag();
                      if (_jspx_eval_sql_005fupdate_005f11 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                        if (_jspx_eval_sql_005fupdate_005f11 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                          _jspx_push_body_count_sql_005fupdate_005f11[0]++;
                          out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_sql_005fupdate_005f11);
                        }
                        do {
                          out.write("\r\n");
                          out.write("\t\t\t  insert into xx_project_docnos (Project_Id, Package_Id, Document_Type_Id, Nos_Reqd) VALUES (");
                          out.print(Id);
                          out.write(',');
                          out.write(' ');
                          out.print(Packageid11);
                          out.write(',');
                          out.print(drgid);
                          out.write(',');
                          out.print(nosreqd);
                          out.write(");\r\n");
                          out.write("\t\t\t");
                          int evalDoAfterBody = _jspx_th_sql_005fupdate_005f11.doAfterBody();
                          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                            break;
                        } while (true);
                        if (_jspx_eval_sql_005fupdate_005f11 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                          out = _jspx_page_context.popBody();
                          _jspx_push_body_count_sql_005fupdate_005f11[0]--;
                        }
                      }
                      if (_jspx_th_sql_005fupdate_005f11.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                        return;
                      }
                    } catch (java.lang.Throwable _jspx_exception) {
                      while (_jspx_push_body_count_sql_005fupdate_005f11[0]-- > 0)
                        out = _jspx_page_context.popBody();
                      _jspx_th_sql_005fupdate_005f11.doCatch(_jspx_exception);
                    } finally {
                      _jspx_th_sql_005fupdate_005f11.doFinally();
                    }
                    _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fdataSource.reuse(_jspx_th_sql_005fupdate_005f11);
                    _jspx_th_sql_005fupdate_005f11_reused = true;
                  } finally {
                    org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sql_005fupdate_005f11, _jsp_getInstanceManager(), _jspx_th_sql_005fupdate_005f11_reused);
                  }
                  out.write('\r');
                  out.write('\n');
 
}	
		
if (i==0) { 
		packageids=Packageid11;
	} else {
		packageids=packageids+"~"+Packageid11;	
	}
}	  //for loop ends here
System.out.println("package ids==="+packageids);
pageContext.setAttribute("packageids",packageids,PageContext.SESSION_SCOPE);
String Outprojectid=null;
String str=request.getParameter("buttonName");
//String [] pakages={packagenames1,packagenames2,packagenames3,packagenames4,packagenames5};
	
	 
			String divisions="";
			int count=0;
			String[] divisioncheck ;
			 packageids=(String)pageContext.getAttribute("packageids",PageContext.SESSION_SCOPE);
			String [] pacids=packageids.split("~");
			String a[]=null;
			
					
                  out.write("\r\n");
                  out.write("\t\t\t\t\t\r\n");
                  out.write("\t\t\t\t\t ");
                  //  sql:update
                  org.apache.taglibs.standard.tag.rt.sql.UpdateTag _jspx_th_sql_005fupdate_005f12 = (org.apache.taglibs.standard.tag.rt.sql.UpdateTag) _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fdataSource.get(org.apache.taglibs.standard.tag.rt.sql.UpdateTag.class);
                  boolean _jspx_th_sql_005fupdate_005f12_reused = false;
                  try {
                    _jspx_th_sql_005fupdate_005f12.setPageContext(_jspx_page_context);
                    _jspx_th_sql_005fupdate_005f12.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f3);
                    // /Admin/CreateProjects1.jsp(2391,6) name = dataSource type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                    _jspx_th_sql_005fupdate_005f12.setDataSource("jdbc/MySQLDB");
                    int[] _jspx_push_body_count_sql_005fupdate_005f12 = new int[] { 0 };
                    try {
                      int _jspx_eval_sql_005fupdate_005f12 = _jspx_th_sql_005fupdate_005f12.doStartTag();
                      if (_jspx_eval_sql_005fupdate_005f12 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                        if (_jspx_eval_sql_005fupdate_005f12 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                          _jspx_push_body_count_sql_005fupdate_005f12[0]++;
                          out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_sql_005fupdate_005f12);
                        }
                        do {
                          out.write("\r\n");
                          out.write("\t\t\t\t\t  update xx_projectattributes_master set completed ='y', Pack_add_edit_date=now() where project_id = '");
                          out.print(project_id);
                          out.write("'\r\n");
                          out.write("\t\t\t\t\t");
                          int evalDoAfterBody = _jspx_th_sql_005fupdate_005f12.doAfterBody();
                          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                            break;
                        } while (true);
                        if (_jspx_eval_sql_005fupdate_005f12 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                          out = _jspx_page_context.popBody();
                          _jspx_push_body_count_sql_005fupdate_005f12[0]--;
                        }
                      }
                      if (_jspx_th_sql_005fupdate_005f12.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                        return;
                      }
                    } catch (java.lang.Throwable _jspx_exception) {
                      while (_jspx_push_body_count_sql_005fupdate_005f12[0]-- > 0)
                        out = _jspx_page_context.popBody();
                      _jspx_th_sql_005fupdate_005f12.doCatch(_jspx_exception);
                    } finally {
                      _jspx_th_sql_005fupdate_005f12.doFinally();
                    }
                    _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fdataSource.reuse(_jspx_th_sql_005fupdate_005f12);
                    _jspx_th_sql_005fupdate_005f12_reused = true;
                  } finally {
                    org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sql_005fupdate_005f12, _jsp_getInstanceManager(), _jspx_th_sql_005fupdate_005f12_reused);
                  }
                  out.write(" \r\n");
                  out.write("\t\t\t\t\t\t\t");

				
			
			String sqlpiu="select PIU_of_RVNL from xx_projectattributes_master where Project_ID="+project_id;  
			 Statement stmtpiu = conn.createStatement();
				ResultSet rspiu = stmtpiu.executeQuery(sqlpiu);
				String piun=null;
			while(rspiu.next()){
				piun=rspiu.getString("PIU_of_RVNL");
				}
			String sqlpiuid="select PIU_Id from xx_piu_master where PIU_Name='"+piun+"'";  
			 Statement stmtpiuid = conn.createStatement();
				ResultSet rspiuid = stmtpiuid.executeQuery(sqlpiuid);
				String piunid=null;
			while(rspiuid.next()){
				piunid=rspiuid.getString("PIU_Id");
				}
			String sqlpiuuid="select distinct User_Id from xx_user_zone_mapping where piu_id="+piunid;  
			 Statement stmtpiuuid = conn.createStatement();
				ResultSet rspiuuid = stmtpiuuid.executeQuery(sqlpiuuid);
				String piuuid=null;
			while(rspiuuid.next()){
				piuuid=rspiuuid.getString("User_Id");
				}
				
			Set<String> zone_ids = new HashSet<String>();
			for(int i=0; i < Integer.parseInt(packagedata);i++){
				String packageid="";
				if(count<pacids.length){
					packageid=pacids[count];
				}
									
			}
				//System.out.println("last print before--------------------"+packageid);
				int p1=0;
				for(int k1=0;k1<pacids.length;k1++){
				
				
				for(int j=1;j<=2;j++){
						String name="divisions"+j+":"+p1;	
						
						divisioncheck = request.getParameterValues(name);
						
						
						if (divisioncheck != null) 
						{
				 		  for (int k = 0; k < divisioncheck.length; k++) {
				 			
				 			String divisionid=null;  
				 			  
				 			 				 			 				 			  
				 			 conn = ds.getConnection();
				 			  
				 			 Statement stmt = conn.createStatement();
								ResultSet rs2 = stmt.executeQuery("select ext_zone_id from xx_divisions_map where division_name = '"+divisioncheck[k]+"'");

								String z_id = null; 

								while (rs2.next()) {
									z_id = rs2.getString(1); 
									zone_ids.add(z_id);
											
								}
				 			  
								
                  out.write("\r\n");
                  out.write("\t\t\t\t\t\t\t\t");
                  //  sql:update
                  org.apache.taglibs.standard.tag.rt.sql.UpdateTag _jspx_th_sql_005fupdate_005f13 = (org.apache.taglibs.standard.tag.rt.sql.UpdateTag) _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fvar_005fdataSource.get(org.apache.taglibs.standard.tag.rt.sql.UpdateTag.class);
                  boolean _jspx_th_sql_005fupdate_005f13_reused = false;
                  try {
                    _jspx_th_sql_005fupdate_005f13.setPageContext(_jspx_page_context);
                    _jspx_th_sql_005fupdate_005f13.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f3);
                    // /Admin/CreateProjects1.jsp(2459,8) name = dataSource type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                    _jspx_th_sql_005fupdate_005f13.setDataSource("jdbc/MySQLDB");
                    // /Admin/CreateProjects1.jsp(2459,8) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                    _jspx_th_sql_005fupdate_005f13.setVar("rs");
                    int[] _jspx_push_body_count_sql_005fupdate_005f13 = new int[] { 0 };
                    try {
                      int _jspx_eval_sql_005fupdate_005f13 = _jspx_th_sql_005fupdate_005f13.doStartTag();
                      if (_jspx_eval_sql_005fupdate_005f13 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                        if (_jspx_eval_sql_005fupdate_005f13 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                          _jspx_push_body_count_sql_005fupdate_005f13[0]++;
                          out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_sql_005fupdate_005f13);
                        }
                        do {
                          out.write("\r\n");
                          out.write("\t\t\t\t\t\t\t\t   INSERT INTO xx_project_division_map (package_id,division_name,zone_id) VALUES ('");
                          out.print(pacids[k1]);
                          out.write('\'');
                          out.write(',');
                          out.write('\'');
                          out.print(divisioncheck[k]);
                          out.write('\'');
                          out.write(',');
                          out.write('\'');
                          out.print(z_id);
                          out.write("');\r\n");
                          out.write("\t\t\t\t\t\t\t\t");
                          int evalDoAfterBody = _jspx_th_sql_005fupdate_005f13.doAfterBody();
                          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                            break;
                        } while (true);
                        if (_jspx_eval_sql_005fupdate_005f13 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                          out = _jspx_page_context.popBody();
                          _jspx_push_body_count_sql_005fupdate_005f13[0]--;
                        }
                      }
                      if (_jspx_th_sql_005fupdate_005f13.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                        return;
                      }
                    } catch (java.lang.Throwable _jspx_exception) {
                      while (_jspx_push_body_count_sql_005fupdate_005f13[0]-- > 0)
                        out = _jspx_page_context.popBody();
                      _jspx_th_sql_005fupdate_005f13.doCatch(_jspx_exception);
                    } finally {
                      _jspx_th_sql_005fupdate_005f13.doFinally();
                    }
                    _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fvar_005fdataSource.reuse(_jspx_th_sql_005fupdate_005f13);
                    _jspx_th_sql_005fupdate_005f13_reused = true;
                  } finally {
                    org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sql_005fupdate_005f13, _jsp_getInstanceManager(), _jspx_th_sql_005fupdate_005f13_reused);
                  }
                  out.write("\r\n");
                  out.write("\t\t\t\t\t\t\t\t");
	
							
								
				 			 divisions=divisions+"~"+divisioncheck[k];
				 		  }
						}
				}	
				count++;
			p1++;	
			}
			
			
			System.out.println("PPP:"+Outprojectid);
		
			Statement stpro=conn.createStatement();
			String sql8 = "select Project from xx_projectattributes_master where Project_ID='"+project_id+"'";
			ResultSet rs2 = stpro.executeQuery("select Project from xx_projectattributes_master where Project_ID='"+project_id+"'");
			String projectname="";
			while (rs2.next()) {
				projectname=rs2.getString("Project");
			}
			
			//conn.close();
			
			
                  out.write("\r\n");
                  out.write("\t\t\t<table class=\"mainClass\" style=\"background-color: #F0FFFF\">\r\n");
                  out.write("\t\t\t<tr>\r\n");
                  out.write("\t\t\t<td>\r\n");
                  out.write("\t\t\t<b> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;Project Updated successfully with Project ID: ");
                  out.print( project_id);
                  out.write(" & Name: ");
                  out.print(projectname );
                  out.write("</b>\r\n");
                  out.write("\t\t\t<br><br><br>\r\n");
                  out.write("\t\t\t\r\n");
                  out.write("\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <input type=\"reset\" class=\"btn btn-primary\" value=\"OK\" onClick=\"refreshAndClose()\" />\r\n");
                  out.write("\t\t\t</td>\r\n");
                  out.write("\t\t\t</tr>\r\n");
                  out.write("\t\t\t\r\n");
                  out.write("\t\t\t</table>\r\n");
                  out.write("\t\t");
		
			
		
}catch(Exception e){
e.printStackTrace();
} finally {
    try { conn.close(); } catch (Exception e) { /* ignored */ }
}


                  out.write('\r');
                  out.write('\n');
                  int evalDoAfterBody = _jspx_th_c_005fif_005f3.doAfterBody();
                  if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                    break;
                } while (true);
              }
              if (_jspx_th_c_005fif_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                return;
              }
              _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f3);
              _jspx_th_c_005fif_005f3_reused = true;
            } finally {
              org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f3, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f3_reused);
            }
            out.write('\r');
            out.write('\n');
            int evalDoAfterBody = _jspx_th_c_005fif_005f2.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fif_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
        _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f2);
        _jspx_th_c_005fif_005f2_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f2, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f2_reused);
      }
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      //  c:if
      org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f4 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
      boolean _jspx_th_c_005fif_005f4_reused = false;
      try {
        _jspx_th_c_005fif_005f4.setPageContext(_jspx_page_context);
        _jspx_th_c_005fif_005f4.setParent(null);
        // /Admin/CreateProjects1.jsp(2512,0) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_c_005fif_005f4.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${param.deletepackage != null}", java.lang.Boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false)).booleanValue());
        int _jspx_eval_c_005fif_005f4 = _jspx_th_c_005fif_005f4.doStartTag();
        if (_jspx_eval_c_005fif_005f4 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write('\r');
            out.write('\n');



String uri = request.getScheme() + "://" +   // "http" + "://
        request.getServerName() +       // "myhost"
        ":" +                           // ":"
        request.getServerPort() +       // "8080"
        request.getRequestURI() +       // "/people"
        "?" +                           // "?"
        request.getQueryString();  

String projid=null;
int packagedetails=0;
Connection conn = null;
try {
	
	Context initCtx = new InitialContext();
	Context envCtx = (Context) initCtx.lookup("java:comp/env");
	DataSource ds = (DataSource) envCtx.lookup("jdbc/MySQLDB");

	  conn = ds.getConnection();
	String delcode =	request.getParameter("deletepackage");
if (delcode.equalsIgnoreCase("delete")) {
String packageid=request.getParameter("doc_id");
String sql112="select * from xx_packages_project where package_id='"+packageid+"'";

PreparedStatement psdat1 = conn.prepareStatement(sql112);
ResultSet rsdat1 = psdat1.executeQuery();
while(rsdat1.next()){
	
	projid=rsdat1.getString("project_id");										
}
String sql1121="select * from xx_projectattributes_master where Project_ID='"+projid+"'";

PreparedStatement psdat11 = conn.prepareStatement(sql1121);
ResultSet rsdat11 = psdat11.executeQuery();
while(rsdat11.next()){
	
	 packagedetails=rsdat11.getInt("PackageOfProject");	
	packagedetails=packagedetails-1;
}


            out.write('\r');
            out.write('\n');
            out.write(' ');
            //  sql:update
            org.apache.taglibs.standard.tag.rt.sql.UpdateTag _jspx_th_sql_005fupdate_005f14 = (org.apache.taglibs.standard.tag.rt.sql.UpdateTag) _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fvar_005fdataSource.get(org.apache.taglibs.standard.tag.rt.sql.UpdateTag.class);
            boolean _jspx_th_sql_005fupdate_005f14_reused = false;
            try {
              _jspx_th_sql_005fupdate_005f14.setPageContext(_jspx_page_context);
              _jspx_th_sql_005fupdate_005f14.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f4);
              // /Admin/CreateProjects1.jsp(2556,1) name = dataSource type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_sql_005fupdate_005f14.setDataSource("jdbc/MySQLDB");
              // /Admin/CreateProjects1.jsp(2556,1) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_sql_005fupdate_005f14.setVar("rs");
              int[] _jspx_push_body_count_sql_005fupdate_005f14 = new int[] { 0 };
              try {
                int _jspx_eval_sql_005fupdate_005f14 = _jspx_th_sql_005fupdate_005f14.doStartTag();
                if (_jspx_eval_sql_005fupdate_005f14 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                  if (_jspx_eval_sql_005fupdate_005f14 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                    _jspx_push_body_count_sql_005fupdate_005f14[0]++;
                    out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_sql_005fupdate_005f14);
                  }
                  do {
                    out.write("\r\n");
                    out.write("  Delete from xx_project_user_mapping where Package_Id='");
                    out.print(packageid );
                    out.write("'\r\n");
                    out.write("  ");
                    int evalDoAfterBody = _jspx_th_sql_005fupdate_005f14.doAfterBody();
                    if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                      break;
                  } while (true);
                  if (_jspx_eval_sql_005fupdate_005f14 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                    out = _jspx_page_context.popBody();
                    _jspx_push_body_count_sql_005fupdate_005f14[0]--;
                  }
                }
                if (_jspx_th_sql_005fupdate_005f14.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                  return;
                }
              } catch (java.lang.Throwable _jspx_exception) {
                while (_jspx_push_body_count_sql_005fupdate_005f14[0]-- > 0)
                  out = _jspx_page_context.popBody();
                _jspx_th_sql_005fupdate_005f14.doCatch(_jspx_exception);
              } finally {
                _jspx_th_sql_005fupdate_005f14.doFinally();
              }
              _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fvar_005fdataSource.reuse(_jspx_th_sql_005fupdate_005f14);
              _jspx_th_sql_005fupdate_005f14_reused = true;
            } finally {
              org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sql_005fupdate_005f14, _jsp_getInstanceManager(), _jspx_th_sql_005fupdate_005f14_reused);
            }
            out.write(" \r\n");
            out.write("  ");
            //  sql:update
            org.apache.taglibs.standard.tag.rt.sql.UpdateTag _jspx_th_sql_005fupdate_005f15 = (org.apache.taglibs.standard.tag.rt.sql.UpdateTag) _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fvar_005fdataSource.get(org.apache.taglibs.standard.tag.rt.sql.UpdateTag.class);
            boolean _jspx_th_sql_005fupdate_005f15_reused = false;
            try {
              _jspx_th_sql_005fupdate_005f15.setPageContext(_jspx_page_context);
              _jspx_th_sql_005fupdate_005f15.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f4);
              // /Admin/CreateProjects1.jsp(2559,2) name = dataSource type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_sql_005fupdate_005f15.setDataSource("jdbc/MySQLDB");
              // /Admin/CreateProjects1.jsp(2559,2) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_sql_005fupdate_005f15.setVar("rs");
              int[] _jspx_push_body_count_sql_005fupdate_005f15 = new int[] { 0 };
              try {
                int _jspx_eval_sql_005fupdate_005f15 = _jspx_th_sql_005fupdate_005f15.doStartTag();
                if (_jspx_eval_sql_005fupdate_005f15 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                  if (_jspx_eval_sql_005fupdate_005f15 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                    _jspx_push_body_count_sql_005fupdate_005f15[0]++;
                    out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_sql_005fupdate_005f15);
                  }
                  do {
                    out.write("\r\n");
                    out.write("  Delete from xx_packages_project where package_id='");
                    out.print(packageid );
                    out.write("'\r\n");
                    out.write("  ");
                    int evalDoAfterBody = _jspx_th_sql_005fupdate_005f15.doAfterBody();
                    if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                      break;
                  } while (true);
                  if (_jspx_eval_sql_005fupdate_005f15 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                    out = _jspx_page_context.popBody();
                    _jspx_push_body_count_sql_005fupdate_005f15[0]--;
                  }
                }
                if (_jspx_th_sql_005fupdate_005f15.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                  return;
                }
              } catch (java.lang.Throwable _jspx_exception) {
                while (_jspx_push_body_count_sql_005fupdate_005f15[0]-- > 0)
                  out = _jspx_page_context.popBody();
                _jspx_th_sql_005fupdate_005f15.doCatch(_jspx_exception);
              } finally {
                _jspx_th_sql_005fupdate_005f15.doFinally();
              }
              _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fvar_005fdataSource.reuse(_jspx_th_sql_005fupdate_005f15);
              _jspx_th_sql_005fupdate_005f15_reused = true;
            } finally {
              org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sql_005fupdate_005f15, _jsp_getInstanceManager(), _jspx_th_sql_005fupdate_005f15_reused);
            }
            out.write(" \r\n");
            out.write("  ");
            //  sql:update
            org.apache.taglibs.standard.tag.rt.sql.UpdateTag _jspx_th_sql_005fupdate_005f16 = (org.apache.taglibs.standard.tag.rt.sql.UpdateTag) _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fvar_005fdataSource.get(org.apache.taglibs.standard.tag.rt.sql.UpdateTag.class);
            boolean _jspx_th_sql_005fupdate_005f16_reused = false;
            try {
              _jspx_th_sql_005fupdate_005f16.setPageContext(_jspx_page_context);
              _jspx_th_sql_005fupdate_005f16.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f4);
              // /Admin/CreateProjects1.jsp(2562,2) name = dataSource type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_sql_005fupdate_005f16.setDataSource("jdbc/MySQLDB");
              // /Admin/CreateProjects1.jsp(2562,2) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_sql_005fupdate_005f16.setVar("rs");
              int[] _jspx_push_body_count_sql_005fupdate_005f16 = new int[] { 0 };
              try {
                int _jspx_eval_sql_005fupdate_005f16 = _jspx_th_sql_005fupdate_005f16.doStartTag();
                if (_jspx_eval_sql_005fupdate_005f16 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                  if (_jspx_eval_sql_005fupdate_005f16 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                    _jspx_push_body_count_sql_005fupdate_005f16[0]++;
                    out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_sql_005fupdate_005f16);
                  }
                  do {
                    out.write("\r\n");
                    out.write("  Delete from xx_project_division_map where package_id='");
                    out.print(packageid );
                    out.write("'\r\n");
                    out.write("  ");
                    int evalDoAfterBody = _jspx_th_sql_005fupdate_005f16.doAfterBody();
                    if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                      break;
                  } while (true);
                  if (_jspx_eval_sql_005fupdate_005f16 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                    out = _jspx_page_context.popBody();
                    _jspx_push_body_count_sql_005fupdate_005f16[0]--;
                  }
                }
                if (_jspx_th_sql_005fupdate_005f16.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                  return;
                }
              } catch (java.lang.Throwable _jspx_exception) {
                while (_jspx_push_body_count_sql_005fupdate_005f16[0]-- > 0)
                  out = _jspx_page_context.popBody();
                _jspx_th_sql_005fupdate_005f16.doCatch(_jspx_exception);
              } finally {
                _jspx_th_sql_005fupdate_005f16.doFinally();
              }
              _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fvar_005fdataSource.reuse(_jspx_th_sql_005fupdate_005f16);
              _jspx_th_sql_005fupdate_005f16_reused = true;
            } finally {
              org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sql_005fupdate_005f16, _jsp_getInstanceManager(), _jspx_th_sql_005fupdate_005f16_reused);
            }
            out.write("\r\n");
            out.write("   ");
            //  sql:update
            org.apache.taglibs.standard.tag.rt.sql.UpdateTag _jspx_th_sql_005fupdate_005f17 = (org.apache.taglibs.standard.tag.rt.sql.UpdateTag) _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fvar_005fdataSource.get(org.apache.taglibs.standard.tag.rt.sql.UpdateTag.class);
            boolean _jspx_th_sql_005fupdate_005f17_reused = false;
            try {
              _jspx_th_sql_005fupdate_005f17.setPageContext(_jspx_page_context);
              _jspx_th_sql_005fupdate_005f17.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f4);
              // /Admin/CreateProjects1.jsp(2565,3) name = dataSource type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_sql_005fupdate_005f17.setDataSource("jdbc/MySQLDB");
              // /Admin/CreateProjects1.jsp(2565,3) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_sql_005fupdate_005f17.setVar("rs");
              int[] _jspx_push_body_count_sql_005fupdate_005f17 = new int[] { 0 };
              try {
                int _jspx_eval_sql_005fupdate_005f17 = _jspx_th_sql_005fupdate_005f17.doStartTag();
                if (_jspx_eval_sql_005fupdate_005f17 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                  if (_jspx_eval_sql_005fupdate_005f17 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                    _jspx_push_body_count_sql_005fupdate_005f17[0]++;
                    out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_sql_005fupdate_005f17);
                  }
                  do {
                    out.write("\r\n");
                    out.write("\t   UPDATE  xx_projectattributes_master SET PackageOfProject='");
                    out.print(packagedetails);
                    out.write("' where Project_ID='");
                    out.print(projid );
                    out.write("'\r\n");
                    out.write("\t");
                    int evalDoAfterBody = _jspx_th_sql_005fupdate_005f17.doAfterBody();
                    if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                      break;
                  } while (true);
                  if (_jspx_eval_sql_005fupdate_005f17 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                    out = _jspx_page_context.popBody();
                    _jspx_push_body_count_sql_005fupdate_005f17[0]--;
                  }
                }
                if (_jspx_th_sql_005fupdate_005f17.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                  return;
                }
              } catch (java.lang.Throwable _jspx_exception) {
                while (_jspx_push_body_count_sql_005fupdate_005f17[0]-- > 0)
                  out = _jspx_page_context.popBody();
                _jspx_th_sql_005fupdate_005f17.doCatch(_jspx_exception);
              } finally {
                _jspx_th_sql_005fupdate_005f17.doFinally();
              }
              _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fvar_005fdataSource.reuse(_jspx_th_sql_005fupdate_005f17);
              _jspx_th_sql_005fupdate_005f17_reused = true;
            } finally {
              org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sql_005fupdate_005f17, _jsp_getInstanceManager(), _jspx_th_sql_005fupdate_005f17_reused);
            }
            out.write('\r');
            out.write('\n');
 
} 	
//System.out.println("uri"+uri+"delcode"+delcode);
if(request.getParameter("deletepackage").equalsIgnoreCase("delete")){
	response.sendRedirect(uri);	
 }

}
catch(Exception e){
	e.printStackTrace();
 } finally {
	    try { conn.close(); } catch (Exception e) { /* ignored */ }
	}

            out.write('	');
            out.write('\r');
            out.write('\n');
            int evalDoAfterBody = _jspx_th_c_005fif_005f4.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fif_005f4.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
        _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f4);
        _jspx_th_c_005fif_005f4_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f4, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f4_reused);
      }
      out.write("\r\n");
      out.write("</form>\r\n");
      out.write("<br><br><br><br><br><br>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t     \r\n");
      out.write("\r\n");
      out.write("</body><br><br>\r\n");
      out.write(" ");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"http://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<style>\r\n");
      out.write("@import url('http://fonts.googleapis.com/css?family=Open+Sans:400,700');\r\n");
      out.write("\r\n");
      out.write("footer{\r\n");
      out.write("\tposition: fixed;\r\n");
      out.write("\tmargin-top:150px;\r\n");
      out.write("\tbottom: 0;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- \r\n");
      out.write("<footer>\r\n");
      out.write("<div class=\"city\">\r\n");
      out.write("  <ul class=\" nav navbar-nav\">\r\n");
      out.write("  \r\n");
      out.write("    <li class=\"footerli\">Rail Vikas Nigam Limited.</li>\r\n");
      out.write("    </ul>\r\n");
      out.write("    <ul   class=\"nav navabar-nav\" style=\"float:right;\">\r\n");
      out.write("   <li class=\"footerli\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Design & Developed By<a href=\"http://www.awcsoftware.net\" style=\"text-decoration:none;\">AWC SOFTWARE PVT LTD</a></li>\r\n");
      out.write("    \r\n");
      out.write("  </ul>\r\n");
      out.write(" </div>\r\n");
      out.write("\r\n");
      out.write("</footer> -->\r\n");
      out.write("\r\n");
      out.write("<footer class=\"footer-basic-centered\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t<p class=\"footer-company-motto\" style=\"float:left;\">Rail Vikas Nigam Limited</p>\r\n");
      out.write("\t\t\t<p class=\"footer-company-motto\" style=\"float:center; font-family:serif; font-size:14px; font-style:italic; margin-top:5px;\">Ver:2.30.pks</p>\r\n");
      out.write("\t\t\t<p class=\"footer-company-name\" style=\"float:right; margin-top:-20px;\"> Design & Developed By<a href=\"http://www.awcsoftware.net\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AWC SOFTWARE PVT LTD</a></p>\r\n");
      out.write("\r\n");
      out.write("\t\t</footer>\r\n");
      out.write("</body>");
      out.write("\r\n");
      out.write(" \r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
