/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.86
 * Generated at: 2018-05-04 06:25:26 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.Admin;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import javax.servlet.*;
import javax.servlet.http.*;
import javax.naming.*;
import java.sql.*;
import javax.sql.*;

public final class AddRowHierarchy_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/WEB-INF/sessionCheck1.jspf", Long.valueOf(1524567358000L));
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

 
int timeout = session.getMaxInactiveInterval();
response.setHeader("Refresh", timeout + "; URL = admn_login.jsp");

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\r\n");
      out.write("<title>Create Designation</title>\r\n");
      out.write("<script src=\"resources/JS/backButton.js\"></script>\r\n");
      out.write("<script src=\"resources/JS/validateSysAdmin230.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");

	String zone = request.getParameter("zone");
	String docType = request.getParameter("docType");
	String level = request.getParameter("Level");
	//System.out.println("ZZZZX" + zone + ":" + docType + ":" + level);
	int lev = Integer.parseInt(level);
	int xx_level = lev + 1;
	System.out.println(zone + "PI DEPT");
	String buffer = "";
	int flag = 0;
	Connection conn = null;
	PreparedStatement dep_ps=null;
	ResultSet dep_rs = null;
		
	try {

		Context initCtx = new InitialContext();
		Context envCtx = (Context) initCtx.lookup("java:comp/env");
		DataSource ds = (DataSource) envCtx.lookup("jdbc/MySQLDB");

		 conn = ds.getConnection();
		String dep_sql = "select * from xx_departments_master where type = 'MOR'";

		dep_ps = conn.prepareStatement(dep_sql);

		dep_rs = dep_ps.executeQuery();

		buffer = "<tr class='active'><td >"
				+ zone
				+ "</td><td >"
				+ docType
				+ "</td>"
				+ "<td ><select name='Department_name"
				+ xx_level
				+ "' id='Department_name"
				+ xx_level
				+ "' style='width: 200px;' onchange='DepDesgin_Update("
				+ xx_level
				+ ")'>"
				+ "<option value='none'>-- Select Department --</option>";
		while (dep_rs.next()) {
			String dept = dep_rs.getString("department_name");

			buffer += "<option value='" + dept + "'>" + dept
					+ "</option>";
		}

		buffer += "</select></td><td ><div id ='DesgDiv_RVNL"
				+ xx_level
				+ "' style='display: inline;'><select name='Designation' id='designation' style='width: 200px;'>"
				+ "<option value='-1'>-- Select Designation --</option></select></div></td><td id='LevelId"
				+ xx_level + "'>" + xx_level + "</td>"
				+ "<td><img id='AddImage" + xx_level
				+ "' src='images/Add.png' onclick='add_Hierarchy("
				+ xx_level + ",&quot;" + zone + "&quot;,&quot;"
				+ docType + "&quot;)' class='add-hierarchy'></td>"
				+ "<td><img id ='Remove" + xx_level
				+ "' src='images/Remove.png' onclick=''></td></tr>";

		response.getWriter().println(buffer);
	} catch (Exception e) {
		System.out.println(e);
	} finally {
	    try { dep_rs.close(); } catch (Exception e) { /* ignored */ }
	    try { dep_ps.close(); } catch (Exception e) { /* ignored */ }
	    try { conn.close(); } catch (Exception e) { /* ignored */ }
	}

      out.write('\r');
      out.write('\n');
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
