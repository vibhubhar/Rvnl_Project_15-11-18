/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.86
 * Generated at: 2018-05-29 07:34:24 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.Admin;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import javax.servlet.*;
import javax.servlet.http.*;
import java.util.*;
import javax.naming.*;
import java.sql.*;
import javax.sql.*;
import javax.servlet.*;
import javax.servlet.http.*;
import javax.naming.*;
import java.sql.*;
import javax.sql.*;
import java.util.*;
import java.util.Date;
import java.text.SimpleDateFormat;

public final class addToDb_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("/Admin/included/NewHeader.jsp", Long.valueOf(1527076887650L));
    _jspx_dependants.put("/WEB-INF/sessionCheck1.jspf", Long.valueOf(1524567358000L));
    _jspx_dependants.put("/Admin/included/Newfooter.jsp", Long.valueOf(1526628672412L));
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fsql_005fquery_0026_005fvar_005fdataSource;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fdataSource;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fsql_005fquery_0026_005fvar_005fdataSource = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fdataSource = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fsql_005fquery_0026_005fvar_005fdataSource.release();
    _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fdataSource.release();
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

 
int timeout = session.getMaxInactiveInterval();
response.setHeader("Refresh", timeout + "; URL = admn_login.jsp");

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t");

 String theme3 = (String) pageContext.getAttribute("myTheme", PageContext.SESSION_SCOPE);
if (theme3!=null) {
if (theme3.equalsIgnoreCase("brown") ) { 
      out.write("\r\n");
      out.write("\t\t<link rel=\"stylesheet\" type=\"text/css\" href=\"resources/css/ThmBrown.css\">\r\n");
      out.write("\t\t");
 } else if (theme3.equalsIgnoreCase("blue")) { 
      out.write(" \r\n");
      out.write("\t\t<link rel=\"stylesheet\" type=\"text/css\" href=\"resources/css/ThmBlue.css\">\r\n");
      out.write("\t\t");
} else if (theme3.equalsIgnoreCase("green")) { 
      out.write(" \r\n");
      out.write("\t\t<link rel=\"stylesheet\" type=\"text/css\" href=\"resources/css/ThmGreen.css\">\r\n");
      out.write("\t\t");
} else if (theme3.equalsIgnoreCase("magenta")) { 
      out.write(" \r\n");
      out.write("\t\t<link rel=\"stylesheet\" type=\"text/css\" href=\"resources/css/Thmmagenta.css\">\r\n");
      out.write("\t\t");
}
} else {
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"resources/css/ThmBrown.css\">\r\n");
      out.write("\t\t");
} 
      out.write("\r\n");
      out.write("\t\t\r\n");
      out.write("<meta charset=\"ISO-8859-1\">\r\n");
      out.write("<title>PDAMS</title>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script src=\"//code.jquery.com/jquery-1.10.2.js\"></script>\r\n");
      out.write("<style>\r\n");
      out.write(".white-marquee {\r\n");
      out.write("   font-family:   arial, serif, \"Times New Roman\", calibri, Times;\r\n");
      out.write("\tfont-size: 14px;\r\n");
      out.write("\tcolor:  white;\r\n");
      out.write("\t//margin-left:50px;\r\n");
      out.write("\tfont-weight:bold;\r\n");
      out.write("\tpadding:10px;\r\n");
      out.write("\tpadding-bottom:5px;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>   \r\n");

//String mailstatus=(String)session.getAttribute("MailStatus"); 
//String user = (String) session.getAttribute("user_name");
String user_code = (String) session.getAttribute("User_Code");
if (user_code!=null) {} else {user_code="0";}
 String mq=null, mqLaunch=null, mqMaint=null, mqOther=null, mqRly=null, mqRVNL=null;					
 //System.out.println("code="+user_code);	
  Connection conn7 = null;
     			PreparedStatement ps777=null;
     			ResultSet  rs777=null;
     						//Statement stmt7 = null;
     						try {
     							Context initCtx = new InitialContext();
     							Context envCtx = (Context) initCtx.lookup("java:comp/env");
     							DataSource ds = (DataSource) envCtx.lookup("jdbc/MySQLDB");

     							conn7 = ds.getConnection();
     							String sql35 = "select item, description from xx_maintenance";
     									
    								ps777 = conn7.prepareStatement(sql35);
    								rs777 = ps777.executeQuery();
    								while (rs777.next()) {
    									String item=rs777.getString(1);
    									 String desc=rs777.getString(2);
    									if (item.equalsIgnoreCase("marquee-launch")) {
    										mqLaunch=desc;
    									} else if (item.equalsIgnoreCase("marquee-maint")) {
    										mqMaint=desc;
    									} else if (item.equalsIgnoreCase("marquee-other")) {
    										mqOther=desc;
    									} else if (item.equalsIgnoreCase("marquee-Rly")) {
    										mqRly=desc;
    									} else if (item.equalsIgnoreCase("marquee-RVNL")) {
    										mqRVNL=desc;
    									} 
    								}
    								if (user_code.equalsIgnoreCase("2")) {
    									mq= mqLaunch+"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"+mqMaint+"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"+mqOther+"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"+mqRly;
    								} else if (user_code.equalsIgnoreCase("5")) {
    									mq= mqLaunch+"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"+mqMaint+"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"+mqOther+"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"+mqRVNL;
    								} else {
    								mq= mqLaunch+"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"+mqMaint+"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"+mqOther;
    								}		 
    				    				//System.out.println("marquee="+mq);
     						}catch(Exception e){
    							
    							e.printStackTrace();
    						} finally {
    						    try { rs777.close(); } catch (Exception e) { /* ignored */ }
    						    try { ps777.close(); } catch (Exception e) { /* ignored */ }
    						    try { conn7.close(); } catch (Exception e) { /* ignored */ }
    						}



      out.write("\r\n");
      out.write("<input type=\"hidden\" id=\"menu1\" value='");
      out.print(session.getAttribute("user_name") );
      out.write("'>\r\n");
      out.write("     \t   <div class=\"header\">\r\n");
      out.write("   \r\n");
      out.write(" \t\t   <table width=\"100%\"><tr><th width=15%>\r\n");
      out.write("    \t\t  <img src=\"images/Rail_logo.png\"  class=\"img-responsive\" style=\"float:left;height:80px;margin-left:10px;\">\r\n");
      out.write("    \t\t  \r\n");
      out.write("   </td>\r\n");
      out.write("   <th width=60%>\r\n");
      out.write("      \t\t <h2 style=\" margin-left:5px;\"><i>Project Documents Approval Monitoring System (PDAMS)</i></h2>\t\r\n");
      out.write("   \r\n");
      out.write("   </th><th width=25%>\r\n");
      out.write("\t  <img src=\"images/RVNL_LOGO.jpg\"  class=\"img-responsive\" style=\"float:left;height:80px;margin-left:10px;\">\r\n");
      out.write(" \t\t  </table>\t\r\n");
      out.write("   </div>\r\n");
      out.write("\t   <div class=\"topmenu\" id=\"menu\">\r\n");
      out.write("\t  <div id=\"menu1\"  style=\"float:left;\"> \r\n");
      out.write("\t  \t\t<ul>\r\n");
      out.write("\t  \t\t\r\n");
      out.write("\t  \t\t<!-- <li><a href=\"user_index.jsp\">Add/Modify Docs</a></li>\r\n");
      out.write("\t   \t\t\t\t\t<li><a href=\"user_Project.jsp\">My Projects</a></li>\r\n");
      out.write("\t   \t\t\t\t\t<li><a href=\"Reportpiuinitiate.jsp\">My Reports</a></li>\r\n");
      out.write("\t   \t\t\t\t\t<li><a href=\"MoreInfo.jsp\">Returned Tasks</a></li>\r\n");
      out.write("\t   \t\t\t\t\t<li><a href=\"PullBack.jsp\">PullBack Doc</a></li>\r\n");
      out.write("\t   \t\t\t\t\t<li><a href=\"FinalApproval.jsp\">Docs under Approval</a></li>\r\n");
      out.write("\t   \t\t\t\t\t<li><a href=\"FinallyApprovedShow.jsp\">Approved Docs</a></li>\r\n");
      out.write("\t   \t\t\t\t\t<li><a href=\"ManualMail.jsp\">Reminders</a></li>\r\n");
      out.write("\t   \t\t\t\t\t<li><a href=\"User_List.jsp\">User List</a></li>\r\n");
      out.write("\t   \t\t\t\t\t<li><a href=\"changepasswordlocaladmin.jsp\">Change Password</a></li>\r\n");
      out.write("\t   \t\t\t\t\t<li><a href=\"helpmain.jsp\">Help</a></li>\r\n");
      out.write("\t   \t\t\t\t\t<li><a href=\"admn_logout.jsp\">Logout</a></li>  -->\r\n");
      out.write("\t   \t\t\t\t\t<li><a href=\"NewIndex.jsp\">Home</a></li>\r\n");
      out.write("\t   \t\t\t\t\t\r\n");
      out.write("\t   \t\t\t\t\t</ul>\t \r\n");
      out.write("\t   \t\t\t\t\t</div>  \r\n");
      out.write("\t   \t\t\t\t\t");

	   					if (!mq.equalsIgnoreCase("") && mq!=null) {
	   					
      out.write("\t\r\n");
      out.write("\t   \t<div id=\"menu11\" ></div>\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t   <div id=\"menu2\"  style=\"width:70%; float:left;\">     \t\t\t\t\t\r\n");
      out.write("\t   <marquee><span class=\"white-marquee\" id=\"white-marquee\" style=\"float:right; width:100%\">");
      out.print(mq );
      out.write("</span></marquee>  </div>\r\n");
      out.write("\t  ");

	  	}
	   	
      out.write("\t\r\n");
      out.write("\t   \t\r\n");
      out.write("\t\t\t\t\t\t\t</div> \r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\r\n");
      out.write("<title>RVNL Document Portal</title>\r\n");
      out.write("\r\n");
      out.write("<link href=\"resources/bootstrap/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n");
      out.write("<link href=\"resources/bootstrap/css/bootstrap.css\" rel=\"stylesheet\" />\r\n");
      out.write("<script type=\"text/javascript\"\r\n");
      out.write("\tsrc=\"https://code.jquery.com/jquery-1.12.4.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\"\r\n");
      out.write("\tsrc=\"https://code.jquery.com/ui/1.12.1/jquery-ui.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\"\r\n");
      out.write("\tsrc=\"http://ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js\"></script>\r\n");
      out.write("<script\r\n");
      out.write("\tsrc=\"http://ajax.aspnetcdn.com/ajax/jquery.ui/1.8.9/jquery-ui.js\"\r\n");
      out.write("\ttype=\"text/javascript\"></script>\r\n");
      out.write("<!--   <link \r\n");
      out.write("\thref=\"http://ajax.aspnetcdn.com/ajax/jquery.ui/1.8.9/themes/blitzer/jquery-ui.css\"\r\n");
      out.write("\trel=\"stylesheet\" type=\"text/css\" /> -->\r\n");
      out.write("<script src=\"resources/JS/backButton.js\"></script>\r\n");
      out.write("<script src=\"resources/JS/validateSysAdmin230.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\twindow.onunload = refreshParent;\r\n");
      out.write("\tfunction refreshParent() {\r\n");
      out.write("\t\twindow.opener.location.reload();\r\n");
      out.write("\t}\r\n");
      out.write("</script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\r\n");
      out.write("function loadXMLDoczone(element,er)\r\n");
      out.write("{\r\n");
      out.write("var xmlhttp;\r\n");
      out.write("var k=document.getElementById(element).value;\r\n");
      out.write("var urls=\"ZonePass.jsp?ver=\"+k;\r\n");
      out.write("\r\n");
      out.write("if (window.XMLHttpRequest)\r\n");
      out.write("  {\r\n");
      out.write("  xmlhttp=new XMLHttpRequest();\r\n");
      out.write("  }\r\n");
      out.write("else\r\n");
      out.write("  {\r\n");
      out.write("  xmlhttp=new ActiveXObject(\"Microsoft.XMLHTTP\");\r\n");
      out.write("  }\r\n");
      out.write("xmlhttp.onreadystatechange=function()\r\n");
      out.write("  {\r\n");
      out.write("  if (xmlhttp.readyState==4)\r\n");
      out.write("    {\r\n");
      out.write("        //document.getElementById(\"err\").style.color=\"red\";\r\n");
      out.write("        document.getElementById(er).innerHTML=xmlhttp.responseText;\r\n");
      out.write("\t\tvar ex=document.getElementById(\"exist\");\r\n");
      out.write("\t\tif(ex!=null){\r\n");
      out.write("\t\t\tdocument.getElementById(\"btnclick\").disabled = true;\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t}else{\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tdocument.getElementById(\"btnclick\").disabled = false;\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("    }\r\n");
      out.write("  }\r\n");
      out.write("xmlhttp.open(\"GET\",urls,true);\r\n");
      out.write("xmlhttp.send();\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function loadXMLDiv1(element,er)\r\n");
      out.write("{\r\n");
      out.write("var xmlhttp;\r\n");
      out.write("var k=document.getElementById(element).value;\r\n");
      out.write("var urls=\"DivisionPass.jsp?ver=\"+k;\r\n");
      out.write("\r\n");
      out.write("if (window.XMLHttpRequest)\r\n");
      out.write("  {\r\n");
      out.write("  xmlhttp=new XMLHttpRequest();\r\n");
      out.write("  }\r\n");
      out.write("else\r\n");
      out.write("  {\r\n");
      out.write("  xmlhttp=new ActiveXObject(\"Microsoft.XMLHTTP\");\r\n");
      out.write("  }\r\n");
      out.write("xmlhttp.onreadystatechange=function()\r\n");
      out.write("  {\r\n");
      out.write("  if (xmlhttp.readyState==4)\r\n");
      out.write("    {\r\n");
      out.write("        //document.getElementById(\"err\").style.color=\"red\";\r\n");
      out.write("        document.getElementById(er).innerHTML=xmlhttp.responseText;\r\n");
      out.write("\t\tvar ex=document.getElementById(\"exist\");\r\n");
      out.write("\t\tif(ex!=null){\r\n");
      out.write("\t\t\tdocument.getElementById(\"btnclick\").disabled = true;\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t}else{\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tdocument.getElementById(\"btnclick\").disabled = false;\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("    }\r\n");
      out.write("  }\r\n");
      out.write("xmlhttp.open(\"GET\",urls,true);\r\n");
      out.write("xmlhttp.send();\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("function loadXMLOrg(element,er)\r\n");
      out.write("{\r\n");
      out.write("var xmlhttp;\r\n");
      out.write("var k=document.getElementById(element).value;\r\n");
      out.write("var urls=\"OrgPass.jsp?ver=\"+k;\r\n");
      out.write("\r\n");
      out.write("if (window.XMLHttpRequest)\r\n");
      out.write("  {\r\n");
      out.write("  xmlhttp=new XMLHttpRequest();\r\n");
      out.write("  }\r\n");
      out.write("else\r\n");
      out.write("  {\r\n");
      out.write("  xmlhttp=new ActiveXObject(\"Microsoft.XMLHTTP\");\r\n");
      out.write("  }\r\n");
      out.write("xmlhttp.onreadystatechange=function()\r\n");
      out.write("  {\r\n");
      out.write("  if (xmlhttp.readyState==4)\r\n");
      out.write("    {\r\n");
      out.write("        //document.getElementById(\"err\").style.color=\"red\";\r\n");
      out.write("        document.getElementById(er).innerHTML=xmlhttp.responseText;\r\n");
      out.write("\t\tvar ex=document.getElementById(\"exist\");\r\n");
      out.write("\t\tif(ex!=null){\r\n");
      out.write("\t\t\tdocument.getElementById(\"btnclick\").disabled = true;\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t}else{\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tdocument.getElementById(\"btnclick\").disabled = false;\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("    }\r\n");
      out.write("  }\r\n");
      out.write("xmlhttp.open(\"GET\",urls,true);\r\n");
      out.write("xmlhttp.send();\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("function loadXMLPiu(element,er)\r\n");
      out.write("{\r\n");
      out.write("var xmlhttp;\r\n");
      out.write("var k=document.getElementById(element).value;\r\n");
      out.write("var urls=\"PiuPass.jsp?ver=\"+k;\r\n");
      out.write("\r\n");
      out.write("if (window.XMLHttpRequest)\r\n");
      out.write("  {\r\n");
      out.write("  xmlhttp=new XMLHttpRequest();\r\n");
      out.write("  }\r\n");
      out.write("else\r\n");
      out.write("  {\r\n");
      out.write("  xmlhttp=new ActiveXObject(\"Microsoft.XMLHTTP\");\r\n");
      out.write("  }\r\n");
      out.write("xmlhttp.onreadystatechange=function()\r\n");
      out.write("  {\r\n");
      out.write("  if (xmlhttp.readyState==4)\r\n");
      out.write("    {\r\n");
      out.write("        //document.getElementById(\"err\").style.color=\"red\";\r\n");
      out.write("        document.getElementById(er).innerHTML=xmlhttp.responseText;\r\n");
      out.write("\t\tvar ex=document.getElementById(\"exist\");\r\n");
      out.write("\t\tif(ex!=null){\r\n");
      out.write("\t\t\tdocument.getElementById(\"btnclick\").disabled = true;\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t}else{\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tdocument.getElementById(\"btnclick\").disabled = false;\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("    }\r\n");
      out.write("  }\r\n");
      out.write("xmlhttp.open(\"GET\",urls,true);\r\n");
      out.write("xmlhttp.send();\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("function loadXMLDoc1(element,er)\r\n");
      out.write("{\r\n");
      out.write("var xmlhttp;\r\n");
      out.write("var k=document.getElementById(element).value;\r\n");
      out.write("var urls=\"doctype.jsp?ver=\"+k;\r\n");
      out.write("\r\n");
      out.write("if (window.XMLHttpRequest)\r\n");
      out.write("  {\r\n");
      out.write("  xmlhttp=new XMLHttpRequest();\r\n");
      out.write("  }\r\n");
      out.write("else\r\n");
      out.write("  {\r\n");
      out.write("  xmlhttp=new ActiveXObject(\"Microsoft.XMLHTTP\");\r\n");
      out.write("  }\r\n");
      out.write("xmlhttp.onreadystatechange=function()\r\n");
      out.write("  {\r\n");
      out.write("  if (xmlhttp.readyState==4)\r\n");
      out.write("    {\r\n");
      out.write("        //document.getElementById(\"err\").style.color=\"red\";\r\n");
      out.write("        document.getElementById(er).innerHTML=xmlhttp.responseText;\r\n");
      out.write("\t\tvar ex=document.getElementById(\"exist\");\r\n");
      out.write("\t\tif(ex!=null){\r\n");
      out.write("\t\t\tdocument.getElementById(\"btnclick\").disabled = true;\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t}else{\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tdocument.getElementById(\"btnclick\").disabled = false;\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("    }\r\n");
      out.write("  }\r\n");
      out.write("xmlhttp.open(\"GET\",urls,true);\r\n");
      out.write("xmlhttp.send();\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("function loadXMLProj(element,er)\r\n");
      out.write("{\r\n");
      out.write("var xmlhttp;\r\n");
      out.write("var k=document.getElementById(element).value;\r\n");
      out.write("var urls=\"ProjectPass.jsp?ver=\"+k;\r\n");
      out.write("\r\n");
      out.write("if (window.XMLHttpRequest)\r\n");
      out.write("  {\r\n");
      out.write("  xmlhttp=new XMLHttpRequest();\r\n");
      out.write("  }\r\n");
      out.write("else\r\n");
      out.write("  {\r\n");
      out.write("  xmlhttp=new ActiveXObject(\"Microsoft.XMLHTTP\");\r\n");
      out.write("  }\r\n");
      out.write("xmlhttp.onreadystatechange=function()\r\n");
      out.write("  {\r\n");
      out.write("  if (xmlhttp.readyState==4)\r\n");
      out.write("    {\r\n");
      out.write("        //document.getElementById(\"err\").style.color=\"red\";\r\n");
      out.write("        document.getElementById(er).innerHTML=xmlhttp.responseText;\r\n");
      out.write("\t\tvar ex=document.getElementById(\"exist\");\r\n");
      out.write("\t\tif(ex!=null){\r\n");
      out.write("\t\t\tdocument.getElementById(\"btnclick\").disabled = true;\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t}else{\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tdocument.getElementById(\"btnclick\").disabled = false;\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("    }\r\n");
      out.write("  }\r\n");
      out.write("xmlhttp.open(\"GET\",urls,true);\r\n");
      out.write("xmlhttp.send();\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function loadXMLDesig11(element,er)\r\n");
      out.write("{\r\n");
      out.write("var xmlhttp;\r\n");
      out.write("var dep1=document.getElementById(\"department\").value;\r\n");
      out.write("var dep = encodeURIComponent(dep1);\r\n");
      out.write("var m1=document.getElementById(\"dTypes\").value;\r\n");
      out.write("var m = encodeURIComponent(m1);\r\n");
      out.write("var k1=document.getElementById(element).value;\r\n");
      out.write("var k = encodeURIComponent(k1);\r\n");
      out.write("var urls=\"DesigPass.jsp?ver=\"+k+\"&department=\"+dep+\"&newdesig=\"+m;\r\n");
      out.write("//alert(urls);\r\n");
      out.write("if (window.XMLHttpRequest)\r\n");
      out.write("  {\r\n");
      out.write("  xmlhttp=new XMLHttpRequest();\r\n");
      out.write("  }\r\n");
      out.write("else\r\n");
      out.write("  {\r\n");
      out.write("  xmlhttp=new ActiveXObject(\"Microsoft.XMLHTTP\");\r\n");
      out.write("  }\r\n");
      out.write("xmlhttp.onreadystatechange=function()\r\n");
      out.write("  {\r\n");
      out.write("  if (xmlhttp.readyState==4)\r\n");
      out.write("    {\r\n");
      out.write("        \r\n");
      out.write("        document.getElementById(er).innerHTML=xmlhttp.responseText;\r\n");
      out.write("\t\tvar ex=document.getElementById(\"exist\");\r\n");
      out.write("\t\tif(ex!=null){\r\n");
      out.write("\t\t\tdocument.getElementById(\"btnclick\").disabled = true;\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t}else{\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tdocument.getElementById(\"btnclick\").disabled = false;\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("    }\r\n");
      out.write("  }\r\n");
      out.write("xmlhttp.open(\"GET\",urls,true);\r\n");
      out.write("xmlhttp.send();\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("function loadXMLDept(element,er,p)\r\n");
      out.write("{\r\n");
      out.write("var xmlhttp;\r\n");
      out.write("var k1=document.getElementById(element).value;\r\n");
      out.write("var k = encodeURIComponent(k1);\r\n");
      out.write("var l1=document.getElementById(p).value;\r\n");
      out.write("var l = encodeURIComponent(l1);\r\n");
      out.write("var urls=\"DeptPass.jsp?ver='\"+k+\"&param5=\"+l;\r\n");
      out.write("//alert(urls);\r\n");
      out.write("if (window.XMLHttpRequest)\r\n");
      out.write("  {\r\n");
      out.write("  xmlhttp=new XMLHttpRequest();\r\n");
      out.write("  }\r\n");
      out.write("else\r\n");
      out.write("  {\r\n");
      out.write("  xmlhttp=new ActiveXObject(\"Microsoft.XMLHTTP\");\r\n");
      out.write("  }\r\n");
      out.write("xmlhttp.onreadystatechange=function()\r\n");
      out.write("  {\r\n");
      out.write("  if (xmlhttp.readyState==4)\r\n");
      out.write("    {\r\n");
      out.write("        //document.getElementById(\"err\").style.color=\"red\";\r\n");
      out.write("        document.getElementById(er).innerHTML=xmlhttp.responseText;\r\n");
      out.write("\t\tvar ex=document.getElementById(\"exist\");\r\n");
      out.write("\t\tif(ex!=null){\r\n");
      out.write("\t\t\tdocument.getElementById(\"btnclick\").disabled = true;\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t}else{\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tdocument.getElementById(\"btnclick\").disabled = false;\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("    }\r\n");
      out.write("  }\r\n");
      out.write("xmlhttp.open(\"GET\",urls,true);\r\n");
      out.write("xmlhttp.send();\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t");
      if (_jspx_meth_sql_005fquery_005f0(_jspx_page_context))
        return;
      out.write('\r');
      out.write('\n');
      out.write('	');

		String dbType = request.getParameter("type");
		
		String zoneName = request.getParameter("zoneName");
		String divisionName = request.getParameter("divisionName");
		String Org = request.getParameter("Org");
		String piu = request.getParameter("piu");
		String documents = request.getParameter("Documents");
		String loctype = request.getParameter("loctype1");
		String projects = request.getParameter("Projects");
		String departments = request.getParameter("department");
		String dType = request.getParameter("dType");
		String designations = request.getParameter("designations");
		String dTypes = request.getParameter("dTypes");
		
		String condition = request.getParameter("condition");
		String dzone = request.getParameter("D_Zone");
		System.out.println("add to db:"+Org+piu+zoneName+dbType);
	
      out.write("\r\n");
      out.write("\t<input type=\"hidden\" id=ItemType value=");
      out.print(dbType);
      out.write(">\r\n");
      out.write("\t");

		Connection con = null;
		Statement stmt = null;
		PreparedStatement d_stmt = null, pss4=null;
		ResultSet rs = null, d_rs = null, rss4=null;
		
		try {
			Context initCtx = new InitialContext();
			Context envCtx = (Context) initCtx.lookup("java:comp/env");
			DataSource ds = (DataSource) envCtx.lookup("jdbc/MySQLDB");
			con = ds.getConnection();
			java.util.ArrayList<String> projal=new java.util.ArrayList<String>();		
			java.util.ArrayList<String> packal=new java.util.ArrayList<String>();
			int queryUpdate = 0;
			int var_doctype=0;
			String sqlQuery = null;

			String d_sql = "SELECT zone_id FROM xx_zones_master where zone_name ='"
					+ dzone + "'";
			d_stmt = con.prepareStatement(d_sql);
			d_rs = d_stmt.executeQuery();
			String z_id = null;
			while (d_rs.next()) {
				z_id = d_rs.getString("zone_id");
			}

			if (condition != null) {
				if (dbType.equalsIgnoreCase("zone")) {
					ResultSet rss3 = null;
					PreparedStatement pss3 = null;

					String query = "select * from xx_zones_master where Zone_Name='"
							+ zoneName + "'";

					pss3 = con.prepareStatement(query);
					rss3 = pss3.executeQuery();
					if (rss3.next()) {
	response.sendRedirect("Update.jsp");
		} else {
						sqlQuery = "insert into xx_zones_master (Zone_Name) values('"
								+ zoneName + "')";
					}
					rss3.close();
					pss3.close();

				} else if (dbType.equalsIgnoreCase("division")) {
					ResultSet rss3 = null, rss30 = null;
					PreparedStatement pss3 = null, pss30 = null;

					String query = "select * from xx_divisions_map where division_name='"
							+ divisionName
							+ "' and ext_zone_id = '"
							+ z_id
							+ "'";

					pss3 = con.prepareStatement(query);
					rss3 = pss3.executeQuery();
					if (rss3.next()) {
						String query1 = "select zone_name from xx_zones_master where zone_id ='"+ z_id + "'";

						pss30 = con.prepareStatement(query1);
						rss30 = pss30.executeQuery();
						if (rss30.next()) {
	
	
	response.sendRedirect("Update.jsp");
	
		}
					} else {
						sqlQuery = "Insert into xx_divisions_map(ext_zone_id,division_name) value('"
								+ z_id + "','" + divisionName + "')";
					}
					rss3.close();
					pss3.close();

				} else if (dbType.equalsIgnoreCase("Others")) {
					ResultSet rss3 = null;
					PreparedStatement pss3 = null;

					String query = "select * from xx_org_master where Org_Name='"
							+ Org + "'";

					pss3 = con.prepareStatement(query);
					rss3 = pss3.executeQuery();
					if (rss3.next()) {
	
	response.sendRedirect("Update.jsp");
		} else {
						sqlQuery = "Insert into xx_org_master(Org_Name) value('"
								+ Org + "')";
					}
					rss3.close();
					pss3.close();

				} else if (dbType.equalsIgnoreCase("piu")) {
					ResultSet rss3 = null;
					PreparedStatement pss3 = null;

					String query = "select * from xx_piu_master where PIU_Name='"
							+ piu + "'";

					pss3 = con.prepareStatement(query);
					rss3 = pss3.executeQuery();
					if (rss3.next()) {
	
	response.sendRedirect("Update.jsp");
		} else {
						sqlQuery = "Insert into xx_piu_master(PIU_Name) value('"
								+ piu + "')";
					}
					rss3.close();
					pss3.close();

				} else if (dbType.equalsIgnoreCase("Projects")) {
					ResultSet rss3 = null;
					PreparedStatement pss3 = null;

					String query = "select * from xx_projecttypes_master where Project_type='"
							+ projects + "'";

					pss3 = con.prepareStatement(query);
					rss3 = pss3.executeQuery();
					if (rss3.next()) {
	
	response.sendRedirect("Update.jsp");
	
		} else {
						sqlQuery = "Insert into xx_projecttypes_master(Project_type) value('"
								+ projects + "')";
					}
					rss3.close();
					pss3.close();

				} else if (dbType.equalsIgnoreCase("Documents")) {
					ResultSet rss3 = null;
					PreparedStatement pss3 = null;

					String query = "select * from xx_documentattributes_master where Document_Type='"
							+ documents + "'";

					pss3 = con.prepareStatement(query);
					rss3 = pss3.executeQuery();
					if (rss3.next()) {
	
	response.sendRedirect("Update.jsp");
		} else {
						sqlQuery = "Insert into xx_documentattributes_master(Document_Type, Location_Type) values('"
								+ documents + "', '"+loctype+"')";
					
					String query4 = "select a.Project_Id, a.Package_Id from  xx_project_docnos a group by a.Project_Id,a.Package_Id";
					pss4 = con.prepareStatement(query4);
					rss4 = pss4.executeQuery();
					String projid1=null, packid1=null;
					
					while (rss4.next()) {
						projid1 = rss4.getString("Project_Id");
						packid1 = rss4.getString("Package_Id");
						projal.add(projid1);
						packal.add(packid1);
					}
					var_doctype=1;
						//var_doctypename=documents;
						rss4.close();
						pss4.close();
		}
					rss3.close();
					pss3.close();
					
				} else if (dbType.equalsIgnoreCase("Departments")) {
					ResultSet rss3 = null;
					PreparedStatement pss3 = null;

					String query = "select * from xx_departments_master where Department_Name='"
							+ departments + "' and Type='" + dType + "'";

					pss3 = con.prepareStatement(query);
					rss3 = pss3.executeQuery();
					if (rss3.next()) {
	
	response.sendRedirect("Update.jsp");			
		} else {
						sqlQuery = "Insert into xx_departments_master(Department_Name,Type) values('"
								+ departments + "','" + dType + "')";
					}
					rss3.close();
					pss3.close();
					
				} else if (dbType.equalsIgnoreCase("Designations")) {
					
					sqlQuery="";
					String desgid = "m";
					String sqldeptid = "select department_id from xx_departments_master where Department_Name='"
							+ departments + "' and Type='" + dTypes + "'";
					
					Statement stmtdept = con.createStatement();
					ResultSet rsdeptid = stmtdept.executeQuery(sqldeptid);
					
					rsdeptid.next();
					String deptid = rsdeptid.getString("department_id");
					String sqldesgid = "select designation_id from xx_designation_mapping where Designation_Name='"
							+ designations + "' and Type='" + dTypes + "' and Department_id="+deptid;
					Statement stmtdesgid = con.createStatement();
					ResultSet rsdesgid = stmtdesgid.executeQuery(sqldesgid);
					

					if (rsdesgid.next()) {
						desgid = rsdesgid.getString("designation_id");

						
						sqlQuery="already";
					}
					int flg = 0;
					if(sqlQuery.equalsIgnoreCase("already")){
						flg = 2;
					}
					String newd=null;
					if (desgid == "m") {
						
						String sqlmaster = "Insert into xx_designation_master(Designation_Name,Type,level) values('"
								+ designations + "','" + dTypes + "','1')";
						Statement stmtmstr = con.createStatement();
						int upd = stmtmstr.executeUpdate(sqlmaster);
						flg = 1;
						
					
						
						
						
						
						String sqldesgid1 = "SELECT Designation_Id FROM xx_designation_master ORDER BY Designation_Id DESC LIMIT 1";
						Statement stmtdesgid1 = con.createStatement();
						ResultSet rsdesgid1 = stmtdesgid1.executeQuery(sqldesgid1);
						
						if (rsdesgid1.next()) {
							newd = rsdesgid1.getString("Designation_Id");

							
							
						}
						
						
					}
					
					if (flg == 0) {
						sqlQuery = "Insert into xx_designation_mapping(Designation_Name,department_id,designation_id,Type) values('"
								+ designations
								+ "','"
								+ deptid
								+ "','"
								+ newd + "','" + dTypes + "')";
						
					} else if(flg == 1) {
						
						String sqldesgid1 = "select designation_id from xx_designation_master where Designation_Name='"
								+ designations
								+ "' and Type='"
								+ dTypes
								+ "'";
						
						Statement stmtdesgid1 = con.createStatement();
						ResultSet rsdesgid1 = stmtdesgid1
								.executeQuery(sqldesgid1);
						rsdesgid1.next();
						String desgid1 = rsdesgid1.getString("designation_id");
						sqlQuery = "Insert into xx_designation_mapping(Designation_Name,department_id,designation_id,Type) values('"
								+ designations
								+ "','"
								+ deptid
								+ "','"
								+ newd + "',"+"'"+dTypes+ "')";
						
						
					}
					else{
						
						
					}

				}
				
				if (sqlQuery.equalsIgnoreCase("") ) {
					stmt = con.createStatement();
					queryUpdate = stmt.executeUpdate(sqlQuery);
				}else if(sqlQuery.equalsIgnoreCase("already")){
					queryUpdate=2;
					
					
				}else{
					stmt = con.createStatement();
					queryUpdate = stmt.executeUpdate(sqlQuery);
				
					if (var_doctype==1) {
						String sql3 = "Select Document_Type_Id FROM xx_documentattributes_master where Document_Type='"+documents+"'";
						Statement stmt3 = con.createStatement();
						ResultSet rs3 = stmt3.executeQuery(sql3);
						String doctypeid=null;
						if (rs3.next()) {
							doctypeid = rs3.getString("Document_Type_Id");
						}

						Iterator<String> projitr=projal.iterator();
						Iterator<String> packitr=packal.iterator();
						String projid2=null, packid2=null;
					while(projitr.hasNext()){
						projid2=projitr.next();
						packid2=packitr.next();
						
      out.write("\r\n");
      out.write("\t\t\t\t\t\t");
      //  sql:update
      org.apache.taglibs.standard.tag.rt.sql.UpdateTag _jspx_th_sql_005fupdate_005f0 = (org.apache.taglibs.standard.tag.rt.sql.UpdateTag) _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fdataSource.get(org.apache.taglibs.standard.tag.rt.sql.UpdateTag.class);
      boolean _jspx_th_sql_005fupdate_005f0_reused = false;
      try {
        _jspx_th_sql_005fupdate_005f0.setPageContext(_jspx_page_context);
        _jspx_th_sql_005fupdate_005f0.setParent(null);
        // /Admin/addToDb.jsp(690,6) name = dataSource type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_sql_005fupdate_005f0.setDataSource("jdbc/MySQLDB");
        int[] _jspx_push_body_count_sql_005fupdate_005f0 = new int[] { 0 };
        try {
          int _jspx_eval_sql_005fupdate_005f0 = _jspx_th_sql_005fupdate_005f0.doStartTag();
          if (_jspx_eval_sql_005fupdate_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
            if (_jspx_eval_sql_005fupdate_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
              _jspx_push_body_count_sql_005fupdate_005f0[0]++;
              out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_sql_005fupdate_005f0);
            }
            do {
              out.write("\r\n");
              out.write("\t\t\t\t\t\t  insert into xx_project_docnos (Project_Id, Package_Id, Document_Type_Id, Nos_Reqd) VALUES (");
              out.print(projid2);
              out.write(',');
              out.write(' ');
              out.print(packid2);
              out.write(',');
              out.print(doctypeid);
              out.write(",0);\r\n");
              out.write("\t\t\t\t\t\t");
              int evalDoAfterBody = _jspx_th_sql_005fupdate_005f0.doAfterBody();
              if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                break;
            } while (true);
            if (_jspx_eval_sql_005fupdate_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
              out = _jspx_page_context.popBody();
              _jspx_push_body_count_sql_005fupdate_005f0[0]--;
            }
          }
          if (_jspx_th_sql_005fupdate_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
            return;
          }
        } catch (java.lang.Throwable _jspx_exception) {
          while (_jspx_push_body_count_sql_005fupdate_005f0[0]-- > 0)
            out = _jspx_page_context.popBody();
          _jspx_th_sql_005fupdate_005f0.doCatch(_jspx_exception);
        } finally {
          _jspx_th_sql_005fupdate_005f0.doFinally();
        }
        _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fdataSource.reuse(_jspx_th_sql_005fupdate_005f0);
        _jspx_th_sql_005fupdate_005f0_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sql_005fupdate_005f0, _jsp_getInstanceManager(), _jspx_th_sql_005fupdate_005f0_reused);
      }
      out.write("\r\n");
      out.write("\t\t\t");
 
							}
				}
			}
			}
			if (queryUpdate == 1) {
		queryUpdate = 0;
	response.sendRedirect("Update.jsp");
			} else if(queryUpdate == 2) {
				
				
				response.sendRedirect("Update.jsp");
			}
			else{
				
			}
	
      out.write("\r\n");
      out.write("\t<form action=\"\" style=\"margin-left: 50px\" id=\"insertion\">\r\n");
      out.write("\t\t<table class=\"mainClass\" style=\"background-color: #F0FFFF\"\r\n");
      out.write("\t\t\talign=\"left\">\r\n");
      out.write("\t\t\t<br>\r\n");
      out.write("\t\t\t<br>\r\n");
      out.write("\t\t\t");

				if (dbType.equalsIgnoreCase("zone")) {
			
      out.write("\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\tZone Name :\r\n");
      out.write("\t\t\t\t<input type=\"text\" name=\"zoneName\" id=\"zoneName\"\r\n");
      out.write("\t\t\t\t\tstyle=\"width: 205px; margin-left: 50px\" onkeyup=\"loadXMLDoczone('zoneName','err')\" onCopy=return(false) onDrag=return(false) onDrop=return(false) onPaste=return(false) autocomplete=off>\r\n");
      out.write("\t\t\t</tr></br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n");
      out.write("\t\t\t<span id=\"err\"> </span>\r\n");
      out.write("\t\t\t");

				} else if (dbType.equalsIgnoreCase("division")) {
			
      out.write("\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\tZone:\r\n");
      out.write("\t\t\t\t<select name=\"D_Zone\" id=\"D_Zone\"\r\n");
      out.write("\t\t\t\t\tstyle=\"width: 205px; margin-left: 70px\">\r\n");
      out.write("\t\t\t\t\t<option value=\"none\">-- Select Zone --</option>\r\n");
      out.write("\t\t\t\t\t");
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\t\t\t\t</select>\r\n");
      out.write("\t\t\t\t<br>\r\n");
      out.write("\t\t\t\t<br>Division :\r\n");
      out.write("\t\t\t\t<input type=\"text\" name=\"divisionName\" id=\"divisionName\"\r\n");
      out.write("\t\t\t\t\tstyle=\"width: 205px; margin-left: 50px\" onkeyup=\"loadXMLDiv1('divisionName','err')\" onCopy=return(false) onDrag=return(false) onDrop=return(false) onPaste=return(false) autocomplete=off>\r\n");
      out.write("\t\t\t</tr><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n");
      out.write("\t\t\t<span id=\"err\"> </span>\r\n");
      out.write("\r\n");
      out.write("\t\t\t");

				} else if (dbType.equalsIgnoreCase("Others")) {
			
      out.write("\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\tOrganization (other than Railways & RVNL) :\r\n");
      out.write("\t\t\t\t<input type=\"text\" name=\"Org\" id=\"Org\"\r\n");
      out.write("\t\t\t\t\tstyle=\"width: 205px; margin-left: 50px\" onkeyup=\"loadXMLOrg('Org','err')\" onCopy=return(false) onDrag=return(false) onDrop=return(false) onPaste=return(false) autocomplete=off>\r\n");
      out.write("\t\t\t</tr></br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<span id=\"err\"> </span>\r\n");
      out.write("\t\t\t");

				} else if (dbType.equalsIgnoreCase("piu")) {
					
      out.write("\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\tPIU Of RVNL :\r\n");
      out.write("\t\t\t\t\t\t<input type=\"text\" name=\"piu\" id=\"piu\"\r\n");
      out.write("\t\t\t\t\t\t\tstyle=\"width: 205px; margin-left: 50px\" onkeyup=\"loadXMLPiu('piu','err')\" onCopy=return(false) onDrag=return(false) onDrop=return(false) onPaste=return(false) autocomplete=off>\r\n");
      out.write("\t\t\t\t\t</tr></br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<span id=\"err\"> </span>\r\n");
      out.write("\t\t\t\t\t");


				} else if (dbType.equalsIgnoreCase("Documents")) {
			
      out.write("\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\tDocument Type :\r\n");
      out.write("\t\t\t\t<input type=\"text\" name=\"Documents\" id=\"Documents\"\r\n");
      out.write("\t\t\t\t\tstyle=\"width: 205px; margin-left: 50px\" onkeyup=\"loadXMLDoc1('Documents','err')\" onCopy=return(false) onDrag=return(false) onDrop=return(false) onPaste=return(false) autocomplete=off>\r\n");
      out.write("\t\t\t\t\t</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\t<span id=\"err\"> </span>\r\n");
      out.write("\t\t<br><br> Location Type:\t<select name=\"loctype1\" id=\"loctype1\" style=\"width: 205px; margin-left: 65px;\">\r\n");
      out.write("\t\t\t<option selected=\"selected\" value=\"\">-- Select Location Type --</option>\r\n");
      out.write("\t\t\t<option value=\"KM\">KM</option>\r\n");
      out.write("\t\t\t<option value=\"Section\">Section</option>\r\n");
      out.write("\t\t\t<option value=\"Station\">Station</option>\r\n");
      out.write("\t\t\t</select><br>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t");

				} else if (dbType.equalsIgnoreCase("Projects")) {
			
      out.write("\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\tProject Type :\r\n");
      out.write("\t\t\t\t<input type=\"text\" name=\"Projects\" id=\"Projects\"\r\n");
      out.write("\t\t\t\t\tstyle=\"width: 205px; margin-left: 50px\" onkeyup=\"loadXMLProj('Projects','err')\" onCopy=return(false) onDrag=return(false) onDrop=return(false) onPaste=return(false) autocomplete=off>\r\n");
      out.write("\t\t\t</tr></br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<span id=\"err\"> </span>\r\n");
      out.write("\r\n");
      out.write("\t\t\t");

				} else if (dbType.equalsIgnoreCase("Departments")) {
			
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\tType :\r\n");
      out.write("\t\t\t\t<select name=\"dType\" id=\"dType\"\r\n");
      out.write("\t\t\t\t\tstyle=\"width: 205px; margin-left: 133px\">\r\n");
      out.write("\t\t\t\t\t<option selected=\"selected\">-- Select Type --</option>\r\n");
      out.write("\t\t\t\t\t<option value=\"MOR\">MOR</option>\r\n");
      out.write("\t\t\t\t\t<option value=\"RVNL\">RVNL</option>\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t</select>\r\n");
      out.write("\t\t\t\t<br />\r\n");
      out.write("\t\t\t\t<br> Department Name :\r\n");
      out.write("\t\t\t\t<input type=\"text\" name=\"department\" id=\"department\"\r\n");
      out.write("\t\t\t\t\tstyle=\"width: 205px; margin-left: 50px\" onkeyup=\"loadXMLDept('department','err','dType')\" onCopy=return(false) onDrag=return(false) onDrop=return(false) onPaste=return(false) autocomplete=off>\r\n");
      out.write("\t\t\t\t</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<span id=\"err\"> </span>\r\n");
      out.write("\r\n");
      out.write("\t\t\t");

				} else if (dbType.equalsIgnoreCase("Designations")) {
			
      out.write("\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\tType :\r\n");
      out.write("\t\t\t\t<select name=\"dTypes\" id=\"dTypes\"\r\n");
      out.write("\t\t\t\t\tstyle=\"width: 205px; margin-left: 135px\"\r\n");
      out.write("\t\t\t\t\tonchange='getdept(this.value)'>\r\n");
      out.write("\t\t\t\t\t<option selected=\"selected\" value=\"\">-- Select Type --</option>\r\n");
      out.write("\t\t\t\t\t<option value=\"MOR\">MOR</option>\r\n");
      out.write("\t\t\t\t\t<option value=\"RVNL\">RVNL</option>\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t</select>\r\n");
      out.write("\t\t\t\t<br />\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\r\n");
      out.write("\t\t\t<div id='Desgdiv' style='display: inline;'></div>\r\n");
      out.write("\t\t\t</br> Designation Name :\r\n");
      out.write("\t\t\t<input type=\"text\" name=\"designations\" id=\"designations\"\r\n");
      out.write("\t\t\t\tstyle=\"width: 205px; margin-left: 50px\" onkeyup=\"loadXMLDesig11('designations','err')\" onCopy=return(false) onDrag=return(false) onDrop=return(false) onPaste=return(false) autocomplete=off>\r\n");
      out.write("\t\t\t</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<span id=\"err\"> </span>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\r\n");
      out.write("\t\t\t");

				} else {

					}
				} catch (Exception e) {
					e.printStackTrace();
				} finally {
					try {
						if (con != null)
							con.close();
					} catch (Exception e) {
					}
					try {
						if (stmt != null)
							stmt.close();
					} catch (Exception e) {
					}
					try {
						if (d_stmt != null)
							d_stmt.close();
					} catch (Exception e) {
					}
					try {
						if (rs != null)
							rs.close();
					} catch (Exception e) {
					}
					try {
						if (d_rs != null)
							d_rs.close();
					} catch (Exception e) {
					}
				}
			
      out.write("\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<input type=\"hidden\" name=\"type\" value=");
      out.print(dbType);
      out.write(">\r\n");
      out.write("\t\t\t<input type=\"hidden\" name=\"condition\" value=\"go\">\r\n");
      out.write("\t\t\t<br>\r\n");
      out.write("\t\t\t<br>\r\n");
      out.write("\r\n");
      out.write("\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n");
      out.write("\t\t\t<input class=\"btn btn-primary\" id=\"btnclick\" onclick=\"validateInsertion();\" target=\"_blank\"\r\n");
      out.write("\t\t\t\tvalue=\"Submit\" style=\"width: 5em;\">\r\n");
      out.write("\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n");
      out.write("\t\t\t<input class=\"btn btn-primary\" type=\"reset\" value=\"Cancel\"\r\n");
      out.write("\t\t\t\tonclick=\"window.location.href='Update.jsp'\">        \r\n");
      out.write("\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t\t<br> <br>\r\n");
      out.write("\t</form>\r\n");
      out.write("\t\r\n");
      out.write("\t");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"http://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<style>\r\n");
      out.write("@import url('http://fonts.googleapis.com/css?family=Open+Sans:400,700');\r\n");
      out.write("\r\n");
      out.write("footer{\r\n");
      out.write("\tposition: fixed;\r\n");
      out.write("\tmargin-top:150px;\r\n");
      out.write("\tbottom: 0;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- \r\n");
      out.write("<footer>\r\n");
      out.write("<div class=\"city\">\r\n");
      out.write("  <ul class=\" nav navbar-nav\">\r\n");
      out.write("  \r\n");
      out.write("    <li class=\"footerli\">Rail Vikas Nigam Limited.</li>\r\n");
      out.write("    </ul>\r\n");
      out.write("    <ul   class=\"nav navabar-nav\" style=\"float:right;\">\r\n");
      out.write("   <li class=\"footerli\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Design & Developed By<a href=\"http://www.awcsoftware.net\" style=\"text-decoration:none;\">AWC SOFTWARE PVT LTD</a></li>\r\n");
      out.write("    \r\n");
      out.write("  </ul>\r\n");
      out.write(" </div>\r\n");
      out.write("\r\n");
      out.write("</footer> -->\r\n");
      out.write("\r\n");
      out.write("<footer class=\"footer-basic-centered\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t<p class=\"footer-company-motto\" style=\"float:left;\">Rail Vikas Nigam Limited</p>\r\n");
      out.write("\t\t\t<p class=\"footer-company-motto\" style=\"float:center; font-family:serif; font-size:14px; font-style:italic; margin-top:5px;\">Ver:2.30.pks</p>\r\n");
      out.write("\t\t\t<p class=\"footer-company-name\" style=\"float:right; margin-top:-20px;\"> Design & Developed By<a href=\"http://www.awcsoftware.net\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AWC SOFTWARE PVT LTD</a></p>\r\n");
      out.write("\r\n");
      out.write("\t\t</footer>\r\n");
      out.write("</body>");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("<div id=\"dialogid\" style=\"display: none\"\r\n");
      out.write("\t\talign=\"center\">\r\n");
      out.write("\t\t<br> Please Fill All Data !<br>\r\n");
      out.write("\t\t<br>\r\n");
      out.write("\t\t<button id=\"cancle\" class=\"btn btn-primary\"\r\n");
      out.write("\t\t\tonclick=\"$('#dialogid').dialog('close');\">Ok</button>\r\n");
      out.write("\t</div>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_sql_005fquery_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  sql:query
    org.apache.taglibs.standard.tag.rt.sql.QueryTag _jspx_th_sql_005fquery_005f0 = (org.apache.taglibs.standard.tag.rt.sql.QueryTag) _005fjspx_005ftagPool_005fsql_005fquery_0026_005fvar_005fdataSource.get(org.apache.taglibs.standard.tag.rt.sql.QueryTag.class);
    boolean _jspx_th_sql_005fquery_005f0_reused = false;
    try {
      _jspx_th_sql_005fquery_005f0.setPageContext(_jspx_page_context);
      _jspx_th_sql_005fquery_005f0.setParent(null);
      // /Admin/addToDb.jsp(360,1) name = var type = java.lang.String reqTime = false required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_sql_005fquery_005f0.setVar("rs");
      // /Admin/addToDb.jsp(360,1) name = dataSource type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_sql_005fquery_005f0.setDataSource("jdbc/MySQLDB");
      int[] _jspx_push_body_count_sql_005fquery_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_sql_005fquery_005f0 = _jspx_th_sql_005fquery_005f0.doStartTag();
        if (_jspx_eval_sql_005fquery_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          if (_jspx_eval_sql_005fquery_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
            _jspx_push_body_count_sql_005fquery_005f0[0]++;
            out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_sql_005fquery_005f0);
          }
          do {
            out.write("\r\n");
            out.write("               SELECT * FROM xx_zones_master where Zone_Id !='18' order by Zone_Name\r\n");
            out.write("             ");
            int evalDoAfterBody = _jspx_th_sql_005fquery_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
          if (_jspx_eval_sql_005fquery_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
            out = _jspx_page_context.popBody();
            _jspx_push_body_count_sql_005fquery_005f0[0]--;
          }
        }
        if (_jspx_th_sql_005fquery_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_sql_005fquery_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_sql_005fquery_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_sql_005fquery_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fsql_005fquery_0026_005fvar_005fdataSource.reuse(_jspx_th_sql_005fquery_005f0);
      _jspx_th_sql_005fquery_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sql_005fquery_005f0, _jsp_getInstanceManager(), _jspx_th_sql_005fquery_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f0_reused = false;
    try {
      _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f0.setParent(null);
      // /Admin/addToDb.jsp(732,5) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVar("row");
      // /Admin/addToDb.jsp(732,5) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/Admin/addToDb.jsp(732,5) '${rs.rows}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${rs.rows}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
        if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("\t\t\t\t\t\t<option value=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${row.zone_name}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
            out.write('"');
            out.write('>');
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${row.zone_name}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
            out.write("</option>\r\n");
            out.write("\t\t\t\t\t");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
      _jspx_th_c_005fforEach_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
    }
    return false;
  }
}
