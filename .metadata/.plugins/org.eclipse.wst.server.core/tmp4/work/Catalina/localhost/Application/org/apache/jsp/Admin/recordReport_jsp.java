/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.86
 * Generated at: 2018-05-24 05:06:23 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.Admin;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import javax.naming.*;
import java.sql.*;
import javax.sql.*;
import java.text.SimpleDateFormat;
import java.util.*;
import javax.naming.*;
import java.sql.*;
import javax.sql.*;
import java.text.SimpleDateFormat;
import java.text.DateFormat;
import java.io.FileOutputStream;
import java.io.IOException;
import javax.servlet.*;
import javax.servlet.http.*;
import javax.naming.*;
import java.sql.*;
import javax.sql.*;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.Element;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.PageSize;
import com.itextpdf.text.pdf.BaseFont;
import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Font;
import java.awt.Color;
import com.itextpdf.text.pdf.PdfWriter;
import com.itextpdf.text.Document;
import com.itextpdf.text.Chunk;
import org.joda.time.DateTime;
import org.joda.time.Days;
import org.joda.time.Hours;
import org.joda.time.Minutes;
import org.joda.time.Seconds;

public final class recordReport_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/sessionCheck1.jspf", Long.valueOf(1524567358000L));
    _jspx_dependants.put("/Admin/sessionCheck.jsp", Long.valueOf(1524567356000L));
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 1120256, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

 
int timeout = session.getMaxInactiveInterval();
response.setHeader("Refresh", timeout + "; URL = admn_login.jsp");

      out.write("\r\n");
      out.write("    \r\n");
      out.write("        \r\n");
      out.write("     \r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write(" ");
 

int timeout1 = session.getMaxInactiveInterval();
response.setHeader("Refresh", timeout1 + "; URL = admn_login.jsp");

if(((String)session.getAttribute("user_name"))==null)
       {
           
	response.sendRedirect("admn_login.jsp");
           
       }
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<title>PDAMS - Document Log</title>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\r\n");
      out.write("<link href=\"resources/bootstrap/css/bootstrap.min.css\" rel=\"stylesheet\"/>\r\n");
      out.write("<link href=\"resources/bootstrap/css/bootstrap.css\" rel=\"stylesheet\"/>\r\n");
      out.write("<!-- <title>Report</title> -->\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("function closeMe()\r\n");
      out.write("{\r\n");
      out.write("var win = window.open(\"\",\"_self\"); /* url = ââ or âabout:blankâ; target=â_selfâ */\r\n");
      out.write("win.close();\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("function mywinClose() {\r\n");
      out.write("\tvar sessionTimeout1 = \"");
      out.print( session.getMaxInactiveInterval() );
      out.write("\";\r\n");
      out.write("\tsetTimeout(function(){var parent1=window.open(\"\",\"report_master\"); parent1.close(); },(sessionTimeout1-10)*1000);\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body onload=\"mywinClose();\">\r\n");
      out.write("<div style=\"text-align: center;font-size: 14px;\"><b>RVNL DOCUMENT PORTAL </b></div></br>\r\n");
      out.write("<div style=\"text-align: center; text-decoration: underline; font-size: 18px;\"><b>Document Movement Log </b></div></br>\r\n");
      out.write("\r\n");
      out.write("\t\t\r\n");

		String exportToExcel = request.getParameter("exportToExcel");
		if (exportToExcel != null
				&& exportToExcel.toString().equalsIgnoreCase("YES")) {
			response.setContentType("application/vnd.ms-excel");
			response.setHeader("Content-Disposition", "inline; filename="
					+ "excel.xls");

		}
	
      out.write("\r\n");
      out.write("\r\n");


String doctype = request.getParameter("Document_Type");
String docid = request.getParameter("doc_id");
String back= (String)session.getAttribute( "BackUrl" ) ;
String backurl= (String)session.getAttribute( "backurl" ) ;
String backurl1= (String)session.getAttribute( "backurl" ) ;

String doctype1=null;
Connection conn = null;
Statement stmt = null;
ResultSet rs = null;
java.sql.Date subdate=null;
java.sql.Date currentdate=null;
//String docnameq="select "


//String query = "select a.PIU_of_RVNL,a.Project,a.Department,b.Document_Type,b.Document_Status,b.Document_Name,b.Document_Number,DATEDIFF(c.CurrentDate,b.Date_of_Submission) as Age,b.Date_of_Submission,c.Assigned_To,c.Level from xx_projectattributes_master as a,xx_document_mapping as b,xx_approval_workflow as c where a.Project_ID=b.Project_ID and a.PIU_of_RVNL='"+piu+"' and b.Document_Status='"+status+"'";
	//out.println(query);
	//String query = "select a.PIU_of_RVNL,a.Project,a.Designation,b.package_name,c.Document_Type,c.Document_Name,c.Date_of_Submission,c.Document_Number,d.ActionPerformed,d.ActionPerformedBy,d.CurrentDate,d.ActionedOn,IFNULL(DATEDIFF(d.ActionedOn,d.CurrentDate),0) as Aging,d.Information,DATEDIFF(NOW(),d.CurrentDate) AS DaysSince from xx_projectattributes_master as a,xx_packages_project as b,xx_document_mapping as c,xx_record_actions as d where c.Document_Map_ID = d.Document_id and b.package_id = c.Package_ID and a.Project_ID = c.Project_ID and Document_Type='"+doctype+"' and c.Document_Map_ID='"+docid+"'";
String query="select a.PIU_of_RVNL,a.Project,a.Designation,b.package_name,c.Document_Type,c.Document_Name,c.Date_of_Submission,c.Document_Number,d.ActionPerformed,d.ActionPerformedBy,d.CurrentDate,d.ActionedOn,DATEDIFF(ifnull(d.ActionedOn,now()),ifnull(d.CurrentDate,c.date_of_submission)) as Aging,d.Information,IFNULL(DATEDIFF(ifnull(d.ActionedOn,now()),c.date_of_submission),0) AS DaysSince, loc1.Major_Section, c.From_Km, c.To_Km,  loc1.Station_Name, loc1.Station_Km, d.AssignedDays from xx_projectattributes_master as a,xx_packages_project as b,xx_document_mapping as c,xx_record_actions as d, (select a.Document_Map_ID, b.Major_Section, c.Station_Km, c.Station_Name from xx_document_mapping a left join xx_project_km b on a.Majsec_Id = b.Majsec_Id left join xx_project_station c on a.Stn_Id = c.Stn_Id ) loc1 where c.Document_Map_ID = d.Document_id and b.package_id = c.Package_ID and a.Project_ID = c.Project_ID  and c.Document_Map_ID = loc1.Document_Map_ID  and Document_Type='"+doctype+"' and c.Document_Map_ID='"+docid+"'";
//"select a.PIU_of_RVNL,a.Project,a.Designation,b.package_name,c.Document_Type,c.Document_Name,c.Date_of_Submission,c.Document_Number,d.ActionPerformed,d.ActionPerformedBy,d.CurrentDate,d.ActionedOn,DATEDIFF(ifnull(d.ActionedOn,now()),ifnull(d.CurrentDate,c.date_of_submission)) as Aging,d.Information,IFNULL(DATEDIFF(ifnull(d.ActionedOn,now()),c.date_of_submission),0) AS DaysSince from xx_projectattributes_master as a,xx_packages_project as b,xx_document_mapping as c,xx_record_actions as d where c.Document_Map_ID = d.Document_id and b.package_id = c.Package_ID and a.Project_ID = c.Project_ID and Document_Type='"+doctype+"' and c.Document_Map_ID='"+docid+"'";

Context initCtx = new InitialContext();
	Context envCtx = (Context) initCtx.lookup("java:comp/env");
	DataSource ds = (DataSource) envCtx.lookup("jdbc/MySQLDB");
	 

	conn = ds.getConnection();
stmt = conn.createStatement();
Statement stmthed = conn.createStatement();
rs = stmt.executeQuery(query);
String SD=null;
ResultSet rshed=stmthed.executeQuery(query);
if(rshed.next()){
	String piu = rshed.getString(1);
	String pro = rshed.getString(2);
	String proc = rshed.getString(3);
	String packn = rshed.getString(4);
	String doctypes = rshed.getString(5);
	String docname = rshed.getString(6);
	subdate = rshed.getDate(7);
	SD =new SimpleDateFormat("dd/MM/yyyy").format(subdate);
	
	String docno = rshed.getString(8);
	String majsec = rshed.getString(16);
	String frmkm = rshed.getString(17);
	String tokm = rshed.getString(18);
	String stn = rshed.getString(19);
	String stnkm = rshed.getString(20);
	String assigndays=rshed.getString(21);
String proc1=proc+"/RVNL/"+piu;

      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\r\n");
if(doctype!=""){
      out.write("<br>\r\n");
      out.write("<table border=0 class=\"table table-hover table-bordered\" style=\"background-color: #FFFFF;text-align:center\">\r\n");
      out.write("<tr class=\"success\"><th width=\"200px\" ><font size=3px>\r\n");
      out.write("Document Id : ");
      out.print(docid );
      out.write("&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Document Name :<b> ");
      out.print(docname );
      out.write("</b></font></th></tr></table>\r\n");
}


      out.write("\r\n");
      out.write("\r\n");
      out.write("<table class=\"table table-hover table-bordered\" style=\"background-color: #fff\">\r\n");
      out.write("<tr width=100% align=\"center\">\r\n");
      out.write("\r\n");



      out.write("\r\n");
      out.write("</tr>\r\n");
      out.write("<tr  class=\"\" style=\"background-color:#fff;\">\r\n");
      out.write("\r\n");
      out.write("<td width=\"120px\"><b>PIU Name :&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n");
      out.write("&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</b>");
      out.print(piu );
      out.write("</td>\r\n");
      out.write("<td width=\"200px\"><b>Project :</b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n");
      out.write("&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;");
      out.print(pro );
      out.write("</td></tr>\r\n");
      out.write("<tr class=\"\" style=\"background-color:#fff;\"><td width=\"250px\"><b>Project Coordinator :</b>&nbsp;&nbsp;&nbsp;&nbsp;");
      out.print(proc1 );
      out.write("</td>\r\n");
      out.write("<td width=\"140px\"><b>Package Name :</b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n");
      out.write("&nbsp;&nbsp;");
      out.print(packn );
      out.write("</td></tr>\r\n");
      out.write("<tr  class=\"\" style=\"background-color:#fff;\"><td width=\"100px\"><b>Document Type :</b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;");
      out.print(doctype );
      out.write("</td>\r\n");
      out.write("<td width=\"140px\"><b>Document Number :</b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;");
      out.print(docno );
      out.write("</td>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr  class=\"\" style=\"background-color:#fff;\"><td width=\"152px\"><b>Major Section :</b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;");
      out.print(majsec );
      out.write("</td>\r\n");
      out.write("<td width=\"200px\">\r\n");
 
if (frmkm != null || tokm != null) {

      out.write("\r\n");
      out.write("<b>From KM :</b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;");
      out.print(frmkm );
      out.write(" &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b>To KM :</b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;");
      out.print(tokm );
      out.write('\r');
      out.write('\n');
 
}
if (stn != null) {

      out.write("\r\n");
      out.write("<b>Station :</b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;");
      out.print(stn );
      out.write(" &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(<b>KM :</b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;");
      out.print(stnkm );
      out.write(')');
      out.write('\r');
      out.write('\n');

}

      out.write("\r\n");
      out.write("</td></tr>\r\n");
      out.write("<tr  class=\"\" style=\"background-color:#fff;\"><td width=\"170px\"><b>Submitted Date :</b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;");
      out.print(SD );
      out.write("</td>\r\n");
      out.write("<td><b>Assignees ::</b>&nbsp;&nbsp;&nbsp;&nbsp;\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!--  table align=\"center\">\r\n");
      out.write("\r\n");
      out.write("<tr style=\"background-color:#fff;text-align:center;\"><div style=\"text-align:center;\"></div></tr><br-->\r\n");
      out.write("\r\n");



String sqlq ="select HierarchyType from xx_document_mapping where Document_Map_ID="+docid;
Statement stmt1 = conn.createStatement();
ResultSet rs1 = stmt1.executeQuery(sqlq);
String hierarchytyp =null;
if(rs1.next()){
	hierarchytyp=rs1.getString("HierarchyType");
}
if(hierarchytyp.equalsIgnoreCase("Zone")){
	String hierarchyid=null,zone=null,dept=null,desig=null,userid=null;
	String sqlq1 ="select Zone_HierarchyId  from xx_document_mapping where Document_Map_ID="+docid;
	Statement stmt2 = conn.createStatement();
	ResultSet rs2 = stmt2.executeQuery(sqlq1);
	if(rs2.next()){
		hierarchyid=rs2.getString("Zone_HierarchyId");
	}
	
	String sqlq2 ="select * from xx_doc_zones_hierarchy where Hierarchy_id="+hierarchyid;
	Statement stmt3 = conn.createStatement();
	ResultSet rs3 = stmt3.executeQuery(sqlq2);
	
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\t&nbsp;&nbsp;&nbsp;&nbsp;<b>Zone</b> -\r\n");
      out.write("\t");

	String idList3=null;
	java.util.List<String> ids3 = new java.util.ArrayList<String>();
	String csv3=null;
	while(rs3.next()){
		userid=rs3.getString("userid");
		//zone=rs3.getString("Zone");
		//dept=rs3.getString("Department");
		//desig=rs3.getString("Designation");
		
		ids3.add(userid);
		 idList3 = ids3.toString();
		
	
	}
	
csv3 = idList3.substring(1, idList3.length() - 1).replace(", ", ", "); 
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t ");
      out.print(csv3 );
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
}

if(hierarchytyp.equalsIgnoreCase("Division")){
	String hierarchyid=null,dept=null,desig=null,Division=null,userid=null ;
	String sqlq1 ="select Division_HierarchyId  from xx_document_mapping where Document_Map_ID="+docid;
	Statement stmt2 = conn.createStatement();
	ResultSet rs2 = stmt2.executeQuery(sqlq1);
	if(rs2.next()){
		hierarchyid=rs2.getString("Division_HierarchyId");
	}
	String sqlq2 ="select * from xx_doc_divisions_hierarchy where Hierarchy_id="+hierarchyid;
	Statement stmt3 = conn.createStatement();
	ResultSet rs3 = stmt3.executeQuery(sqlq2);
	
	
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\t&nbsp;&nbsp;&nbsp;&nbsp;<b>Division</b> - \r\n");
      out.write("\t");

	
	
	String idList2=null;
	java.util.List<String> ids2 = new java.util.ArrayList<String>();
	String csv2=null;
	
	
	while(rs3.next()){
		userid=rs3.getString("userid");
		//Division=rs3.getString("Division");
		//dept=rs3.getString("Department");
		//desig=rs3.getString("Designation");
		ids2.add(userid);
		 idList2 = ids2.toString();
		
	
	}
	
csv2 = idList2.substring(1, idList2.length() - 1).replace(",", ", "); 
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t ");
      out.print(csv2 );
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t");


}

      out.write("\r\n");
      out.write("\r\n");

if(hierarchytyp.equalsIgnoreCase("Both")){
	String divhierarchyid=null,zonhierarchyid=null,dept=null,desig=null,Division=null,userid=null ;
	/*
	String sqlq1 ="select Division_HierarchyId,Zone_HierarchyId  from xx_document_mapping where Document_Map_ID="+docid;
	Statement stmt2 = conn.createStatement();
	ResultSet rs2 = stmt2.executeQuery(sqlq1);
	if(rs2.next()){
		divhierarchyid=rs2.getString("Division_HierarchyId");
		zonhierarchyid=rs2.getString("Zone_HierarchyId");
	}
	*/
	String sqlq2 ="select * from xx_doc_divisions_hierarchy where Document_id="+docid;
	Statement stmt3 = conn.createStatement();
	ResultSet rs3 = stmt3.executeQuery(sqlq2);
	

	String sqlq21 ="select * from xx_doc_zones_hierarchy where Document_id="+docid;
	Statement stmt31 = conn.createStatement();
	ResultSet rs31 = stmt31.executeQuery(sqlq21);
	
      out.write("\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t&nbsp;&nbsp;&nbsp;&nbsp;<b>Division</b> -\r\n");
      out.write("\t\r\n");
      out.write("\t");

	
	String idList1=null;
	java.util.List<String> ids1 = new java.util.ArrayList<String>();
	String csv1=null;
	int fl=0;
	while(rs3.next()){
		userid=rs3.getString("userid");
		//Division=rs3.getString("Division");
		//dept=rs3.getString("Department");
		//desig=rs3.getString("Designation");
		ids1.add(userid);
		 idList1 = ids1.toString();
		fl=1;
	
	}
	if(fl==1){
 csv1 = idList1.substring(1, idList1.length() - 1).replace(", ", ", "); 
}else{
csv1="";
}
	
      out.write("\r\n");
      out.write("\t\t ");
      out.print(csv1 );
      out.write("\t\r\n");
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t");


      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\t&nbsp;&nbsp;&nbsp;&nbsp;<b>Zone</b> - \r\n");
      out.write("\t");

	String idList=null;
	java.util.List<String> ids = new java.util.ArrayList<String>();
	String csv=null;
	int flz=0;
	while(rs31.next()){
		userid=rs31.getString("userid");
		ids.add(userid);
		 idList = ids.toString();
		 flz=1;
		 
	}
	if(flz==1){	
	
 csv = idList.substring(1, idList.length() - 1).replace(", ", ", "); 
}else {
	csv="";
	
}
	
      out.write("\r\n");
      out.write("\t\t ");
      out.print(csv );
      out.write("\t\r\n");
      out.write("\t\t ");

}




      out.write("\r\n");
      out.write("</td>\r\n");
      out.write("\r\n");
      out.write("</tr>\r\n");
      out.write("\r\n");
      out.write("</table>\r\n");
      out.write("\r\n");
      out.write("<!-- /table-->\r\n");
      out.write("\r\n");
      out.write("\r\n");

}

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<table width=\"700px\"class=\"table table-hover table-bordered\" style=\"background-color: #F0FFFF\">\r\n");
      out.write("\r\n");
      out.write("<tr width=\"700px\" style=\"text-align:center;\">\r\n");
      out.write("\r\n");
      out.write("<td width=\"140px\"><b>Action Performed By</b></td>\r\n");
      out.write("<td width=\"120px\"><b>Action Performed</b></td>\r\n");
      out.write("<td width=\"100px\"><b>Received Date</b></td>\r\n");
      out.write("<td width=\"100px\"><b>Action Date</b></td>\r\n");
      out.write("<td width=\"180px\"><b>Remarks</b></td>\r\n");
      out.write("<td width=\"100px\"><center><b>Target for Approval (days)</b></center></td>\r\n");
      out.write("<td width=\"120px\"><b>Days Taken</b></td>\r\n");
      out.write("<td width=\"100px\"><b>Days Since</b></td>\r\n");
      out.write("</tr>\r\n");

int diffDay=0;
String diffdaystr=null;
while(rs.next()){
	
	

String prev = null;
String next = null;
java.sql.Date ActionedOn=null;
int diff = 0;
String AO1=null;

	String action = rs.getString(9);
	String actionperformed = rs.getString(10);
    currentdate = rs.getDate(11);
    ActionedOn=rs.getDate(12);
    String info = rs.getString(14);
String aging = rs.getString(13);
String DaysSince=rs.getString(15);
String assigndays1 = rs.getString(21);
/*
	next = aging;
	
	if(prev==null){
		
	diff = Integer.parseInt(next);
	}
	else{
		diff = Integer.parseInt(next)-Integer.parseInt(prev);

	}
	prev = next;
*/
	 String SD1=null;
	 
	 if(currentdate==null){
		 SD1="";
	//	 aging="0";
	//	 diffdaystr="0";
		}else{
			SD1 =new SimpleDateFormat("dd/MM/yyyy").format(currentdate);
		
		
		}
	 
	if(ActionedOn==null){
		AO1="";
		
	}else{
	 AO1 =new SimpleDateFormat("dd/MM/yyyy").format(ActionedOn);
	 
	 
	}

	 if(info==null || info.equalsIgnoreCase("null")){
		 
	 
 
      out.write("\r\n");
      out.write("\r\n");
      out.write("<tr>\r\n");
      out.write("\r\n");
      out.write("<td>");
      out.print(actionperformed );
      out.write("</td>\r\n");
      out.write("<td>");
      out.print(action );
      out.write(" </td>\r\n");
      out.write("<td style=\"text-align:center;\">");
      out.print(SD1 );
      out.write("</td>\r\n");
      out.write("<td style=\"text-align:center;\">");
      out.print(AO1 );
      out.write("</td>\r\n");
      out.write("<td>---</td>\r\n");
if(assigndays1!=null){
 
      out.write("\r\n");
      out.write("<td style=\"text-align:center;\">");
      out.print(assigndays1 );
      out.write("</td>\r\n");
} else { 
      out.write("\r\n");
      out.write("<td style=\"text-align:center;\">---</td>\r\n");
} 
      out.write("\r\n");
      out.write("<td style=\"text-align:center;\">");
      out.print(aging );
      out.write("</td>\r\n");
      out.write("<td style=\"text-align:center;\">");
      out.print(DaysSince );
      out.write("</td>\r\n");
      out.write("\r\n");
      out.write("</tr>\r\n");

	 }else{
		 
		 
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t <tr>\r\n");
      out.write("\t\t \r\n");
      out.write("\t\t <td>");
      out.print(actionperformed );
      out.write("</td>\r\n");
      out.write("\t\t <td>");
      out.print(action );
      out.write(" </td>\r\n");
      out.write("\t\t <td style=\"text-align:center;\">");
      out.print(SD1 );
      out.write("</td>\r\n");
      out.write("\t\t <td style=\"text-align:center;\">");
      out.print(AO1 );
      out.write("</td>\r\n");
      out.write("\t\t <td>");
      out.print(info );
      out.write(" </td>\r\n");
      out.write("\t\t");
if(assigndays1!=null){
 
      out.write("\r\n");
      out.write("<td style=\"text-align:center;\">");
      out.print(assigndays1 );
      out.write("</td>\r\n");
} else { 
      out.write("\r\n");
      out.write("<td style=\"text-align:center;\">---</td>\r\n");
} 
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\t\t <td style=\"text-align:center;\">");
      out.print(aging );
      out.write("</td>\r\n");
      out.write("\t\t <td style=\"text-align:center;\">");
      out.print(DaysSince );
      out.write("</td>\r\n");
      out.write("\r\n");
      out.write("\t\t </tr>\r\n");
      out.write("\t\t ");

	 }
	 
	 
	 }
session.removeAttribute("backurl"); 
session.removeAttribute("back"); 
    try { conn.close(); } catch (Exception e) { /* ignored */ }

      out.write("\r\n");
      out.write("</table>\r\n");
      out.write("<br>\r\n");

		if (exportToExcel == null) {
	
      out.write("\r\n");
      out.write("<!-- \t<a href=\"recordReport.jsp?exportToExcel=YES\">Download Report in Excel</a><br><br>-->\r\n");
      out.write("\t\r\n");
      out.write("\t");

		}
	
      out.write("\r\n");
      out.write("\t<br>\r\n");
      out.write("\r\n");
      out.write("     <input type=\"button\" href=\"#\" onclick=\"javascript:window.print();\" class=\"btn btn-primary\" value=\"Print this page\" style=\"float:right;\">\r\n");
      out.write(" ");
   if(backurl1==null){ 
      out.write("\r\n");
      out.write(" <input type=\"button\" class=\"btn btn-primary\" value=\"Back\" style=\"width:8%;\" onclick=\"closeMe();\"/>\r\n");
      out.write(" ");

 
 }
 
 else if(backurl==null){
      out.write("\r\n");
      out.write("\t<input type=\"button\" class=\"btn btn-primary\" value=\"Back\" style=\"width:8%;\" onclick=\"location.href='");
      out.print(back);
      out.write("'\"/>\r\n");
}else{
      out.write(" \r\n");
      out.write("\r\n");
      out.write("\t<input type=\"button\" class=\"btn btn-primary\" value=\"Back\" style=\"width:8%;\" onclick=\"location.href='");
      out.print(back);
      out.write("'\"/>\r\n");
}
      out.write("\r\n");
      out.write("     \r\n");
      out.write("     \r\n");
      out.write("     \r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
