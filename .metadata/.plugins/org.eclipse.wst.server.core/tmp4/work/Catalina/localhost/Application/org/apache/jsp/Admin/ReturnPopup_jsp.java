/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.86
 * Generated at: 2018-07-31 11:30:36 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.Admin;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.net.HttpURLConnection;
import javax.servlet.*;
import javax.servlet.http.*;
import javax.naming.*;
import java.sql.*;
import javax.sql.*;
import javax.naming.*;
import java.sql.*;
import javax.sql.*;
import java.util.*;
import java.util.Date;
import java.text.SimpleDateFormat;
import javax.mail.*;
import javax.mail.internet.*;
import java.util.*;
import javax.mail.internet.*;
import java.net.URL.*;
import java.io.*;
import java.net.URLEncoder.*;
import java.io.InputStreamReader.*;
import java.net.URLConnection.*;
import java.io.InputStreamReader.*;
import java.io.OutputStreamWriter.*;

public final class ReturnPopup_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/sessionCheck1.jspf", Long.valueOf(1524567358000L));
    _jspx_dependants.put("/Admin/sessionCheck.jsp", Long.valueOf(1524567356000L));
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fchoose;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fvar_005fdataSource;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fotherwise;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fchoose = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fvar_005fdataSource = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fotherwise = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fchoose.release();
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.release();
    _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fvar_005fdataSource.release();
    _005fjspx_005ftagPool_005fc_005fotherwise.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

 
int timeout = session.getMaxInactiveInterval();
response.setHeader("Refresh", timeout + "; URL = admn_login.jsp");

      out.write("\r\n");
      out.write("    \r\n");
      out.write(" \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write(" ");
 

int timeout1 = session.getMaxInactiveInterval();
response.setHeader("Refresh", timeout1 + "; URL = admn_login.jsp");

if(((String)session.getAttribute("user_name"))==null)
       {
           
	response.sendRedirect("admn_login.jsp");
           
       }
      out.write("\r\n");
      out.write(" \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write(" \r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<link href=\"resources/bootstrap/css/bootstrap.min.css\" rel=\"stylesheet\"/>\r\n");
      out.write("<link href=\"resources/bootstrap/css/bootstrap.css\" rel=\"stylesheet\"/>\r\n");
      out.write("<script src=\"resources/JS/Approval_wf230.js\"></script>\r\n");
      out.write("<script src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("function refreshAndClose()\r\n");
      out.write("{\r\n");
      out.write("    window.close();\r\n");
      out.write("    if (window.opener && !window.opener.closed) \r\n");
      out.write("    {\r\n");
      out.write("      window.opener.location.reload();\r\n");
      out.write("    }\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("    window.onunload = refreshParent;\r\n");
      out.write("    function refreshParent() {\r\n");
      out.write("        window.opener.location.reload();\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    $(document).ready(function(){\r\n");
      out.write("   \t $('#remark').on('keypress', function (event) {\r\n");
      out.write("   \t\t   // var regex = new RegExp(\"^[a-zA-Z0-9]+$\");\r\n");
      out.write("   \t\t  var regex = new RegExp(\"['?!<\\\">\\\\\\\\&]+$\");\r\n");
      out.write("   \t\t    var key = String.fromCharCode(!event.charCode ? event.which : event.charCode);\r\n");
      out.write("   \t\t    if (regex.test(key)) {\r\n");
      out.write("   \t\t       event.preventDefault();\r\n");
      out.write("   \t\t       return false;\r\n");
      out.write("   \t\t    }\r\n");
      out.write("   \t\t});\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
String user = (String)session.getAttribute("user_name");


      out.write("\r\n");
      out.write("<form id='return_pop' name='return_pop'  method=\"post\">\r\n");
      out.write("<INPUT TYPE=\"HIDDEN\" NAME=\"Doc_Id\">\r\n");
      out.write("<INPUT TYPE=\"HIDDEN\" NAME=\"Action\">\r\n");
      out.write("<INPUT TYPE=\"HIDDEN\" NAME=\"requested_by\">\r\n");
      out.write("<INPUT TYPE=\"HIDDEN\" NAME=\"checkedval\">\r\n");
      out.write("<INPUT TYPE=\"HIDDEN\" NAME=\"doc_no\">\r\n");
      out.write("<INPUT TYPE=\"HIDDEN\" NAME=\"remarks\">\r\n");
      out.write("\r\n");

String Document_id=request.getParameter("doc_id");
String requested_by=request.getParameter("requested_by");

String docno=request.getParameter("doc_no");
String division=request.getParameter("Division");
String Clevel=request.getParameter("C_Level");
String remark = request.getParameter("remark");
String approvaldate=request.getParameter("approvaldate");

      out.write('\r');
      out.write('\n');
      //  c:choose
      org.apache.taglibs.standard.tag.common.core.ChooseTag _jspx_th_c_005fchoose_005f0 = (org.apache.taglibs.standard.tag.common.core.ChooseTag) _005fjspx_005ftagPool_005fc_005fchoose.get(org.apache.taglibs.standard.tag.common.core.ChooseTag.class);
      boolean _jspx_th_c_005fchoose_005f0_reused = false;
      try {
        _jspx_th_c_005fchoose_005f0.setPageContext(_jspx_page_context);
        _jspx_th_c_005fchoose_005f0.setParent(null);
        int _jspx_eval_c_005fchoose_005f0 = _jspx_th_c_005fchoose_005f0.doStartTag();
        if (_jspx_eval_c_005fchoose_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("\r\n");
            //  c:when
            org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f0 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
            boolean _jspx_th_c_005fwhen_005f0_reused = false;
            try {
              _jspx_th_c_005fwhen_005f0.setPageContext(_jspx_page_context);
              _jspx_th_c_005fwhen_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
              // /Admin/ReturnPopup.jsp(90,0) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_c_005fwhen_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${param.Action == null}", java.lang.Boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false)).booleanValue());
              int _jspx_eval_c_005fwhen_005f0 = _jspx_th_c_005fwhen_005f0.doStartTag();
              if (_jspx_eval_c_005fwhen_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                do {
                  out.write("\r\n");
                  out.write("\r\n");
                  out.write("<br><br>\r\n");
                  out.write("\r\n");
                  out.write("&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b>Return with Remarks</b>\r\n");
                  out.write("\r\n");
                  out.write("<br>\r\n");
                  out.write("<br>\r\n");
                  out.write("<br>\r\n");
                  out.write("&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<textarea name=\"remark\" id=\"remark\" rows=\"10\" cols=\"50\" maxlength=\"100\" name=\"comment\" placeholder=\"Enter Remark\"></textarea>\r\n");
                  out.write("</div>\r\n");
                  out.write("<br>\r\n");
                  out.write("<br>\r\n");
                  out.write("&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n");
                  out.write("&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n");
                  out.write("&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n");
                  out.write("<button id =\"Return\" type=\"button\" class=\"btn btn-primary\" onclick=\"returnedpopup('");
                  out.print(Document_id);
                  out.write('\'');
                  out.write(',');
                  out.write('\'');
                  out.print(requested_by);
                  out.write('\'');
                  out.write(',');
                  out.write('\'');
                  out.print(docno);
                  out.write('\'');
                  out.write(',');
                  out.write('\'');
                  out.print(user);
                  out.write("','return')\">Submit</button>\r\n");
                  int evalDoAfterBody = _jspx_th_c_005fwhen_005f0.doAfterBody();
                  if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                    break;
                } while (true);
              }
              if (_jspx_th_c_005fwhen_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                return;
              }
              _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f0);
              _jspx_th_c_005fwhen_005f0_reused = true;
            } finally {
              org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fwhen_005f0_reused);
            }
            out.write('\r');
            out.write('\n');
            //  c:when
            org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f1 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
            boolean _jspx_th_c_005fwhen_005f1_reused = false;
            try {
              _jspx_th_c_005fwhen_005f1.setPageContext(_jspx_page_context);
              _jspx_th_c_005fwhen_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
              // /Admin/ReturnPopup.jsp(108,0) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_c_005fwhen_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${param.Action == 'returned'}", java.lang.Boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false)).booleanValue());
              int _jspx_eval_c_005fwhen_005f1 = _jspx_th_c_005fwhen_005f1.doStartTag();
              if (_jspx_eval_c_005fwhen_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                do {
                  out.write('\r');
                  out.write('\n');

	String action=request.getParameter("Action");
String doc_action_alert2=(String)session.getAttribute("doc_action_Alert");
	if(action.equalsIgnoreCase("returned")){	
		String doc_id = request.getParameter("Doc_Id");
		
		String requestedBy = request.getParameter("requested_by");
		String docno1 = request.getParameter("doc_no");
		
		try{	
		Context initCtx = new InitialContext();
		Context envCtx = (Context) initCtx.lookup("java:comp/env");
		DataSource ds = (DataSource) envCtx.lookup("jdbc/MySQLDB");
		Connection conn =null;
		 conn = ds.getConnection();
		 String sql = "select PM.project,PM.project_Coordinator,PP.package_name,PP.package_director,DM.document_number,DM.Submitted_by from xx_document_mapping DM,xx_packages_project PP,"+
				 "xx_projectattributes_master PM where DM.Project_ID = PM.Project_ID  and PP.package_id = DM.Package_ID and DM.Document_Map_ID ='"+doc_id+"'";
		PreparedStatement ps = conn.prepareStatement(sql);
		 ResultSet rs = ps.executeQuery();
		 String project =null,pCoordinator =null,package_name =null,package_director =null;requested_by=null;
		 
		while(rs.next()){
			 project = rs.getString(1);
			 pCoordinator = rs.getString(2);
			 package_name = rs.getString(3);
			 package_director = rs.getString(4);
			 docno1 = rs.getString(5);
		}
		Date date =new SimpleDateFormat("dd/MM/yyyy").parse(approvaldate);
		java.sql.Date approvaldate2 = new java.sql.Date(date.getTime());
		SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
		String returnDate= sdf.format(date);
		docno = request.getParameter("doc_no");
		
		requested_by = request.getParameter("requested_by");
		
                  out.write("\r\n");
                  out.write("\t\t\r\n");
                  out.write("\t\t");
                  //  sql:update
                  org.apache.taglibs.standard.tag.rt.sql.UpdateTag _jspx_th_sql_005fupdate_005f0 = (org.apache.taglibs.standard.tag.rt.sql.UpdateTag) _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fvar_005fdataSource.get(org.apache.taglibs.standard.tag.rt.sql.UpdateTag.class);
                  boolean _jspx_th_sql_005fupdate_005f0_reused = false;
                  try {
                    _jspx_th_sql_005fupdate_005f0.setPageContext(_jspx_page_context);
                    _jspx_th_sql_005fupdate_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fwhen_005f1);
                    // /Admin/ReturnPopup.jsp(146,2) name = dataSource type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                    _jspx_th_sql_005fupdate_005f0.setDataSource("jdbc/MySQLDB");
                    // /Admin/ReturnPopup.jsp(146,2) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                    _jspx_th_sql_005fupdate_005f0.setVar("rs");
                    int[] _jspx_push_body_count_sql_005fupdate_005f0 = new int[] { 0 };
                    try {
                      int _jspx_eval_sql_005fupdate_005f0 = _jspx_th_sql_005fupdate_005f0.doStartTag();
                      if (_jspx_eval_sql_005fupdate_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                        if (_jspx_eval_sql_005fupdate_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                          _jspx_push_body_count_sql_005fupdate_005f0[0]++;
                          out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_sql_005fupdate_005f0);
                        }
                        do {
                          out.write("\r\n");
                          out.write("  update xx_approval_workflow set action ='Y' where document_id =");
                          out.print(doc_id);
                          out.write(' ');
                          out.write('\r');
                          out.write('\n');
                          int evalDoAfterBody = _jspx_th_sql_005fupdate_005f0.doAfterBody();
                          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                            break;
                        } while (true);
                        if (_jspx_eval_sql_005fupdate_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                          out = _jspx_page_context.popBody();
                          _jspx_push_body_count_sql_005fupdate_005f0[0]--;
                        }
                      }
                      if (_jspx_th_sql_005fupdate_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                        return;
                      }
                    } catch (java.lang.Throwable _jspx_exception) {
                      while (_jspx_push_body_count_sql_005fupdate_005f0[0]-- > 0)
                        out = _jspx_page_context.popBody();
                      _jspx_th_sql_005fupdate_005f0.doCatch(_jspx_exception);
                    } finally {
                      _jspx_th_sql_005fupdate_005f0.doFinally();
                    }
                    _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fvar_005fdataSource.reuse(_jspx_th_sql_005fupdate_005f0);
                    _jspx_th_sql_005fupdate_005f0_reused = true;
                  } finally {
                    org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sql_005fupdate_005f0, _jsp_getInstanceManager(), _jspx_th_sql_005fupdate_005f0_reused);
                  }
                  out.write('\r');
                  out.write('\n');
                  //  sql:update
                  org.apache.taglibs.standard.tag.rt.sql.UpdateTag _jspx_th_sql_005fupdate_005f1 = (org.apache.taglibs.standard.tag.rt.sql.UpdateTag) _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fvar_005fdataSource.get(org.apache.taglibs.standard.tag.rt.sql.UpdateTag.class);
                  boolean _jspx_th_sql_005fupdate_005f1_reused = false;
                  try {
                    _jspx_th_sql_005fupdate_005f1.setPageContext(_jspx_page_context);
                    _jspx_th_sql_005fupdate_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fwhen_005f1);
                    // /Admin/ReturnPopup.jsp(149,0) name = dataSource type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                    _jspx_th_sql_005fupdate_005f1.setDataSource("jdbc/MySQLDB");
                    // /Admin/ReturnPopup.jsp(149,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                    _jspx_th_sql_005fupdate_005f1.setVar("rs");
                    int[] _jspx_push_body_count_sql_005fupdate_005f1 = new int[] { 0 };
                    try {
                      int _jspx_eval_sql_005fupdate_005f1 = _jspx_th_sql_005fupdate_005f1.doStartTag();
                      if (_jspx_eval_sql_005fupdate_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                        if (_jspx_eval_sql_005fupdate_005f1 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                          _jspx_push_body_count_sql_005fupdate_005f1[0]++;
                          out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_sql_005fupdate_005f1);
                        }
                        do {
                          out.write("\r\n");
                          out.write("\t\t\tupdate xx_record_actions set ActionPerformed='Returned to RVNL',Information='");
                          out.print(remark );
                          out.write("',ActionedOn='");
                          out.print(approvaldate2);
                          out.write("',Real_ActionDate=now() where Document_id='");
                          out.print(doc_id);
                          out.write("' and ActionPerformedBy='");
                          out.print(user);
                          out.write("' and ActionPerformed='pending'\r\n");
                          out.write("\t\t\t\r\n");
                          out.write("\t\t");
                          int evalDoAfterBody = _jspx_th_sql_005fupdate_005f1.doAfterBody();
                          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                            break;
                        } while (true);
                        if (_jspx_eval_sql_005fupdate_005f1 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                          out = _jspx_page_context.popBody();
                          _jspx_push_body_count_sql_005fupdate_005f1[0]--;
                        }
                      }
                      if (_jspx_th_sql_005fupdate_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                        return;
                      }
                    } catch (java.lang.Throwable _jspx_exception) {
                      while (_jspx_push_body_count_sql_005fupdate_005f1[0]-- > 0)
                        out = _jspx_page_context.popBody();
                      _jspx_th_sql_005fupdate_005f1.doCatch(_jspx_exception);
                    } finally {
                      _jspx_th_sql_005fupdate_005f1.doFinally();
                    }
                    _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fvar_005fdataSource.reuse(_jspx_th_sql_005fupdate_005f1);
                    _jspx_th_sql_005fupdate_005f1_reused = true;
                  } finally {
                    org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sql_005fupdate_005f1, _jsp_getInstanceManager(), _jspx_th_sql_005fupdate_005f1_reused);
                  }
                  out.write('\r');
                  out.write('\n');
                  out.write('	');
                  //  sql:update
                  org.apache.taglibs.standard.tag.rt.sql.UpdateTag _jspx_th_sql_005fupdate_005f2 = (org.apache.taglibs.standard.tag.rt.sql.UpdateTag) _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fvar_005fdataSource.get(org.apache.taglibs.standard.tag.rt.sql.UpdateTag.class);
                  boolean _jspx_th_sql_005fupdate_005f2_reused = false;
                  try {
                    _jspx_th_sql_005fupdate_005f2.setPageContext(_jspx_page_context);
                    _jspx_th_sql_005fupdate_005f2.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fwhen_005f1);
                    // /Admin/ReturnPopup.jsp(153,1) name = dataSource type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                    _jspx_th_sql_005fupdate_005f2.setDataSource("jdbc/MySQLDB");
                    // /Admin/ReturnPopup.jsp(153,1) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                    _jspx_th_sql_005fupdate_005f2.setVar("rs");
                    int[] _jspx_push_body_count_sql_005fupdate_005f2 = new int[] { 0 };
                    try {
                      int _jspx_eval_sql_005fupdate_005f2 = _jspx_th_sql_005fupdate_005f2.doStartTag();
                      if (_jspx_eval_sql_005fupdate_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                        if (_jspx_eval_sql_005fupdate_005f2 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                          _jspx_push_body_count_sql_005fupdate_005f2[0]++;
                          out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_sql_005fupdate_005f2);
                        }
                        do {
                          out.write("\r\n");
                          out.write("  insert into xx_record_actions (Document_id,CurrentDate,ActionPerformed,ActionPerformedBy,Real_ActionDate) Values ('");
                          out.print(doc_id);
                          out.write('\'');
                          out.write(',');
                          out.write('\'');
                          out.print(approvaldate2);
                          out.write("','pending','");
                          out.print(requested_by);
                          out.write("', now())\r\n");
                          int evalDoAfterBody = _jspx_th_sql_005fupdate_005f2.doAfterBody();
                          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                            break;
                        } while (true);
                        if (_jspx_eval_sql_005fupdate_005f2 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                          out = _jspx_page_context.popBody();
                          _jspx_push_body_count_sql_005fupdate_005f2[0]--;
                        }
                      }
                      if (_jspx_th_sql_005fupdate_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                        return;
                      }
                    } catch (java.lang.Throwable _jspx_exception) {
                      while (_jspx_push_body_count_sql_005fupdate_005f2[0]-- > 0)
                        out = _jspx_page_context.popBody();
                      _jspx_th_sql_005fupdate_005f2.doCatch(_jspx_exception);
                    } finally {
                      _jspx_th_sql_005fupdate_005f2.doFinally();
                    }
                    _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fvar_005fdataSource.reuse(_jspx_th_sql_005fupdate_005f2);
                    _jspx_th_sql_005fupdate_005f2_reused = true;
                  } finally {
                    org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sql_005fupdate_005f2, _jsp_getInstanceManager(), _jspx_th_sql_005fupdate_005f2_reused);
                  }
                  out.write('	');
                  out.write('\r');
                  out.write('\n');

String select21 = "select * from xx_moreammendments where document_id ='"+doc_id+"'";

Statement st=null;

int flag=0;
st=(Statement) conn.createStatement();
ResultSet rs222 = st.executeQuery(select21);
if(rs222.next()){
	flag=1;
	
}
if(flag==1)
{
	
                  out.write('\r');
                  out.write('\n');
                  out.write('	');
                  //  sql:update
                  org.apache.taglibs.standard.tag.rt.sql.UpdateTag _jspx_th_sql_005fupdate_005f3 = (org.apache.taglibs.standard.tag.rt.sql.UpdateTag) _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fvar_005fdataSource.get(org.apache.taglibs.standard.tag.rt.sql.UpdateTag.class);
                  boolean _jspx_th_sql_005fupdate_005f3_reused = false;
                  try {
                    _jspx_th_sql_005fupdate_005f3.setPageContext(_jspx_page_context);
                    _jspx_th_sql_005fupdate_005f3.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fwhen_005f1);
                    // /Admin/ReturnPopup.jsp(171,1) name = dataSource type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                    _jspx_th_sql_005fupdate_005f3.setDataSource("jdbc/MySQLDB");
                    // /Admin/ReturnPopup.jsp(171,1) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                    _jspx_th_sql_005fupdate_005f3.setVar("rs");
                    int[] _jspx_push_body_count_sql_005fupdate_005f3 = new int[] { 0 };
                    try {
                      int _jspx_eval_sql_005fupdate_005f3 = _jspx_th_sql_005fupdate_005f3.doStartTag();
                      if (_jspx_eval_sql_005fupdate_005f3 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                        if (_jspx_eval_sql_005fupdate_005f3 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                          _jspx_push_body_count_sql_005fupdate_005f3[0]++;
                          out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_sql_005fupdate_005f3);
                        }
                        do {
                          out.write("\r\n");
                          out.write("\tupdate xx_moreammendments set status ='return', action_To='");
                          out.print(requested_by);
                          out.write("', Information='");
                          out.print(remark);
                          out.write("' where document_id =");
                          out.print(doc_id);
                          out.write('\r');
                          out.write('\n');
                          out.write('	');
                          int evalDoAfterBody = _jspx_th_sql_005fupdate_005f3.doAfterBody();
                          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                            break;
                        } while (true);
                        if (_jspx_eval_sql_005fupdate_005f3 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                          out = _jspx_page_context.popBody();
                          _jspx_push_body_count_sql_005fupdate_005f3[0]--;
                        }
                      }
                      if (_jspx_th_sql_005fupdate_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                        return;
                      }
                    } catch (java.lang.Throwable _jspx_exception) {
                      while (_jspx_push_body_count_sql_005fupdate_005f3[0]-- > 0)
                        out = _jspx_page_context.popBody();
                      _jspx_th_sql_005fupdate_005f3.doCatch(_jspx_exception);
                    } finally {
                      _jspx_th_sql_005fupdate_005f3.doFinally();
                    }
                    _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fvar_005fdataSource.reuse(_jspx_th_sql_005fupdate_005f3);
                    _jspx_th_sql_005fupdate_005f3_reused = true;
                  } finally {
                    org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sql_005fupdate_005f3, _jsp_getInstanceManager(), _jspx_th_sql_005fupdate_005f3_reused);
                  }
                  out.write('\r');
                  out.write('\n');
}
else
{
	
	
                  out.write("\r\n");
                  out.write("\r\n");
                  //  sql:update
                  org.apache.taglibs.standard.tag.rt.sql.UpdateTag _jspx_th_sql_005fupdate_005f4 = (org.apache.taglibs.standard.tag.rt.sql.UpdateTag) _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fvar_005fdataSource.get(org.apache.taglibs.standard.tag.rt.sql.UpdateTag.class);
                  boolean _jspx_th_sql_005fupdate_005f4_reused = false;
                  try {
                    _jspx_th_sql_005fupdate_005f4.setPageContext(_jspx_page_context);
                    _jspx_th_sql_005fupdate_005f4.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fwhen_005f1);
                    // /Admin/ReturnPopup.jsp(180,0) name = dataSource type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                    _jspx_th_sql_005fupdate_005f4.setDataSource("jdbc/MySQLDB");
                    // /Admin/ReturnPopup.jsp(180,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                    _jspx_th_sql_005fupdate_005f4.setVar("rs");
                    int[] _jspx_push_body_count_sql_005fupdate_005f4 = new int[] { 0 };
                    try {
                      int _jspx_eval_sql_005fupdate_005f4 = _jspx_th_sql_005fupdate_005f4.doStartTag();
                      if (_jspx_eval_sql_005fupdate_005f4 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                        if (_jspx_eval_sql_005fupdate_005f4 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                          _jspx_push_body_count_sql_005fupdate_005f4[0]++;
                          out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_sql_005fupdate_005f4);
                        }
                        do {
                          out.write("\r\n");
                          out.write("  insert into xx_moreammendments (Document_id,document_number,status,action_performedBy,project,package,projectCoordinator,packageDirector,action_to,Information) Values ('");
                          out.print(doc_id);
                          out.write('\'');
                          out.write(',');
                          out.write('\'');
                          out.print(docno1 );
                          out.write("','return','");
                          out.print(user);
                          out.write('\'');
                          out.write(',');
                          out.write('\'');
                          out.print(project);
                          out.write('\'');
                          out.write(',');
                          out.write('\'');
                          out.print(package_name);
                          out.write('\'');
                          out.write(',');
                          out.write('\'');
                          out.print(pCoordinator);
                          out.write('\'');
                          out.write(',');
                          out.write('\'');
                          out.print(package_director);
                          out.write('\'');
                          out.write(',');
                          out.write('\'');
                          out.print(requested_by);
                          out.write('\'');
                          out.write(',');
                          out.write('\'');
                          out.print(remark);
                          out.write("')\r\n");
                          int evalDoAfterBody = _jspx_th_sql_005fupdate_005f4.doAfterBody();
                          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                            break;
                        } while (true);
                        if (_jspx_eval_sql_005fupdate_005f4 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                          out = _jspx_page_context.popBody();
                          _jspx_push_body_count_sql_005fupdate_005f4[0]--;
                        }
                      }
                      if (_jspx_th_sql_005fupdate_005f4.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                        return;
                      }
                    } catch (java.lang.Throwable _jspx_exception) {
                      while (_jspx_push_body_count_sql_005fupdate_005f4[0]-- > 0)
                        out = _jspx_page_context.popBody();
                      _jspx_th_sql_005fupdate_005f4.doCatch(_jspx_exception);
                    } finally {
                      _jspx_th_sql_005fupdate_005f4.doFinally();
                    }
                    _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fvar_005fdataSource.reuse(_jspx_th_sql_005fupdate_005f4);
                    _jspx_th_sql_005fupdate_005f4_reused = true;
                  } finally {
                    org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sql_005fupdate_005f4, _jsp_getInstanceManager(), _jspx_th_sql_005fupdate_005f4_reused);
                  }
                  out.write('	');
                  out.write('\r');
                  out.write('\n');


}

                  out.write("\r\n");
                  out.write("\t\t");
 
		if (doc_action_alert2.equalsIgnoreCase("on")) {
		// Mail code starts from here
				String  documentname=null,documenttype=null,supemailid=null,supcontact=null,emailidsup=null,contact_No_sup=null;
		String supervisoremail = "select Email_Id,Contact_No from xx_user_master where User_name='"
				+ user + "'";

		PreparedStatement supervisorp = conn
				.prepareStatement(supervisoremail);
		ResultSet supervisorr = supervisorp.executeQuery();
		while (supervisorr.next()) {
			supemailid = supervisorr.getString("Email_Id");
			supcontact = supervisorr.getString("Contact_No");
		 
		}

		String result;
		String user_id = request.getParameter("user_id");
		   // Get recipient's email-ID, message & subject-line from index.html page
		   String emailq = "select Email_Id,Contact_No from xx_user_master where User_name='"
									+ requested_by + "'";

							PreparedStatement emailp = conn
									.prepareStatement(emailq);
							ResultSet emailr = emailp.executeQuery();
							while (emailr.next()) {
								emailidsup = emailr.getString("Email_Id");
								contact_No_sup = emailr.getString("Contact_No");
								 
							}
							String docname = "select Document_Number, Document_Name,Document_Type from xx_document_mapping where Document_Map_ID='"
									+ doc_id + "'";
							PreparedStatement docnamep = conn
									.prepareStatement(docname);
							ResultSet rsdoc = docnamep.executeQuery();
							while (rsdoc.next()) {
								 docno = rsdoc.getString("Document_Number");
								 documentname = rsdoc.getString("Document_Name");
								 documenttype = rsdoc.getString("Document_Type");
								 
							}
							   final String to = emailidsup;
		   final String subject = "RVNL DOCUMENT PORTAL";
		   final String messg = "<div style='font-family:Georgia; font-size:16px; text-align:justify; line-height:150%;'>To <BR> <b>"+requested_by.toUpperCase()+" </b><br><br> A document/drawing as per following details is returned for compliance to the observations:<br><BR> Document No:  "+docno+"<BR> Document Name:  "+documentname+" <BR> Document Type:  "+documenttype+"<BR> Returned By: "+user+"<BR>Date of Return: "+returnDate+".<br><br><br> <span style='color:brown; font-size:20px; font-style:italic;'<b> RVNL Document Portal</b></span><br><br><span style='color:gray;  font-size:10px; font-style:italic;'>Note: This is a system generated email. Don't reply to system email address i.e. indiarvnl@gmail.com.</span></div>";
		   // Sender's email ID and password needs to be mentioned
		   final String from = "indiarvnl@gmail.com";
		   final String pass = "vsam3WSCJAIw4cj7";
		   
		   final String cc = supemailid;
		   // Defining the gmail host
		   String host = "smtp-relay.sendinblue.com";

		   // Creating Properties object
		   Properties props = new Properties();

		   // Defining properties
		  
		   props.put("mail.smtp.starttls.enable", "true");
		   props.put("mail.smtp.host", host);
		   props.put("mail.smtp.user", from);
		   props.put("mail.smtp.password", pass);
		   props.put("mail.smtp.port", "587");
		   props.put("mail.smtp.auth", "true");

		   // Authorized the Session object.
		   Session mailSession = Session.getInstance(props, new javax.mail.Authenticator() {
		       @Override
		       protected PasswordAuthentication getPasswordAuthentication() {
		           return new PasswordAuthentication(from, pass);
		       }
		   });

		   try {
		       // Create a default MimeMessage object.
		       MimeMessage message = new MimeMessage(mailSession);
		       // Set From: header field of the header.
		       message.setFrom(new InternetAddress(from));
		       // Set To: header field of the header.
		       message.addRecipient(Message.RecipientType.TO,
		               new InternetAddress(to));
		       message.setRecipients(Message.RecipientType.CC, cc);
		       // Set Subject: header field
		       message.setSubject(subject);
		       // Now set the actual message
		       message.setText(messg);
		       // Send message
		       Transport.send(message);
		       result = "Your mail sent successfully....";
		   } catch (MessagingException mex) {
		       mex.printStackTrace();
		       result = "Error: unable to send mail....";
		   }
		  
		   // Mail code ends here
		   //SMS code 
		   
		   try {
		// Construct data
		//contact number supervisor------contact_No_sup
		//contact number sender ------------- supcontact

		String user11 = "username=" + "indiarvnl@gmail.com";
		String hash = "&hash=" + "60b97ac840106a43c5a0e44fb778276d90330ece5e2da9ad534868c03137636d";
		String message = "&message=" + "A document has been returned by "+user+". Doc Name: '"+documentname+"'.\n\nRVNL Document Portal";
		String sender = "&sender=" + "RPDAMS";
		String numbers = "&numbers=" + ""+supcontact+"";
		//+","+contact_No_sup+"";

		// Send data
		HttpURLConnection connsms = (HttpURLConnection) new java.net.URL("http://api.textlocal.in/send/?").openConnection();

		String data = user11 + hash + numbers + message + sender;

		connsms.setDoOutput(true);
		connsms.setRequestMethod("POST");
		connsms.setRequestProperty("Content-Length", Integer.toString(data.length()));
		connsms.getOutputStream().write(data.getBytes("UTF-8"));
		final BufferedReader rd = new BufferedReader(new InputStreamReader(connsms.getInputStream()));
		final StringBuffer stringBuffer = new StringBuffer();
		String line;
		while ((line = rd.readLine()) != null) {
		stringBuffer.append(line);
		}
		rd.close();
		System.out.println("Message sent successfully");
		//return stringBuffer.toString();
		} catch (Exception e) {
		System.out.println("Error SMS "+e);
		//return "Error "+e;
		}

		}		
		conn.close();
		}
		catch(Exception e){
			e.printStackTrace();
		}
		
	}
	
	

                  out.write("\r\n");
                  out.write("<script>\r\n");
                  out.write("document.return_pop.Action.value = \"null22\";\r\n");
                  out.write("document.getElementById(\"return_pop\").submit();\r\n");
                  out.write("</script>\r\n");
                  out.write("\r\n");
                  int evalDoAfterBody = _jspx_th_c_005fwhen_005f1.doAfterBody();
                  if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                    break;
                } while (true);
              }
              if (_jspx_th_c_005fwhen_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                return;
              }
              _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f1);
              _jspx_th_c_005fwhen_005f1_reused = true;
            } finally {
              org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fwhen_005f1_reused);
            }
            out.write('\r');
            out.write('\n');
            if (_jspx_meth_c_005fwhen_005f2(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
              return;
            out.write('\r');
            out.write('\n');
            if (_jspx_meth_c_005fotherwise_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
              return;
            out.write("\r\n");
            out.write("\r\n");
            out.write("\r\n");
            int evalDoAfterBody = _jspx_th_c_005fchoose_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fchoose_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
        _005fjspx_005ftagPool_005fc_005fchoose.reuse(_jspx_th_c_005fchoose_005f0);
        _jspx_th_c_005fchoose_005f0_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fchoose_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fchoose_005f0_reused);
      }
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</form>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fwhen_005f2(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f2 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    boolean _jspx_th_c_005fwhen_005f2_reused = false;
    try {
      _jspx_th_c_005fwhen_005f2.setPageContext(_jspx_page_context);
      _jspx_th_c_005fwhen_005f2.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      // /Admin/ReturnPopup.jsp(335,0) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fwhen_005f2.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${param.Action == 'null22'}", java.lang.Boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false)).booleanValue());
      int _jspx_eval_c_005fwhen_005f2 = _jspx_th_c_005fwhen_005f2.doStartTag();
      if (_jspx_eval_c_005fwhen_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("\r\n");
          out.write("<div class=\"alert alert-success\" align=\"center\">\r\n");
          out.write("\t\t\t\t\t    <strong> Document has been returned for more Information.</strong>\r\n");
          out.write("\t\t\t\t\t    <div style=\"text-align:center;margin-top:130px;\"><input type=\"button\" class=\"btn btn-primary\"\r\n");
          out.write("\t\t\t\t\t\t\t value=\"Close\"\r\n");
          out.write("\t\t\t\t\t\t\tonclick=\"javascript:window.close();return refreshAndClose()\" /></div>\r\n");
          out.write("    \r\n");
          out.write("\t\t\t\t\t    \r\n");
          out.write("\t\t\t\t\t    \r\n");
          out.write("\t\t\t\t\t    \r\n");
          out.write("\t\t\t\t\t    </div>\r\n");
          out.write("\r\n");
          int evalDoAfterBody = _jspx_th_c_005fwhen_005f2.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fwhen_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f2);
      _jspx_th_c_005fwhen_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f2, _jsp_getInstanceManager(), _jspx_th_c_005fwhen_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fotherwise_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:otherwise
    org.apache.taglibs.standard.tag.common.core.OtherwiseTag _jspx_th_c_005fotherwise_005f0 = (org.apache.taglibs.standard.tag.common.core.OtherwiseTag) _005fjspx_005ftagPool_005fc_005fotherwise.get(org.apache.taglibs.standard.tag.common.core.OtherwiseTag.class);
    boolean _jspx_th_c_005fotherwise_005f0_reused = false;
    try {
      _jspx_th_c_005fotherwise_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fotherwise_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      int _jspx_eval_c_005fotherwise_005f0 = _jspx_th_c_005fotherwise_005f0.doStartTag();
      if (_jspx_eval_c_005fotherwise_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("\r\n");
          int evalDoAfterBody = _jspx_th_c_005fotherwise_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fotherwise_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fotherwise.reuse(_jspx_th_c_005fotherwise_005f0);
      _jspx_th_c_005fotherwise_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fotherwise_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fotherwise_005f0_reused);
    }
    return false;
  }
}
