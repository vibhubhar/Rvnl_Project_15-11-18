/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.86
 * Generated at: 2018-05-22 12:32:35 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.Admin;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import javax.naming.*;
import java.sql.*;
import javax.sql.*;
import java.io.FileOutputStream;
import javax.servlet.*;
import javax.servlet.http.*;
import java.util.*;
import javax.naming.*;
import java.sql.*;
import javax.sql.*;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.Element;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.PageSize;
import com.itextpdf.text.pdf.BaseFont;
import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Font;
import java.awt.Color;
import com.itextpdf.text.pdf.PdfWriter;
import com.itextpdf.text.Document;
import com.itextpdf.text.Chunk;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.text.DateFormat;
import org.joda.time.DateTime;
import org.joda.time.Days;
import org.joda.time.Hours;
import org.joda.time.Minutes;
import org.joda.time.Seconds;
import com.rvnl.javascript.MySessionCounter;

public final class Report_005fDocs_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/WEB-INF/sessionCheck1.jspf", Long.valueOf(1524567358000L));
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 1120256, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

 
int timeout = session.getMaxInactiveInterval();
response.setHeader("Refresh", timeout + "; URL = admn_login.jsp");

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<style>\r\n");
      out.write(".dt-button.buttons-copy.buttons-html5 {\r\n");
      out.write("    display: none;\r\n");
      out.write("}\r\n");
      out.write(".dt-button.buttons-csv.buttons-html5 {\r\n");
      out.write("    display: none;\r\n");
      out.write("}\r\n");
      out.write(".dt-button.buttons-pdf.buttons-html5 {\r\n");
      out.write("    display: none;\r\n");
      out.write("}\r\n");
      out.write("#example_length {\r\n");
      out.write("    display: none;\r\n");
      out.write("}\r\n");
      out.write("#example {\r\n");
      out.write("    width: inherit;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("table {\r\n");
      out.write("\tmso-displayed-decimal-separator: \"\\.\";\r\n");
      out.write("\tmso-displayed-thousand-separator: \"\\,\";\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("@page {\r\n");
      out.write("\tmargin: 1.0in .75in 1.0in .75in;\r\n");
      out.write("\tmso-header-margin: .5in;\r\n");
      out.write("\tmso-footer-margin: .5in;\r\n");
      out.write("\tmso-page-orientation: landscape;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\r\n");
      out.write("<link href=\"resources/bootstrap/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n");
      out.write("<link href=\"resources/bootstrap/css/bootstrap.css\" rel=\"stylesheet\" />\r\n");
      out.write("<!-- <title>PIU Level Report</title> -->\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script src=\"resources/JS/validateSysAdmin230.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\"\r\n");
      out.write("\tsrc=\"https://code.jquery.com/jquery-1.12.4.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\"\r\n");
      out.write("\tsrc=\"https://code.jquery.com/ui/1.12.1/jquery-ui.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\"\r\n");
      out.write("\tsrc=\"http://www.allmyscripts.com/Table_Sort/beta/gs_sortable.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\"\r\n");
      out.write("\tsrc=\"http://ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js\"></script>\r\n");
      out.write("<script\r\n");
      out.write("\tsrc=\"http://ajax.aspnetcdn.com/ajax/jquery.ui/1.8.9/jquery-ui.js\"\r\n");
      out.write("\ttype=\"text/javascript\"></script>\r\n");
      out.write("<script src=\"resources/JS/Approval_wf230.js\"></script>\r\n");
      out.write("<link\r\n");
      out.write("\thref=\"http://ajax.aspnetcdn.com/ajax/jquery.ui/1.8.9/themes/blitzer/jquery-ui.css\"\r\n");
      out.write("\trel=\"stylesheet\" type=\"text/css\" />\r\n");
      out.write("\r\n");
      out.write("<link href=\"resources/css/main.css\" rel=\"stylesheet\" type=\"text/css\">\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("\thref=\"//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css\">\r\n");
      out.write("<link href=\"resources/bootstrap/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n");
      out.write("<link href=\"resources/bootstrap/css/bootstrap.css\" rel=\"stylesheet\" />\r\n");
      out.write("<script src=\"resources/JS/backButton.js\"></script>\r\n");
      out.write("<script src=\"resources/JS/validate230.js\"></script>\r\n");
      out.write("<script src=\"resources/JS/PIU_depend230.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\"\r\n");
      out.write("\tsrc=\"resources/JS/datasort.js\"></script>\r\n");
      out.write("\t<link\r\n");
      out.write("\thref=\"https://cdn.datatables.net/1.10.12/css/jquery.dataTables.min.css\"\r\n");
      out.write("\trel=\"stylesheet\" type=\"text/css\" />\r\n");
      out.write("\t\r\n");
      out.write("<link href=\"resources/css/buttons.dataTables.min.css\" rel=\"stylesheet\" type=\"text/css\">\r\n");
      out.write("<script src=\"resources/JS/jquery-1.12.4.js\"></script>\r\n");
      out.write("<script src=\"resources/JS/jquery.dataTables.min.js\"></script>\r\n");
      out.write("<script src=\"resources/JS/dataTables.buttons.min.js\"></script>\r\n");
      out.write("<script src=\"resources/JS/buttons.flash.min.js\"></script>\r\n");
      out.write("<script src=\"resources/JS/jszip.min.js\"></script>\r\n");
      out.write("<!-- <script src=\"resources/JS/pdfmake.min.js\"></script> -->\r\n");
      out.write("<script src=\"resources/JS/vfs_fonts.js\"></script>\r\n");
      out.write("<script src=\"resources/JS/buttons.print.min.js\"></script>\r\n");
      out.write("<script src=\"resources/JS/buttons.html5.min.js\"></script>\r\n");
      out.write("<script>\r\n");
      out.write("function myFunction() {\r\n");
      out.write("    window.print();\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("function closeMe()\r\n");
      out.write("{\r\n");
      out.write("var win = window.open(\"\",\"_self\"); \r\n");
      out.write("win.close();\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("function mywinClose() {\r\n");
      out.write("\tvar sessionTimeout1 = \"");
      out.print( session.getMaxInactiveInterval() );
      out.write("\";\r\n");
      out.write("\tsetTimeout(function(){var parent1=window.open(\"\",\"report_master\"); parent1.close(); },(sessionTimeout1-10)*1000);\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body onload=\"mywinClose();\">\r\n");
      out.write("\t<div style=\"text-align: center;font-size: 18px;\"><b>DOCUMENTS MOVEMENT HISTORY REPORT </b></div>\r\n");
      out.write("\t<br><br> Active Sessions : ");
      out.print( MySessionCounter.getActiveSessions() );
      out.write(" <br><br>\r\n");
      out.write("\t");

		String exportToExcel = request.getParameter("exportToExcel");
	Connection conn = null;
	Statement stmt = null, stmt11=null;
	ResultSet rs = null,rs11=null;
	String arguments=null, nos_moved_rly=null;
	int i=0;
	try {
	Context initCtx = new InitialContext();
	Context envCtx = (Context) initCtx.lookup("java:comp/env");
	DataSource ds = (DataSource) envCtx.lookup("jdbc/MySQLDB");

	conn = ds.getConnection();

	
	//String reportType = request.getParameter("report_type");
	//System.out.println("report:"+reportType);
	//if (reportType.equalsIgnoreCase("zonewise")) {
		String query11="select t.rownum,t.Document_id, t.Added_ByUser, t.Assigned_To, t.Action, t.Level, t.AssignedDays "+
				" from ( select Document_id, Added_ByUser, Assigned_To, Action, Level, AssignedDays from xx_approval_workflow "+ 
						  " group by Document_id, Added_ByUser, Assigned_To, Action, Level, AssignedDays "+
						  " having count(*) > 1) x, xx_approval_workflow t "+
						" where x.Document_id=t.Document_id and x.Added_ByUser= t.Added_ByUser and x.Assigned_To=t.Assigned_To and x.Level=t.Level and x.Action=t.Action and x.AssignedDays=t.AssignedDays "+
						" order by  x.Document_id, x.Added_ByUser, x.Assigned_To, x.Action, x.Level, x.AssignedDays";

		//System.out.println("query:"+query11);
		stmt11 = conn.createStatement();
		rs11 = stmt11.executeQuery(query11);
		
	
      out.write("\r\n");
      out.write("<br> \r\n");
      out.write("<table > <tr> <td valign=\"top\" width=\"30%\">\r\n");
      out.write("<span style=\"margin-left:20px; color:blue; font-weight:bold; font-size:18px;\">Approval Workflow Table - duplicates (1)</span>\r\n");
      out.write("\t\t<br>\r\n");
      out.write("\t<table border=1 class=\"table table-hover table-bordered\"\r\n");
      out.write("\t\tstyle=\"background-color: #F0FFFF; margin-left:20px;\" id=\"example\" class=\"display nowrap\" cellspacing=\"10\" width=\"100%\">\r\n");
      out.write("\t\t<thead> \r\n");
      out.write("\t\t<tr class=\"success\">\r\n");
      out.write("\t\t\t<th style=\"padding: 0px 14px 24px 0px;\">Row No.</th>\r\n");
      out.write("\t\t\t<th style=\"padding: 0px 18px 17px 14px; \">Document_Id</th>\r\n");
      out.write("\t\t\t<th width=\"140px\">Added By User</th>\r\n");
      out.write("\t\t\t<th width=\"140px\">Assigned_To</th>\r\n");
      out.write("\t\t\t<th width=\"140px\">Action</th>\r\n");
      out.write("\t\t\t<th width=\"140px\">Level</th>\r\n");
      out.write("\t\t\t<th width=\"140px\">Assigned_Days</th>\r\n");
      out.write("\t\t\t</tr></thead>\r\n");
      out.write("\t\t<tbody>\r\n");
      out.write("\t\t");

			 i = 1;
			while (rs11.next()) {

				String col1 = rs11.getString(1);
				String col2 = rs11.getString(2);
				String col3 = rs11.getString(3);
				String col4 = rs11.getString(4);
				String col5 = rs11.getString(5);
				String col6 = rs11.getString(6);
				String col7 = rs11.getString(7);
				
						
      out.write("\r\n");
      out.write("\t\t<tr class=\"active\">\r\n");
      out.write("\t\t\t<td >");
      out.print(col1);
      out.write("</td>\r\n");
      out.write("\t\t\t<td >");
      out.print(col2);
      out.write("</td>\r\n");
      out.write("\t\t\t<td >");
      out.print(col3);
      out.write("</td>\r\n");
      out.write("\t\t\t<td >");
      out.print(col4);
      out.write("</td>\r\n");
      out.write("\t\t\t<td >");
      out.print(col5);
      out.write("</td>\r\n");
      out.write("\t\t\t<td >");
      out.print(col6);
      out.write("</td>\r\n");
      out.write("\t\t\t<td >");
      out.print(col7);
      out.write("</td>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t");

			i++;
			}
			rs11.close();
			stmt11.close();
			
		
      out.write("\r\n");
      out.write("\t\t</tbody>\r\n");
      out.write("\t</table>\r\n");
      out.write("\t\r\n");
      out.write("\t<br>\t<br>\r\n");
      out.write("\t");

		
				String query="select count(*),max(rownum) as maxrow, Document_id, Added_ByUser, Assigned_To, Action, Level, AssignedDays "+
						  " from xx_approval_workflow group by Document_id, Added_ByUser, Assigned_To, Action, Level, AssignedDays having count(*) > 1";

	stmt = conn.createStatement();
		rs = stmt.executeQuery(query);
	
      out.write("\r\n");
      out.write("</td><td valign=\"top\" width=\"35%\" rowspan=\"2\">\r\n");
      out.write("<span style=\"margin-left:20px; color:blue; font-weight:bold; font-size:18px;\">Approval Workflow Table - duplicates (2)</span><br>\r\n");
      out.write("\t\r\n");
      out.write("\t<table border=1 class=\"table table-hover table-bordered\"\r\n");
      out.write("\t\tstyle=\"background-color: #F0FFFF; margin-left:20px;\" id=\"example\" class=\"display nowrap\" cellspacing=\"0\" width=\"100%\">\r\n");
      out.write("\t\t<thead>\r\n");
      out.write("\t\t<tr class=\"success\">\r\n");
      out.write("\t\t\t<th style=\"padding: 0px 14px 24px 0px;\">Doc Count</th>\r\n");
      out.write("\t\t\t<th style=\"padding: 0px 14px 24px 0px;\">Max Row No.</th>\r\n");
      out.write("\t\t\t<th style=\"padding: 0px 18px 17px 14px; \">Document_Id</th>\r\n");
      out.write("\t\t\t<th width=\"140px\">Added By User</th>\r\n");
      out.write("\t\t\t<th width=\"140px\">Assigned_To</th>\r\n");
      out.write("\t\t\t<th width=\"140px\">Action</th>\r\n");
      out.write("\t\t\t<th width=\"140px\">Level</th>\r\n");
      out.write("\t\t\t<th width=\"140px\">Assigned_Days</th>\r\n");
      out.write("\t\t\t</tr></thead>\r\n");
      out.write("\t\t<tbody>\r\n");
      out.write("\t\t");

			 i = 1;
			while (rs.next()) {

				String col1 = rs.getString(1);
				String col2 = rs.getString(2);
				String col3 = rs.getString(3);
				String col4 = rs.getString(4);
				String col5 = rs.getString(5);
				String col6 = rs.getString(6);
				String col7 = rs.getString(7);
				String col8 = rs.getString(8);
				
						
      out.write("\r\n");
      out.write("\t\t<tr class=\"active\">\r\n");
      out.write("\t\t\t<td >");
      out.print(col1);
      out.write("</td>\r\n");
      out.write("\t\t\t<td >");
      out.print(col2);
      out.write("</td>\r\n");
      out.write("\t\t\t<td >");
      out.print(col3);
      out.write("</td>\r\n");
      out.write("\t\t\t<td >");
      out.print(col4);
      out.write("</td>\r\n");
      out.write("\t\t\t<td >");
      out.print(col5);
      out.write("</td>\r\n");
      out.write("\t\t\t<td >");
      out.print(col6);
      out.write("</td>\r\n");
      out.write("\t\t\t<td >");
      out.print(col7);
      out.write("</td>\r\n");
      out.write("\t\t\t<td >");
      out.print(col8);
      out.write("</td>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t");

			i++;
			}
			rs.close();
			stmt.close();
			
		
      out.write("\r\n");
      out.write("\t\t</tbody>\r\n");
      out.write("\t</table>\r\n");
      out.write("\t<br><br>\r\n");
      out.write("\t");

//	} else if (reportType.equalsIgnoreCase("piuwise")) {
		
		 query="select t.Rownum, x.Document_id, x.CurrentDate, x.ActionPerformed, x.ActionPerformedBy, x.Information, x.ActionedOn, x.AssignedDays from (SELECT COUNT(*), Document_id, CurrentDate, ActionPerformed, ActionPerformedBy, Information, ActionedOn, AssignedDays "+ 
				" FROM xx_record_actions GROUP BY Document_id, CurrentDate, ActionPerformed, ActionPerformedBy, Information, ActionedOn, AssignedDays "+
				" HAVING COUNT(*)>1) x, xx_record_actions t where x.Document_id = t.Document_id  and x.CurrentDate=t.CurrentDate and  x.ActionPerformed= t.ActionPerformed and  x.ActionPerformedBy= t.ActionPerformedBy and  x.Information= t.Information and x.ActionedOn=t.ActionedOn and x.AssignedDays=t.AssignedDays";

stmt = conn.createStatement();
rs = stmt.executeQuery(query);

      out.write("\r\n");
      out.write("</td></tr>\r\n");
      out.write("<tr><td valign=\"top\" width=\"35%\">\r\n");
      out.write("<span style=\"margin-left:20px; color:blue; font-weight:bold; font-size:18px;\">Record Actions Table - duplicate (1)</span><br>\r\n");
      out.write("<table border=1 class=\"table table-hover table-bordered\"\r\n");
      out.write("style=\"background-color: #F0FFFF; margin-left:20px;\" id=\"example\" class=\"display nowrap\" cellspacing=\"0\" width=\"100%\">\r\n");
      out.write("<thead>\r\n");
      out.write("<tr class=\"success\">\r\n");
      out.write("\t\t\t<th style=\"padding: 0px 14px 24px 0px;\">Row No.</th>\r\n");
      out.write("\t\t\t<th style=\"padding: 0px 18px 17px 14px; \">Document_Id</th>\r\n");
      out.write("\t\t\t<th width=\"140px\">CurrentDate</th>\r\n");
      out.write("\t\t\t<th width=\"140px\">Action Performed</th>\r\n");
      out.write("\t\t\t<th width=\"140px\">Action Performed By</th>\r\n");
      out.write("\t\t\t<th width=\"240px\">Information</th>\r\n");
      out.write("\t\t\t<th width=\"140px\">Actioned On</th>\r\n");
      out.write("\t\t\t<th width=\"140px\">Assiged Days</th>\r\n");
      out.write("\t\t\t</tr></thead>\r\n");
      out.write("\t\t<tbody>\r\n");
      out.write("\t\t");

			 i = 1;
			while (rs.next()) {

				String col1 = rs.getString(1);
				String col2 = rs.getString(2);
				String col3 = rs.getString(3);
				String col4 = rs.getString(4);
				String col5 = rs.getString(5);
				String col6 = rs.getString(6);
				String col7 = rs.getString(7);
				String col8 = rs.getString(8);
				
						
      out.write("\r\n");
      out.write("\t\t<tr class=\"active\">\r\n");
      out.write("\t\t\t<td >");
      out.print(col1);
      out.write("</td>\r\n");
      out.write("\t\t\t<td >");
      out.print(col2);
      out.write("</td>\r\n");
      out.write("\t\t\t<td >");
      out.print(col3);
      out.write("</td>\r\n");
      out.write("\t\t\t<td >");
      out.print(col4);
      out.write("</td>\r\n");
      out.write("\t\t\t<td >");
      out.print(col5);
      out.write("</td>\r\n");
      out.write("\t\t\t<td >");
      out.print(col6);
      out.write("</td>\r\n");
      out.write("\t\t\t<td >");
      out.print(col7);
      out.write("</td>\r\n");
      out.write("\t\t\t<td >");
      out.print(col8);
      out.write("</td>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t</tr>\r\n");

	i++;
	}
	rs.close();
	stmt.close();
	

      out.write("\r\n");
      out.write("</tbody>\r\n");
      out.write("</table>\r\n");
      out.write("<br><br>\r\n");

//	} else if (reportType.equalsIgnoreCase("project")) {
		
	 query="SELECT COUNT(*), max(rownum) as maxrow, Document_id, CurrentDate, ActionPerformed, ActionPerformedBy, Information, ActionedOn, AssignedDays "+
			" FROM xx_record_actions GROUP BY Document_id, CurrentDate, ActionPerformed, ActionPerformedBy, Information, ActionedOn, AssignedDays HAVING COUNT(*)>1";

stmt = conn.createStatement();
rs = stmt.executeQuery(query);

      out.write("\r\n");
      out.write("</td></tr><tr><td>\r\n");
      out.write("<span style=\"margin-left:80px; color:blue; font-weight:bold; font-size:18px;\">Record Actions Table - duplicate (2)</span><br>\r\n");
      out.write("<table border=1 class=\"table table-hover table-bordered\"\r\n");
      out.write("style=\"background-color: #F0FFFF; margin-left:20px;\" id=\"example\" class=\"display nowrap\" cellspacing=\"0\" width=\"100%\">\r\n");
      out.write("<thead>\r\n");
      out.write("<tr class=\"success\">\r\n");
      out.write("<th width=\"140px\">Doc Count</th>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t<th style=\"padding: 0px 14px 24px 0px;\">Max Row No.</th>\r\n");
      out.write("\t\t\t<th style=\"padding: 0px 18px 17px 14px; \">Document_Id</th>\r\n");
      out.write("\t\t<th width=\"140px\">CurrentDate</th>\r\n");
      out.write("\t\t\t<th width=\"140px\">Action Performed</th>\r\n");
      out.write("\t\t\t<th width=\"140px\">Action Performed By</th>\r\n");
      out.write("\t\t\t<th width=\"240px\">Information</th>\r\n");
      out.write("\t\t\t<th width=\"140px\">Actioned On</th>\r\n");
      out.write("\t\t\t<th width=\"140px\">Assiged Days</th>\r\n");
      out.write("\t\t\t</tr></thead>\r\n");
      out.write("\t\t<tbody>\r\n");
      out.write("\t\t");

			 i = 1;
			while (rs.next()) {

				String col1 = rs.getString(1);
				String col2 = rs.getString(2);
				String col3 = rs.getString(3);
				String col4 = rs.getString(4);
				String col5 = rs.getString(5);
				String col6 = rs.getString(6);
				String col7 = rs.getString(7);
				String col8 = rs.getString(8);
				String col9 = rs.getString(9);
				
						
      out.write("\r\n");
      out.write("\t\t<tr class=\"active\">\r\n");
      out.write("\t\t\t<td >");
      out.print(col1);
      out.write("</td>\r\n");
      out.write("\t\t\t<td >");
      out.print(col2);
      out.write("</td>\r\n");
      out.write("\t\t\t<td >");
      out.print(col3);
      out.write("</td>\r\n");
      out.write("\t\t\t<td >");
      out.print(col4);
      out.write("</td>\r\n");
      out.write("\t\t\t<td >");
      out.print(col5);
      out.write("</td>\r\n");
      out.write("\t\t\t<td >");
      out.print(col6);
      out.write("</td>\r\n");
      out.write("\t\t\t<td >");
      out.print(col7);
      out.write("</td>\r\n");
      out.write("\t\t\t<td >");
      out.print(col8);
      out.write("</td>\r\n");
      out.write("\t\t\t<td >");
      out.print(col9);
      out.write("</td>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t</tr>\r\n");

	i++;
	}
	rs.close();
	stmt.close();
	

      out.write("\r\n");
      out.write("</tbody>\r\n");
      out.write("</table>\r\n");
      out.write("<br><br>\r\n");

//	} else if (reportType.equalsIgnoreCase("docs")) {
		
 query="select t.rownum,t.Hierarchy_id, t.Document_id, t.zone, t.Document_type, t.Level, t.userid, t.Days "+
		" from ( select Hierarchy_id,Document_id, zone, Document_type, Level, userid, Days "+
				"  from xx_doc_zones_hierarchy   group by Hierarchy_id,Document_id, zone, Document_type, Level, userid, Days having count(*) > 1) x, xx_doc_zones_hierarchy  t "+
			" where x.Hierarchy_id= t.Hierarchy_id and x.Document_id=t.Document_id and x.zone= t.zone and x.Document_type= t.Document_type and x.Level = t.Level and x.userid = t.userid  and x.Days= t.Days "+ 
			" order by x.Hierarchy_id, x.Document_id, x.zone, x.Document_type, x.Level, x.userid, x.Days"; 
 //System.out.println("pk------"+query);
 stmt = conn.createStatement();
rs = stmt.executeQuery(query);

      out.write("\r\n");
      out.write("</td></tr><tr><td>\r\n");
      out.write("<span style=\"margin-left:20px; color:blue; font-weight:bold; font-size:18px;\">Doc_Zones_Hierarchy Table - duplicates</span><br>\r\n");
      out.write("<table border=1 class=\"table table-hover table-bordered\"\r\n");
      out.write("style=\"background-color: #F0FFFF; margin-left:20px;\" id=\"example\" class=\"display nowrap\" cellspacing=\"0\" width=\"100%\">\r\n");
      out.write("<thead>\r\n");
      out.write("<tr class=\"success\">\r\n");
      out.write("\t\t\t<th style=\"padding: 0px 14px 24px 0px;\">Row No.</th>\r\n");
      out.write("\t\t\t\t<th width=\"140px\">Hierarchy Id</th>\r\n");
      out.write("\t\t\t<th style=\"padding: 0px 18px 17px 14px; \">Document_Id</th>\r\n");
      out.write("\t\t\t<th width=\"140px\">Zone</th>\r\n");
      out.write("\t\t\t<th width=\"140px\">Doc Type</th>\r\n");
      out.write("\t\t\t<th width=\"140px\">Level</th>\r\n");
      out.write("\t\t\t<th width=\"140px\">User_Id</th>\r\n");
      out.write("\t\t\t<th width=\"140px\">Days</th>\r\n");
      out.write("\t\t\t</tr></thead>\r\n");
      out.write("\t\t<tbody>\r\n");
      out.write("\t\t");

			 i = 1;
			while (rs.next()) {

				String col1 = rs.getString(1);
				String col2 = rs.getString(2);
				String col3 = rs.getString(3);
				String col4 = rs.getString(4);
				String col5 = rs.getString(5);
				String col6 = rs.getString(6);
				String col7 = rs.getString(7);
				String col8 = rs.getString(8);
				
						
      out.write("\r\n");
      out.write("\t\t<tr class=\"active\">\r\n");
      out.write("\t\t\t<td >");
      out.print(col1);
      out.write("</td>\r\n");
      out.write("\t\t\t<td >");
      out.print(col2);
      out.write("</td>\r\n");
      out.write("\t\t\t<td >");
      out.print(col3);
      out.write("</td>\r\n");
      out.write("\t\t\t<td >");
      out.print(col4);
      out.write("</td>\r\n");
      out.write("\t\t\t<td >");
      out.print(col5);
      out.write("</td>\r\n");
      out.write("\t\t\t<td >");
      out.print(col6);
      out.write("</td>\r\n");
      out.write("\t\t\t<td >");
      out.print(col7);
      out.write("</td>\r\n");
      out.write("\t\t\t<td >");
      out.print(col8);
      out.write("</td>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t</tr>\r\n");

	i++;
	}
	rs.close();
	stmt.close();

      out.write("\r\n");
      out.write("</tbody>\r\n");
      out.write("</table>\r\n");
      out.write("</td></tr>\r\n");
      out.write("<tr><td colspan=\"2\"><br><br>\r\n");
      out.write("<span style=\"margin-left:250px; color:blue; font-weight:bold; font-size:18px;\">Doc_Divisions_Hierarchy Table - duplicates</span><br>\r\n");

//	} else if (reportType.equalsIgnoreCase("docs")) {
query="select t.rownum,t.Hierarchy_id, t.Document_id, t.Division, t.Document_type, t.Level, t.userid, t.Days "+
 	" from ( select Hierarchy_id,Document_id, Division, Document_type, Level, userid, Days  from xx_doc_divisions_hierarchy "+  
		"  group by Hierarchy_id,Document_id, Division, Document_type, Level, userid, Days  having count(*) > 1) x, xx_doc_divisions_hierarchy  t "+
		" where x.Hierarchy_id= t.Hierarchy_id and x.Document_id=t.Document_id and x.Division= t.Division and x.Document_type= t.Document_type and x.Level = t.Level and x.userid = t.userid  and x.Days= t.Days "+ 
	" order by x.Hierarchy_id, x.Document_id, x.Division, x.Document_type, x.Level, x.userid, x.Days";

//System.out.println("query2:"+query);
stmt = conn.createStatement();
rs = stmt.executeQuery(query);

      out.write("\r\n");
      out.write("<table border=1 class=\"table table-hover table-bordered\"\r\n");
      out.write("style=\"background-color: #F0FFFF; margin-left:20px;\" id=\"example\" class=\"display nowrap\" cellspacing=\"0\" width=\"100%\">\r\n");
      out.write("<thead>\r\n");
      out.write("<tr class=\"success\">\r\n");
      out.write("\t\t\t<th style=\"padding: 0px 14px 24px 0px;\">Row No.</th>\r\n");
      out.write("\t\t\t\t<th width=\"140px\">Hierarchy Id</th>\r\n");
      out.write("\t\t\t<th style=\"padding: 0px 18px 17px 14px; \">Document_Id</th>\r\n");
      out.write("\t\t\t<th width=\"140px\">Division</th>\r\n");
      out.write("\t\t\t<th width=\"140px\">Doc Type</th>\r\n");
      out.write("\t\t\t<th width=\"140px\">Level</th>\r\n");
      out.write("\t\t\t<th width=\"140px\">User_Id</th>\r\n");
      out.write("\t\t\t<th width=\"140px\">Days</th>\r\n");
      out.write("\t\t\t</tr></thead>\r\n");
      out.write("\t\t<tbody>\r\n");
      out.write("\t\t");

			 i = 1;
			while (rs.next()) {

				String col1 = rs.getString(1);
				String col2 = rs.getString(2);
				String col3 = rs.getString(3);
				String col4 = rs.getString(4);
				String col5 = rs.getString(5);
				String col6 = rs.getString(6);
				String col7 = rs.getString(7);
				String col8 = rs.getString(8);
				
						
      out.write("\r\n");
      out.write("\t\t<tr class=\"active\">\r\n");
      out.write("\t\t\t<td >");
      out.print(col1);
      out.write("</td>\r\n");
      out.write("\t\t\t<td >");
      out.print(col2);
      out.write("</td>\r\n");
      out.write("\t\t\t<td >");
      out.print(col3);
      out.write("</td>\r\n");
      out.write("\t\t\t<td >");
      out.print(col4);
      out.write("</td>\r\n");
      out.write("\t\t\t<td >");
      out.print(col5);
      out.write("</td>\r\n");
      out.write("\t\t\t<td >");
      out.print(col6);
      out.write("</td>\r\n");
      out.write("\t\t\t<td >");
      out.print(col7);
      out.write("</td>\r\n");
      out.write("\t\t\t<td >");
      out.print(col8);
      out.write("</td>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t</tr>\r\n");

	i++;
	}
	rs.close();
	stmt.close();

      out.write("\r\n");
      out.write("</tbody>\r\n");
      out.write("</table>\r\n");
      out.write("</td></tr>\r\n");
      out.write("<tr><td colspan=\"2\"><br><br>\r\n");
      out.write("<span style=\"margin-left:250px; color:blue; font-weight:bold; font-size:18px;\">More_Amendments Table - duplicates</span><br>\r\n");

//	} else if (reportType.equalsIgnoreCase("docs")) {
query="select t.rownum ,t.document_id, t.document_number, t.status, t.action_performedBy, t.project, t.package, t.action_To, t.Information "+ 
		" from ( select document_id, document_number, status, action_performedBy, project, package, action_To, Information from xx_moreammendments  "+
		  " group by document_id, document_number, status, action_performedBy, project, package, action_To, Information having count(*) > 1) x, xx_moreammendments   t "+
		" where x.Document_id=t.Document_id and x.document_number= t.document_number and x.status= t.status and  x.action_performedBy= t.action_performedBy and x.project= t.project  and x.package= t.package and  x.action_To= t.action_To and x.Information "+ 
		" order by x.document_id, x.document_number, x.status, x.action_performedBy, x.project, x.package, x.action_To, x.Information";

//System.out.println("query:"+query);
stmt = conn.createStatement();
rs = stmt.executeQuery(query);

      out.write("\r\n");
      out.write("<table border=1 class=\"table table-hover table-bordered\"\r\n");
      out.write("style=\"background-color: #F0FFFF; margin-left:20px;\" id=\"example\" class=\"display nowrap\" cellspacing=\"0\" width=\"100%\">\r\n");
      out.write("<thead>\r\n");
      out.write("<tr class=\"success\">\r\n");
      out.write("\t\t\t<th style=\"padding: 0px 14px 24px 0px;\">Row No.</th>\r\n");
      out.write("\t\t\t<th style=\"padding: 0px 18px 17px 14px; \">Document_Id</th>\r\n");
      out.write("\t\t\t<th width=\"140px\">Doc No</th>\r\n");
      out.write("\t\t\t<th width=\"140px\">Status</th>\r\n");
      out.write("\t\t\t<th width=\"140px\">Action Performed By</th>\r\n");
      out.write("\t\t\t<th width=\"140px\">Project</th>\r\n");
      out.write("\t\t\t<th width=\"140px\">Package</th>\r\n");
      out.write("\t\t\t\t<th width=\"140px\">Action To</th>\r\n");
      out.write("\t\t\t\t\t<th width=\"140px\">Information</th>\r\n");
      out.write("\t\t\t</tr></thead>\r\n");
      out.write("\t\t<tbody>\r\n");
      out.write("\t\t");

			 i = 1;
			while (rs.next()) {

				String col1 = rs.getString(1);
				String col2 = rs.getString(2);
				String col3 = rs.getString(3);
				String col4 = rs.getString(4);
				String col5 = rs.getString(5);
				String col6 = rs.getString(6);
				String col7 = rs.getString(7);
				String col8 = rs.getString(8);
				String col9 = rs.getString(9);
				
						
      out.write("\r\n");
      out.write("\t\t<tr class=\"active\">\r\n");
      out.write("\t\t\t<td >");
      out.print(col1);
      out.write("</td>\r\n");
      out.write("\t\t\t<td >");
      out.print(col2);
      out.write("</td>\r\n");
      out.write("\t\t\t<td >");
      out.print(col3);
      out.write("</td>\r\n");
      out.write("\t\t\t<td >");
      out.print(col4);
      out.write("</td>\r\n");
      out.write("\t\t\t<td >");
      out.print(col5);
      out.write("</td>\r\n");
      out.write("\t\t\t<td >");
      out.print(col6);
      out.write("</td>\r\n");
      out.write("\t\t\t<td >");
      out.print(col7);
      out.write("</td>\r\n");
      out.write("\t\t\t<td >");
      out.print(col8);
      out.write("</td>\r\n");
      out.write("\t\t\t<td >");
      out.print(col9);
      out.write("</td>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t</tr>\r\n");

	i++;
	}
	rs.close();
	stmt.close();

      out.write("\r\n");
      out.write("</tbody>\r\n");
      out.write("</table>\r\n");
      out.write("</td></tr>\r\n");
      out.write("<tr><td colspan=\"2\"><br><br>\r\n");
      out.write("<span style=\"margin-left:250px; color:blue; font-weight:bold; font-size:18px;\">Document Mapping - duplicates (1)</span><br>\r\n");

//	} else if (reportType.equalsIgnoreCase("docs")) {
query="select t.Document_Map_Id, t.document_number, t.Document_Name, t.Document_Type, t.Submitted_by, t.Project_ID, t.Package_ID from ( select  document_number, Document_Name, Document_Type, Submitted_by, Project_ID, Package_ID "+   
		"  from xx_document_mapping group by  document_number, Document_Name, Document_Type, Submitted_by, Project_ID, Package_ID "+
		"  having count(*) > 1) x, xx_document_mapping  t where  x.document_number= t.document_number and x.Document_Name= t.Document_Name and  x.Document_Type= t.Document_Type and x.Submitted_by= t.Submitted_by  and x.Project_ID= t.Project_ID and x.package_ID = t.package_ID "+   
	" order by x.document_number,  x.Document_Name, x.Document_Type, x.Submitted_by, x.Project_ID, x.Package_ID";  

stmt = conn.createStatement();
rs = stmt.executeQuery(query);

      out.write("\r\n");
      out.write("<table border=1 class=\"table table-hover table-bordered\"\r\n");
      out.write("style=\"background-color: #F0FFFF; margin-left:20px;\" id=\"example\" class=\"display nowrap\" cellspacing=\"0\" width=\"100%\">\r\n");
      out.write("<thead>\r\n");
      out.write("<tr class=\"success\">\r\n");
      out.write("\t\t\t<th style=\"padding: 0px 18px 17px 14px; \">Document_Id</th>\r\n");
      out.write("\t\t\t<th width=\"140px\">Doc No</th>\r\n");
      out.write("\t\t\t<th width=\"140px\">Doc Name</th>\r\n");
      out.write("\t\t\t<th width=\"140px\">Doc Type</th>\r\n");
      out.write("\t\t\t<th width=\"140px\">Submitted By (ID)</th>\r\n");
      out.write("\t\t\t<th width=\"140px\">Project Id</th>\r\n");
      out.write("\t\t\t<th width=\"140px\">Package Id</th>\r\n");
      out.write("\t\t\t</tr></thead>\r\n");
      out.write("\t\t<tbody>\r\n");
      out.write("\t\t");

			 i = 1;
			while (rs.next()) {

				String col1 = rs.getString(1);
				String col2 = rs.getString(2);
				String col3 = rs.getString(3);
				String col4 = rs.getString(4);
				String col5 = rs.getString(5);
				String col6 = rs.getString(6);
				String col7 = rs.getString(7);
				
						
      out.write("\r\n");
      out.write("\t\t<tr class=\"active\">\r\n");
      out.write("\t\t\t<td >");
      out.print(col1);
      out.write("</td>\r\n");
      out.write("\t\t\t<td >");
      out.print(col2);
      out.write("</td>\r\n");
      out.write("\t\t\t<td >");
      out.print(col3);
      out.write("</td>\r\n");
      out.write("\t\t\t<td >");
      out.print(col4);
      out.write("</td>\r\n");
      out.write("\t\t\t<td >");
      out.print(col5);
      out.write("</td>\r\n");
      out.write("\t\t\t<td >");
      out.print(col6);
      out.write("</td>\r\n");
      out.write("\t\t\t<td >");
      out.print(col7);
      out.write("</td>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t</tr>\r\n");

	i++;
	}
	rs.close();
	stmt.close();

      out.write("\r\n");
      out.write("</tbody>\r\n");
      out.write("</table>\r\n");
      out.write("</td></tr>\r\n");
      out.write("<tr><td colspan=\"2\"><br><br>\r\n");
      out.write("<span style=\"margin-left:250px; color:blue; font-weight:bold; font-size:18px;\">Document Mapping - duplicates (2)</span><br>\r\n");

//	} else if (reportType.equalsIgnoreCase("docs")) {
		
 query="select t.Document_Map_Id, t.document_number, t.Document_Name, t.Document_Type, t.Submitted_by, t.Project_ID, t.Package_ID from ( select  Document_Name, Project_ID "+   
	   " from xx_document_mapping group by  Document_Name, Project_ID  having count(*) > 1) x, xx_document_mapping  t "+
		"	where   x.Document_Name= t.Document_Name and  x.Project_ID= t.Project_ID order by x.Document_Name,x.Project_ID"; 

stmt = conn.createStatement();
rs = stmt.executeQuery(query);

      out.write("\r\n");
      out.write("<table border=1 class=\"table table-hover table-bordered\"\r\n");
      out.write("style=\"background-color: #F0FFFF; margin-left:20px;\" id=\"example\" class=\"display nowrap\" cellspacing=\"0\" width=\"100%\">\r\n");
      out.write("<thead>\r\n");
      out.write("<tr class=\"success\">\r\n");
      out.write("\t\t\t<th style=\"padding: 0px 18px 17px 14px; \">Document_Id</th>\r\n");
      out.write("\t\t\t<th width=\"140px\">Doc No</th>\r\n");
      out.write("\t\t\t<th width=\"140px\">Doc Name</th>\r\n");
      out.write("\t\t\t<th width=\"140px\">Doc Type</th>\r\n");
      out.write("\t\t\t<th width=\"140px\">Submitted By (ID)</th>\r\n");
      out.write("\t\t\t<th width=\"140px\">Project Id</th>\r\n");
      out.write("\t\t\t<th width=\"140px\">Package Id</th>\r\n");
      out.write("\t\t\t</tr></thead>\r\n");
      out.write("\t\t<tbody>\r\n");
      out.write("\t\t");

			 i = 1;
			while (rs.next()) {

				String col1 = rs.getString(1);
				String col2 = rs.getString(2);
				String col3 = rs.getString(3);
				String col4 = rs.getString(4);
				String col5 = rs.getString(5);
				String col6 = rs.getString(6);
				String col7 = rs.getString(7);
						
						
      out.write("\r\n");
      out.write("\t\t<tr class=\"active\">\r\n");
      out.write("\t\t\t<td >");
      out.print(col1);
      out.write("</td>\r\n");
      out.write("\t\t\t<td >");
      out.print(col2);
      out.write("</td>\r\n");
      out.write("\t\t\t<td >");
      out.print(col3);
      out.write("</td>\r\n");
      out.write("\t\t\t<td >");
      out.print(col4);
      out.write("</td>\r\n");
      out.write("\t\t\t<td >");
      out.print(col5);
      out.write("</td>\r\n");
      out.write("\t\t\t<td >");
      out.print(col6);
      out.write("</td>\r\n");
      out.write("\t\t\t<td >");
      out.print(col7);
      out.write("</td>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t</tr>\r\n");

	i++;
	}
	rs.close();
	stmt.close();

      out.write("\r\n");
      out.write("</tbody>\r\n");
      out.write("</table>\r\n");
      out.write("</td></tr>\r\n");
      out.write("<tr><td colspan=\"2\"><br><br>\r\n");
      out.write("<span style=\"margin-left:250px; color:blue; font-weight:bold; font-size:18px;\">Portal Documents Summary</span><br>\r\n");

//	} else if (reportType.equalsIgnoreCase("docs")) {
query="select count(if(Document_Status='Finally Approved' and ShowInReport='Y',1,null)) as Nos_appd, count(if(Document_Status='pending' and forwarded='yes',1,null)) as Nos_pending, count(if(forwarded='No' or forwarded is null,1,null)) as Nos_not_forwd, count(if(Document_Status='Finally Approved' and ShowInReport='N',1,null)) as Nos_hidden from xx_document_mapping";
//"select DATE_format(Last_login,'%d/%m/%Y') as dd, Count(if (Type='MOR',1, null)) AS MOR_Users_logged, Count(if (Type='MOR' and Designation_Id=75,1, null)) AS DRMs_logged,Count(if (Type='MOR' and Designation_Id=115,1, null)) AS GMs_logged, Count(if (Type='RVNL',1, null)) AS RVNL_Users_logged, Count(if (Type='RVNL' and (Role='LocalUser' or Role='System Administrator'),1, null)) AS RVNL_Admins_logged, count(User_id) as Total_Users_logged from xx_user_master where Last_login between DATE_ADD(CURDATE(), INTERVAL -15 day) and now()  group by DATE_format(Last_login,'%d/%m/%Y') order by Last_login";		
//System.out.println("query:"+query);
stmt = conn.createStatement();
rs = stmt.executeQuery(query);

      out.write("\r\n");
      out.write("<table border=1 class=\"table table-hover table-bordered\"\r\n");
      out.write("style=\"background-color: #F0FFFF; margin-left:20px;\" id=\"example\" class=\"display nowrap\" cellspacing=\"0\" width=\"100%\">\r\n");
      out.write("<thead>\r\n");
      out.write("<tr class=\"success\">\r\n");
      out.write("\t<th >Nos. not yet forwarded</th>\r\n");
      out.write("\t<th>Nos. Pending</th>\r\n");
      out.write("\t<th>Nos. Finally Approved</th>\r\n");
      out.write("\t<th>Nos. Hidden</th>\r\n");
      out.write("\t</tr></thead>\r\n");
      out.write("<tbody>\r\n");

	 i = 1;
	while (rs.next()) {

		String col1 = rs.getString(1);
		String col2 = rs.getString(2);
		String col3 = rs.getString(3);
		String col4 = rs.getString(4);
		
      out.write("\r\n");
      out.write("<tr class=\"active\">\r\n");
      out.write("\t<td>");
      out.print(col3);
      out.write("</td>\r\n");
      out.write("\t<td>");
      out.print(col2);
      out.write("</td>\r\n");
      out.write("\t<td>");
      out.print(col1);
      out.write("</td>\r\n");
      out.write("\t<td>");
      out.print(col4);
      out.write("</td>\r\n");
      out.write("\t</tr>\r\n");

	i++;
	}
	rs.close();
	stmt.close();

      out.write("\r\n");
      out.write("</tbody>\r\n");
      out.write("</table>\r\n");
      out.write("</td></tr>\r\n");
      out.write("\r\n");
      out.write("<tr><td colspan=\"2\"><br><br>\r\n");

 query="Select count(if(n1>1,1,null)) as nos_moved, count(if(n1=1,1,null)) as nos_not_moved, count(document_id) as nos_total from (select document_id, count(*) as n1 from xx_approval_workflow  group by Document_id) aa";
stmt = conn.createStatement();
rs = stmt.executeQuery(query);
	 i = 1;
	while (rs.next()) {

		 nos_moved_rly = rs.getString(1);
		String nos_not_moved_rly = rs.getString(2);
		String nos_total_appl_wf = rs.getString(3);
	i++;
	}
	rs.close();
	stmt.close();

      out.write("\r\n");
      out.write("<span style=\"margin-left:150px; color:blue; font-weight:bold; font-size:18px;\">Document Movement Summary (Overall including hidden documents)</span><br>\r\n");

//	} else if (reportType.equalsIgnoreCase("docs")) {
		
 query="Select count(if(n1>2,1,null)) as nos_moved, count(if(n1=2,1,null)) as nos_not_moved, count(document_id) as nos_total from (select document_id, count(*) as n1 from xx_record_actions  group by Document_id) aa";
stmt = conn.createStatement();
rs = stmt.executeQuery(query);

      out.write("\r\n");
      out.write("<table border=1 class=\"table table-hover table-bordered\"\r\n");
      out.write("style=\"background-color: #F0FFFF; margin-left:20px;\" id=\"example\" class=\"display nowrap\" cellspacing=\"0\" width=\"100%\">\r\n");
      out.write("<thead>\r\n");
      out.write("<tr class=\"success\">\r\n");
      out.write("\t<th style=\"padding: 0px 14px 24px 0px;\">Nos. Moved (Total)</th>\r\n");
      out.write("\t<th style=\"padding: 0px 14px 24px 0px;\">Nos. Moved (Within Rly)</th>\r\n");
      out.write("\t<th style=\"padding: 0px 14px 24px 0px;\">Nos. Moved (RVNL to Rly or vice versa)</th>\r\n");
      out.write("\t<th style=\"padding: 0px 18px 17px 14px; \">Nos. not moved </th>\r\n");
      out.write("\t<th style=\"padding: 0px 18px 17px 14px; \">Total no. of Docs</th>\r\n");
      out.write("\t</tr></thead>\r\n");
      out.write("<tbody>\r\n");

	 i = 1;
	while (rs.next()) {

		String col1 = rs.getString(1);
		String col2 = rs.getString(2);
		String col3 = rs.getString(3);
	
				
      out.write("\r\n");
      out.write("<tr class=\"active\">\r\n");
      out.write("\t\t<td >");
      out.print(col1);
      out.write("</td>\r\n");
      out.write("\t\t<td >");
      out.print(nos_moved_rly);
      out.write("</td>\r\n");
      out.write("\t\t<td >");
      out.print(Integer.parseInt(col1)-Integer.parseInt(nos_moved_rly));
      out.write("</td>\r\n");
      out.write("\t\t<td >");
      out.print(col2);
      out.write("</td>\r\n");
      out.write("\t\t<td >");
      out.print(col3);
      out.write("</td>\r\n");
      out.write("\t</tr>\r\n");

	i++;
	}
	rs.close();
	stmt.close();

      out.write("\r\n");
      out.write("</tbody>\r\n");
      out.write("</table>\r\n");
      out.write("</td>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr><td><br><br>\r\n");
      out.write("<span style=\"margin-left:250px; color:blue; font-weight:bold; font-size:18px;\">Project Documents Movement Summary for last 15 days</span><br>\r\n");

//	} else if (reportType.equalsIgnoreCase("docs")) {
query="select date(Real_ActionDate) as Date1, count(if(ActionPerformed='Submitted',1,null)) as Nos_Submitted, count(if(ActionPerformed='Resubmitted',1,null)) as Nos_Resubmitted, count(if(ActionPerformed='Pulled back by RVNL',1,null)) as Nos_pulledBack, count(if(ActionPerformed='Forward With Approval',1,null)) as Nos_Fwd_appd, count(if(ActionPerformed='Returned to RVNL with approval',1,null)) as Nos_retnd_appd, count(if(ActionPerformed='Returned to RVNL',1,null)) as Nos_retnd_unappd, count(if(ActionPerformed='Forward without Approval',1,null)) as Nos_Fwd_unappd, count(if(ActionPerformed='Finally Approved',1,null)) as Nos_Finally_Appd from xx_record_actions where date(Real_ActionDate) between  DATE_ADD(CURDATE(), INTERVAL -15 day) and CURDATE()  group by date(Real_ActionDate)";
//"select DATE_format(Last_login,'%d/%m/%Y') as dd, Count(if (Type='MOR',1, null)) AS MOR_Users_logged, Count(if (Type='MOR' and Designation_Id=75,1, null)) AS DRMs_logged,Count(if (Type='MOR' and Designation_Id=115,1, null)) AS GMs_logged, Count(if (Type='RVNL',1, null)) AS RVNL_Users_logged, Count(if (Type='RVNL' and (Role='LocalUser' or Role='System Administrator'),1, null)) AS RVNL_Admins_logged, count(User_id) as Total_Users_logged from xx_user_master where Last_login between DATE_ADD(CURDATE(), INTERVAL -15 day) and now()  group by DATE_format(Last_login,'%d/%m/%Y') order by Last_login";		
//System.out.println("query:"+query);
stmt = conn.createStatement();
rs = stmt.executeQuery(query);

      out.write("\r\n");
      out.write("<table border=1 class=\"table table-hover table-bordered\"\r\n");
      out.write("style=\"background-color: #F0FFFF; margin-left:20px;\" id=\"example\" class=\"display nowrap\" cellspacing=\"0\" width=\"100%\">\r\n");
      out.write("<thead>\r\n");
      out.write("<tr class=\"success\">\r\n");
      out.write("\t<th width=\"100px\" >Date</th>\r\n");
      out.write("\t<th >Nos. Submitted (RVNL)</th>\r\n");
      out.write("\t<th>Nos. Resubmitted (RVNL)</th>\r\n");
      out.write("\t<th>Nos. Pulled Back (RVNL)</th>\r\n");
      out.write("\t<th>Nos. Finally Approved/ Closed (RVNL)</th>\r\n");
      out.write("\t<th>Nos. Forwarded with approval (Rly)</th>\r\n");
      out.write("\t<th>Nos. Returned to RVNL with approval (Rly)</th>\r\n");
      out.write("\t<th>Nos. Returned to RVNL without approval (Rly)</th>\r\n");
      out.write("\t<th>Nos. Forwarded without approval (Rly)</th>\r\n");
      out.write("\t</tr></thead>\r\n");
      out.write("<tbody>\r\n");

	 i = 1;
	while (rs.next()) {

		String col1 = rs.getString(1);
		String col2 = rs.getString(2);
		String col3 = rs.getString(3);
		String col4 = rs.getString(4);
		String col5 = rs.getString(5);
		String col6 = rs.getString(6);
		String col7 = rs.getString(7);
		String col8 = rs.getString(8);
		String col9 = rs.getString(9);
		
      out.write("\r\n");
      out.write("<tr class=\"active\">\r\n");
      out.write("\t<td>");
      out.print(col1);
      out.write("</td>\r\n");
      out.write("\t<td>");
      out.print(col2);
      out.write("</td>\r\n");
      out.write("\t<td>");
      out.print(col3);
      out.write("</td>\r\n");
      out.write("\t<td>");
      out.print(col4);
      out.write("</td>\r\n");
      out.write("\t<td>");
      out.print(col9);
      out.write("</td>\r\n");
      out.write("\t<td>");
      out.print(col5);
      out.write("</td>\r\n");
      out.write("\t<td>");
      out.print(col6);
      out.write("</td>\r\n");
      out.write("\t<td>");
      out.print(col7);
      out.write("</td>\r\n");
      out.write("\t<td>");
      out.print(col8);
      out.write("</td>\r\n");
      out.write("\t</tr>\r\n");

	i++;
	}
	rs.close();
	stmt.close();

      out.write("\r\n");
      out.write("</tbody>\r\n");
      out.write("</table>\r\n");
      out.write("</td></tr>\r\n");
      out.write("<tr><td><br><br>\r\n");
      out.write("<span style=\"margin-left:250px; color:blue; font-weight:bold; font-size:18px;\">Zone and Division wise Project Documents Movement Summary for last 15 days</span><br>\r\n");

//	} else if (reportType.equalsIgnoreCase("docs")) {
query="select zone,  division, PIU_of_RVNL, count(if(ActionPerformed='Submitted',1,null)) as Nos_Submitted, count(if(ActionPerformed='Resubmitted',1,null)) as Nos_Resubmitted, count(if(ActionPerformed='Pulled back by RVNL',1,null)) as Nos_pulledBack, count(if(ActionPerformed='Finally Approved',1,null)) as Nos_Finally_Appd, count(if(ActionPerformed='Forward With Approval',1,null)) as Nos_Fwd_appd, count(if(ActionPerformed='Returned to RVNL with approval',1,null)) as Nos_retnd_appd, count(if(ActionPerformed='Returned to RVNL',1,null)) as Nos_retnd_unappd, count(if(ActionPerformed='Forward without Approval',1,null)) as Nos_Fwd_unappd from (select a.*, b.zone, c.PIU_of_RVNL, if(u.Type='MOR',if(u.division_ID=86,'Headquarters',d.division_name),b.Division) as division from xx_record_actions a left join xx_document_mapping b on a.Document_id=b.Document_Map_ID left join xx_user_master u on a.ActionPerformedBy=u.User_name left join xx_divisions_master d on u.Division_ID=d.division_id left join xx_projectattributes_master c on c.Project_ID = b.Project_ID  where date(a.Real_ActionDate) between  DATE_ADD(CURDATE(), INTERVAL -15 day) and CURDATE()) as pkq group by zone, division, PIU_of_RVNL";
//System.out.println("query:"+query);
stmt = conn.createStatement();
rs = stmt.executeQuery(query);

      out.write("\r\n");
      out.write("<table border=1 class=\"table table-hover table-bordered\"\r\n");
      out.write("style=\"background-color: #F0FFFF; margin-left:20px;\" id=\"example\" class=\"display nowrap\" cellspacing=\"0\" width=\"100%\">\r\n");
      out.write("<thead>\r\n");
      out.write("<tr class=\"success\">\r\n");
      out.write("\t<th width=\"100px\" >Zone</th>\r\n");
      out.write("\t<th width=\"100px\" >Division</th>\r\n");
      out.write("\t<th width=\"100px\" >PIU</th>\r\n");
      out.write("\t<th >Nos. Submitted (RVNL)</th>\r\n");
      out.write("\t<th>Nos. Resubmitted (RVNL)</th>\r\n");
      out.write("\t<th>Nos. Pulled Back (RVNL)</th>\r\n");
      out.write("\t<th>Nos. Finally Approved/ Closed (RVNL)</th>\r\n");
      out.write("\t<th>Nos. Forwarded with approval (Rly)</th>\r\n");
      out.write("\t<th>Nos. Returned to RVNL with approval (Rly)</th>\r\n");
      out.write("\t<th>Nos. Returned to RVNL without approval (Rly)</th>\r\n");
      out.write("\t<th>Nos. Forwarded without approval (Rly)</th>\r\n");
      out.write("\t</tr></thead>\r\n");
      out.write("<tbody>\r\n");

	 i = 1;
	while (rs.next()) {

		String col1 = rs.getString(1);
		String col2 = rs.getString(2);
		String col3 = rs.getString(3);
		String col4 = rs.getString(4);
		String col5 = rs.getString(5);
		String col6 = rs.getString(6);
		String col7 = rs.getString(7);
		String col8 = rs.getString(8);
		String col9 = rs.getString(9);
		String col10 = rs.getString(10);
		String col11 = rs.getString(11);
		
      out.write("\r\n");
      out.write("<tr class=\"active\">\r\n");
      out.write("\t<td>");
      out.print(col1);
      out.write("</td>\r\n");
      out.write("\t<td>");
      out.print(col2);
      out.write("</td>\r\n");
      out.write("\t<td>");
      out.print(col3);
      out.write("</td>\r\n");
      out.write("\t<td>");
      out.print(col4);
      out.write("</td>\r\n");
      out.write("\t<td>");
      out.print(col5);
      out.write("</td>\r\n");
      out.write("\t<td>");
      out.print(col6);
      out.write("</td>\r\n");
      out.write("\t<td>");
      out.print(col7);
      out.write("</td>\r\n");
      out.write("\t<td>");
      out.print(col8);
      out.write("</td>\r\n");
      out.write("\t<td>");
      out.print(col9);
      out.write("</td>\r\n");
      out.write("\t<td>");
      out.print(col10);
      out.write("</td>\r\n");
      out.write("\t<td>");
      out.print(col11);
      out.write("</td>\r\n");
      out.write("\t</tr>\r\n");

	i++;
	}
	rs.close();
	stmt.close();

      out.write("\r\n");
      out.write("</tbody>\r\n");
      out.write("</table>\r\n");
      out.write("</td></tr>\r\n");
      out.write("\r\n");
      out.write("<tr><td><br><br>\r\n");
      out.write("<span style=\"margin-left:250px; color:blue; font-weight:bold; font-size:18px;\">Hidden Documents</span><br>\r\n");

//	} else if (reportType.equalsIgnoreCase("docs")) {
query="select b.PIU_of_RVNL, c.User_name, b.Project, d.package_name, a.zone,a.Division, a.Document_Map_ID, a.Document_Type,a.Document_Number, a.Document_Name, a.Forwarded, a.Document_Status, a.Date_of_Submission, a.DateFinalize, a.ShowInReport  from xx_document_mapping a, xx_projectattributes_master b, xx_user_master c, xx_packages_project d where a.Project_ID = b.Project_ID and a.Submitted_by=c.User_ID and a.Package_ID=d.package_id and a.ShowInReport='N'";
//System.out.println("query:"+query);
stmt = conn.createStatement();
rs = stmt.executeQuery(query);

      out.write("\r\n");
      out.write("<table border=1 class=\"table table-hover table-bordered\"\r\n");
      out.write("style=\"background-color: #F0FFFF; margin-left:20px;\" id=\"example\" class=\"display nowrap\" cellspacing=\"0\" width=\"100%\">\r\n");
      out.write("<thead>\r\n");
      out.write("<tr class=\"success\">\r\n");
      out.write("\t<th >SN</th>\r\n");
      out.write("\t<th >PIU</th>\r\n");
      out.write("\t<th >Submitted By</th>\r\n");
      out.write("\t<th>Project</th>\r\n");
      out.write("\t<th>Package</th>\r\n");
      out.write("\t<th>Zone</th>\r\n");
      out.write("\t<th>Division</th>\r\n");
      out.write("\t<th>Document Id</th>\r\n");
      out.write("\t<th>Doc Type</th>\r\n");
      out.write("\t<th>Doc Number</th>\r\n");
      out.write("\t<th>Doc Name</th>\r\n");
      out.write("\t<th>Forwarded</th>\r\n");
      out.write("\t<th>Status</th>\r\n");
      out.write("\t<th>Submission Date</th>\r\n");
      out.write("\t<th>Finalization Date</th>\r\n");
      out.write("\t<th>Show in Report</th>\r\n");
      out.write("\t</tr></thead>\r\n");
      out.write("<tbody>\r\n");

	 i = 1;
	while (rs.next()) {

		String col1 = rs.getString(1);
		String col2 = rs.getString(2);
		String col3 = rs.getString(3);
		String col4 = rs.getString(4);
		String col5 = rs.getString(5);
		String col6 = rs.getString(6);
		String col7 = rs.getString(7);
		String col8 = rs.getString(8);
		String col9 = rs.getString(9);
		String col10 = rs.getString(10);
		String col11 = rs.getString(11);
		String col12 = rs.getString(12);
		String col13 = rs.getString(13);
		String col14 = rs.getString(14);
		String col15 = rs.getString(15);
		
		
      out.write("\r\n");
      out.write("<tr class=\"active\">\r\n");
      out.write("\t<td>");
      out.print(i);
      out.write("</td>\r\n");
      out.write("\t<td>");
      out.print(col1);
      out.write("</td>\r\n");
      out.write("\t<td>");
      out.print(col2);
      out.write("</td>\r\n");
      out.write("\t<td>");
      out.print(col3);
      out.write("</td>\r\n");
      out.write("\t<td>");
      out.print(col4);
      out.write("</td>\r\n");
      out.write("\t<td>");
      out.print(col5);
      out.write("</td>\r\n");
      out.write("\t<td>");
      out.print(col6);
      out.write("</td>\r\n");
      out.write("\t<td>");
      out.print(col7);
      out.write("</td>\r\n");
      out.write("\t<td>");
      out.print(col8);
      out.write("</td>\r\n");
      out.write("\t<td>");
      out.print(col9);
      out.write("</td>\r\n");
      out.write("\t<td>");
      out.print(col10);
      out.write("</td>\r\n");
      out.write("\t<td>");
      out.print(col11);
      out.write("</td>\r\n");
      out.write("\t<td>");
      out.print(col12);
      out.write("</td>\r\n");
      out.write("\t<td>");
      out.print(col13);
      out.write("</td>\r\n");
      out.write("\t<td>");
      out.print(col14);
      out.write("</td>\r\n");
      out.write("\t<td>");
      out.print(col15);
      out.write("</td>\r\n");
      out.write("\t</tr>\r\n");

	i++;
	}
	rs.close();
	stmt.close();

      out.write("\r\n");
      out.write("</tbody>\r\n");
      out.write("</table>\r\n");
      out.write("</td></tr>\r\n");
      out.write("</table>\r\n");
      out.write("<br><br>\r\n");

	}catch(Exception e){
		
		e.printStackTrace();
	}  
	//}
	

      out.write("\r\n");
      out.write("\t\t<input type=\"button\" value=\"close\" class=\"btn btn-primary\" onclick=\"closeMe();\" style=\"margin-left: 50%;\"> \r\n");
      out.write("\t\r\n");
      out.write("\t");

		if (exportToExcel == null) {
	
	
		}
	
      out.write("\r\n");
      out.write("\t<br>\r\n");
      out.write("\t<!-- <a href=\"#\" onclick=\"javascript:window.print();\">Print this page</a> -->\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
