/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.86
 * Generated at: 2018-10-05 06:08:36 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.Admin;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import javax.servlet.*;
import javax.servlet.http.*;
import javax.naming.*;
import java.sql.*;
import javax.sql.*;
import javax.naming.*;
import java.sql.*;
import javax.sql.*;
import java.util.*;
import java.util.Date;
import java.text.SimpleDateFormat;
import java.net.URLEncoder;

public final class pullbackdocumentlist_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/sessionCheck1.jspf", Long.valueOf(1524567358000L));
    _jspx_dependants.put("/Admin/sessionCheck.jsp", Long.valueOf(1524567356000L));
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

 
int timeout = session.getMaxInactiveInterval();
response.setHeader("Refresh", timeout + "; URL = admn_login.jsp");

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
 

int timeout1 = session.getMaxInactiveInterval();
response.setHeader("Refresh", timeout1 + "; URL = admn_login.jsp");

if(((String)session.getAttribute("user_name"))==null)
       {
           
	response.sendRedirect("admn_login.jsp");
           
       }
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\r\n");
      out.write("<title>Approval WorkFlow</title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"//code.jquery.com/ui/1.11.4/themes/blitzer/jquery-ui.css\"/>\r\n");
      out.write("<link href=\"resources/bootstrap/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n");
      out.write("<link href=\"resources/bootstrap/css/bootstrap.css\" rel=\"stylesheet\" />\r\n");
      out.write("<script type=\"text/javascript\" src=\"resources/JS/backButton.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"resources/JS/validate230.js\"></script>\r\n");
      out.write("    <script type=\"text/javascript\" src=\"https://code.jquery.com/jquery-1.12.4.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"https://code.jquery.com/ui/1.12.1/jquery-ui.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<head><style>tr:hover td {background:#D3D3D3;}</style>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<script>\r\n");
      out.write("var $j = jQuery.noConflict();\r\n");
      out.write("$j(document).ready(function() {\r\n");
      out.write("    $j( \".mydatepickers\" ).datepicker({\r\n");
      out.write("\t\tdateFormat : 'dd/mm/yy', changeYear: true\r\n");
      out.write("\t}).val();\r\n");
      out.write("  });\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\tfunction frezedate(id, startDate) {\r\n");
      out.write("\t\tvar $j = jQuery.noConflict();\r\n");
      out.write("\r\n");
      out.write("\t\tvar idof = id;\r\n");
      out.write("\t\t//alert(startDate);\r\n");
      out.write("\t\tvar chunks = startDate.split('-');\r\n");
      out.write("\t\tvar formattedDate = [ chunks[2], chunks[1], chunks[0] ].join(\"/\");\r\n");
      out.write("\t\t//alert(formattedDate);\r\n");
      out.write("\t\t$j(\"#\" + idof).datepicker({\r\n");
      out.write("\r\n");
      out.write("\t\t\tdateFormat : 'dd/mm/yy',\r\n");
      out.write("\t\t\tminDate : formattedDate,\r\n");
      out.write("\t\t\tmaxDate : '0'\r\n");
      out.write("\r\n");
      out.write("\t\t}).datepicker(\"show\").val();\r\n");
      out.write("\t\t//var today = new Date(); var dd = today.getDate(); \r\n");
      out.write("\r\n");
      out.write("\t}\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<form id=\"documentpullbacklist\">\r\n");
      out.write("\t");

	String packageid=request.getParameter("packageid");
	
	String userid=request.getParameter("userid");
	String rdstatus = (String) session.getAttribute("RealdateStatus");
	//System.out.print("Real Date Status"+rdstatus);
	
      out.write('\r');
      out.write('\n');
      out.write('	');
      //  c:if
      org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
      boolean _jspx_th_c_005fif_005f0_reused = false;
      try {
        _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
        _jspx_th_c_005fif_005f0.setParent(null);
        // /Admin/pullbackdocumentlist.jsp(69,1) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${param.Stage == null}", java.lang.Boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false)).booleanValue());
        int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
        if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write('\r');
            out.write('\n');
            out.write('	');

		Context initCtx = new InitialContext();
			Context envCtx = (Context) initCtx.lookup("java:comp/env");
			DataSource ds = (DataSource) envCtx.lookup("jdbc/MySQLDB");
			Connection conn = null;
			conn = ds.getConnection();
			PreparedStatement ps = null, ps2 = null, hierPS = null;
			ResultSet rs = null, rs2 = null, hierRS = null;
			String Document_Map_Id=null,Document_Number=null,Document_Name=null,Document_Type=null,Revision_Id=null,Division=null,Division_HierarchyId=null;
			Date Date_of_Submission=null,DateFinalize=null;
			String Submitted_by=null,Project_Id=null,Package_Id=null,HierarchyType=null,Zone_HierarchyId=null,Document_Status=null,DateFinalizer=null,Forwarded=null,Status=null;
			SimpleDateFormat df = new SimpleDateFormat("dd/MM/yyyy");
			String rd = df.format(new Date());		
			//System.out.print(rd+"Real Date Status"+rdstatus);
			
            out.write("\r\n");
            out.write("\t\r\n");
            out.write("\t\t\t<table class=\"table table-hover table-bordered\"\r\n");
            out.write("\t\t\tstyle=\"background-color: #F0FFFF\">\r\n");
            out.write("\t\t\t<tr class=\"success\">\r\n");
            out.write("\t\t\t\t<th>Select</th>\r\n");
            out.write("\t\t\t\t<th><b>PullBack Date</b></th>\r\n");
            out.write("\t\t\t\t<th><b>SNo</b></th>\r\n");
            out.write("\t\t\t\t<!-- <td><b>Project Name</b></td>\r\n");
            out.write("\t\t\t\t<td><b>Package Name</b></td> -->\r\n");
            out.write("\t\t\t\t<th><b>Document Type</b></th>\r\n");
            out.write("\t\t\t\t<th><b>Document Number</b></th>\r\n");
            out.write("\t\t\t\t<th><b>Document Name</b></th>\r\n");
            out.write("\t\t\t\t<th><b>Pending with</b></th>\r\n");
            out.write("\t\t\t\t<!-- <td><b></b></td-->\r\n");
            out.write("\t\t\t\t<th><b>Pending Since</b></th>\r\n");
            out.write("\t\t\t\t<th><b>Log Details</b></th>\r\n");
            out.write("\t\t\t\t\r\n");
            out.write("\t\t\t\t\r\n");
            out.write("\t\t\t\t\r\n");
            out.write("\t\t\t\t<th></th>\r\n");
            out.write("\t\t\t</tr>\r\n");
 
//String userid=null;

String sql1 = "select * from xx_document_mapping where Package_ID='"+packageid+"' And Forwarded='Yes' and Submitted_by='"+userid+"' order by Document_Type";

 ps2 = conn.prepareStatement(sql1);
 rs2 = ps2.executeQuery();
String Document_Map_Idfrmpac=null;
int count=0;
while(rs2.next())
{
	Document_Map_Idfrmpac = rs2.getString("Document_Map_ID");
	
	String select21 = "select * from xx_moreammendments where document_id ='"+Document_Map_Idfrmpac+"'";

	Statement st=null;

	int flag=0;
	st=(Statement) conn.createStatement();
	ResultSet rs222 = st.executeQuery(select21);
	if(rs222.next()){
		flag=1;
		
		
	}
	if(flag==1)
	{
		String sql2="select * from xx_moreammendments where document_id='"+Document_Map_Idfrmpac+"' and status!='return'";
		PreparedStatement ps31 = conn.prepareStatement(sql2);
		ResultSet rs31 = ps31.executeQuery();
		String Document_Map_Idfrmamend=null;
		while(rs31.next())
		{
			Document_Map_Idfrmamend=rs31.getString("document_id");

	
	

	
	String sql3="select * from xx_document_mapping where Document_Map_ID='"+Document_Map_Idfrmamend+"' and Document_status='Pending' order by Document_Type";
	
	PreparedStatement ps4 = conn.prepareStatement(sql3);
	 rs = ps4.executeQuery();  
	 
while(rs.next())
{
	Document_Map_Id = rs.getString("Document_Map_ID");
	Document_Number = rs.getString("Document_Number");
	Document_Name = rs.getString("Document_Name");
	String Document_Type12 = rs.getString("Document_Type");
	Document_Type = URLEncoder.encode(Document_Type12, "UTF-8");
	Revision_Id = rs.getString("Revision_ID");
	Date_of_Submission=rs.getDate("Date_of_Submission");

	Submitted_by = rs.getString("Submitted_by");
	Project_Id = rs.getString("Project_ID");
	Package_Id = rs.getString("Package_ID");
	HierarchyType = rs.getString("HierarchyType");
	Zone_HierarchyId = rs.getString("Zone_HierarchyId");
	Division_HierarchyId=rs.getString("Division_HierarchyId");
	Document_Status = rs.getString("Document_Status");
	DateFinalize = rs.getDate("DateFinalize");
	Division=rs.getString("Division");

	Forwarded = rs.getString("Forwarded");
	Status=rs.getString("Status");
	String Package_name=null,project_name=null;
	String sql112="select * from xx_packages_project where package_id='"+Package_Id+"'";
	PreparedStatement psdat1 = conn.prepareStatement(sql112);
	ResultSet rsdat1 = psdat1.executeQuery();
	
	while(rsdat1.next()){
		
		 Package_name=rsdat1.getString("Package_name");										
	}
	String piuq = "select Project from xx_projectattributes_master where project_id='"
			+ Project_Id + "' order by Project";
	
	PreparedStatement ps3 = conn.prepareStatement(piuq);
	ResultSet rs3 = ps3.executeQuery();
	while (rs3.next()) {

		
		project_name = rs3.getString("Project");
		
	}
	
	Date frezedate=null;String pendingwith=null;
	String sql12="select * from xx_record_actions where Document_id='"+Document_Map_Id+"'";
	PreparedStatement psdat = conn.prepareStatement(sql12);
	ResultSet rsdat = psdat.executeQuery();
	while(rsdat.next()){
		frezedate=rsdat.getDate("CurrentDate");
		pendingwith=rsdat.getString("ActionPerformedBy");
	}
	String frezestr = new SimpleDateFormat("dd/MM/yyyy")
	.format(frezedate);	
	
	 count=count+1;
 
            out.write("\r\n");
            out.write("<tr>\r\n");
            out.write("\t\t\t\t\t\t<td><INPUT TYPE=\"radio\" NAME=\"pullbackrec\" VALUE=\"");
            out.print(Document_Map_Id);
            out.write("\"/></td>\t\r\n");
            out.write("\t");

//	System.out.print("Real Date Status"+rdstatus+rd);
if (rdstatus.equalsIgnoreCase("0")) { 

            out.write("\t\t\t\t\t\t\r\n");
            out.write("\t\t\t\t\t\t<td><input type=\"text\" id=\"ApprovalDate");
            out.print(Document_Map_Id);
            out.write("\"\r\n");
            out.write("\t\t\t\t\t\t\t\tname=\"ApprovalDate");
            out.print(Document_Map_Id);
            out.write("\"\r\n");
            out.write("\t\t\t\t\t\t\t\tonclick=\"frezedate('ApprovalDate");
            out.print(Document_Map_Id);
            out.write('\'');
            out.write(',');
            out.write('\'');
            out.print(frezedate);
            out.write("')\" readonly=\"true\" \r\n");
            out.write("\t\t\t\t\t\t\t\tstyle=\"width: 150px\"></td>\r\n");

} else {

            out.write("\r\n");
            out.write("<td><input type=\"text\" id=\"ApprovalDate");
            out.print(Document_Map_Id);
            out.write("\"\r\n");
            out.write("\t\t\t\t\t\t\tname=\"ApprovalDate");
            out.print(Document_Map_Id);
            out.write("\"  readonly=\"true\"\r\n");
            out.write("\t\t\t\t\t\t\tstyle=\"width: 150px; background-color: lightgray;\" value=");
            out.print(rd );
            out.write("></td>\r\n");

}		

            out.write("\t\t\t\t\t\t\r\n");
            out.write("\t\t\t\t\t\t\t\t\r\n");
            out.write("\t\t\t\t\t\t<td>");
            out.print(count);
            out.write("</td>\r\n");
            out.write("\t\t\t\t\t\t");
            out.write("\r\n");
            out.write("\t\t\t\t\t\t\r\n");
            out.write("\t\t\t\t\t\t<td>");
            out.print(Document_Type12);
            out.write("</td>\r\n");
            out.write("\t\t\t\t\t\t<td>");
            out.print(Document_Number );
            out.write("</td>\r\n");
            out.write("\t\t\t\t\t\t<td>");
            out.print(Document_Name);
            out.write("</td>\t\t\t\t\t\t\r\n");
            out.write("\t\t\t\t\t\t");
            out.write("\r\n");
            out.write("\t\t\t\t\t\t<!-- <td>");
            out.print(Project_Id);
            out.write("</td><td>");
            out.print(Package_Id);
            out.write("</td> -->\r\n");
            out.write("\t\t\t\t\t\t<td>");
            out.print(pendingwith);
            out.write("</td>\r\n");
            out.write("\t\t\t\t\t\t<td>");
            out.print(frezestr);
            out.write("</td>\r\n");
            out.write("\t\t\t\t\t\t<td><a\r\n");
            out.write("\t\t\t\thref=\"recordReport.jsp?Document_Type=");
            out.print(Document_Type);
            out.write("&doc_id=");
            out.print(Document_Map_Id);
            out.write("\" target=\"_blank\">\r\n");
            out.write("\t\t\t\t\tLog Details </a>\r\n");
            out.write("\t\t\t</td>\r\n");
            out.write("\t\t\t\t\t\t");
            out.write("\r\n");
            out.write("\t\t\t\t\t\t\r\n");
            out.write("\t\t\t\t\t\t\r\n");
            out.write("\t\t\t\t\t\t\t");
            out.write('\r');
            out.write('\n');
            out.write('	');
}

		} }else{
			
			String sql3="select * from xx_document_mapping where Document_Map_ID='"+Document_Map_Idfrmpac+"'";
			
			PreparedStatement ps4 = conn.prepareStatement(sql3);
			 rs = ps4.executeQuery();

		while(rs.next())
		{int count1=0;
			
			Document_Map_Id = rs.getString("Document_Map_ID");
			Document_Number = rs.getString("Document_Number");
			Document_Name = rs.getString("Document_Name");
			String Document_Type3 = rs.getString("Document_Type");
			Document_Type = URLEncoder.encode(Document_Type3, "UTF-8");
			Revision_Id = rs.getString("Revision_ID");
			Date_of_Submission=rs.getDate("Date_of_Submission");

			Submitted_by = rs.getString("Submitted_by");
			Project_Id = rs.getString("Project_ID");
			Package_Id = rs.getString("Package_ID");
			HierarchyType = rs.getString("HierarchyType");
			Zone_HierarchyId = rs.getString("Zone_HierarchyId");
			Division_HierarchyId=rs.getString("Division_HierarchyId");
			Document_Status = rs.getString("Document_Status");
			DateFinalize = rs.getDate("DateFinalize");
			Division=rs.getString("Division");

			Forwarded = rs.getString("Forwarded");
			Status=rs.getString("Status");
			String Package_name=null,project_name=null;
			String sql112="select * from xx_packages_project where package_id='"+Package_Id+"' order by Package_name";
			PreparedStatement psdat1 = conn.prepareStatement(sql112);
			ResultSet rsdat1 = psdat1.executeQuery();
			while(rsdat1.next()){
				
				 Package_name=rsdat1.getString("Package_name");										
			}
			String piuq = "select Project from xx_projectattributes_master where project_id='"
					+ Project_Id + "' order by Project";

			PreparedStatement ps3 = conn.prepareStatement(piuq);
			ResultSet rs3 = ps3.executeQuery();
			
			while (rs3.next()) {

				
				project_name = rs3.getString("Project");
				
			}
			
			Date frezedate=null;String pendingwith=null;
			String sql12="select * from xx_record_actions where Document_id='"+Document_Map_Id+"'";
			PreparedStatement psdat = conn.prepareStatement(sql12);
			ResultSet rsdat = psdat.executeQuery();
			while(rsdat.next()){
				frezedate=rsdat.getDate("CurrentDate");
				pendingwith=rsdat.getString("ActionPerformedBy");
			}
			String frezestr = new SimpleDateFormat("dd/MM/yyyy")
			.format(frezedate);	
			/* String sql2 = "select * from xx_projectattributes_master where Project_ID='"+Project_Id+"'";
			ps = conn.prepareStatement(sql1);
			rs = ps.executeQuery();
			 */
			 count=count+1;
			 
		 
            out.write("\r\n");
            out.write("\t\t<tr>\r\n");
            out.write("\t\t\t\t\t\t\t\t<td><INPUT TYPE=\"radio\" NAME=\"pullbackrec\" VALUE=\"");
            out.print(Document_Map_Id);
            out.write("\"/></td>\t\r\n");

	//System.out.print("Real Date Status"+rdstatus+rd);
if (rdstatus.equalsIgnoreCase("0")) { 

            out.write("\t\t\t\r\n");
            out.write("\t\t\t\t\t\t\t\t\r\n");
            out.write("\t\t\t\t\t\t\t\t<td><input type=\"text\" id=\"ApprovalDate");
            out.print(Document_Map_Id);
            out.write("\"\r\n");
            out.write("\t\t\t\t\t\t\t\t\t\tname=\"ApprovalDate");
            out.print(Document_Map_Id);
            out.write("\"\r\n");
            out.write("\t\t\t\t\t\t\t\t\t\tonclick=\"frezedate('ApprovalDate");
            out.print(Document_Map_Id);
            out.write('\'');
            out.write(',');
            out.write('\'');
            out.print(frezedate);
            out.write("')\" readonly=\"true\" \r\n");
            out.write("\t\t\t\t\t\t\t\t\t\tstyle=\"width: 150px\"></td>\r\n");

} else {

            out.write("\r\n");
            out.write("<td><input type=\"text\" id=\"ApprovalDate");
            out.print(Document_Map_Id);
            out.write("\"\r\n");
            out.write("\t\t\t\t\t\t\tname=\"ApprovalDate");
            out.print(Document_Map_Id);
            out.write("\"  readonly=\"true\"\r\n");
            out.write("\t\t\t\t\t\t\tstyle=\"width: 150px; background-color: lightgray;\" value=");
            out.print(rd );
            out.write("></td>\r\n");

}

            out.write("\t\t\t\t\t\t\t\t\t\t\r\n");
            out.write("\t\t\t\t\t\t\t\t");
            out.write("\r\n");
            out.write("\t\t\t\t\t\t\t\t<td>");
            out.print(count);
            out.write("</td>\r\n");
            out.write("\t\t\t\t\t\t\t\t<td>");
            out.print(Document_Type3);
            out.write("</td>\r\n");
            out.write("\t\t\t\t\t\t\t\t<td>");
            out.print(Document_Number );
            out.write("</td>\r\n");
            out.write("\t\t\t\t\t\t\t\t<td>");
            out.print(Document_Name);
            out.write("</td>\t\t\t\t\t\t\r\n");
            out.write("\t\t\t\t\t\t\t\t");
            out.write("\r\n");
            out.write("\t\t\t\t\t\t\t\t<!-- <td>");
            out.print(Project_Id);
            out.write("</td><td>");
            out.print(Package_Id);
            out.write("</td> -->\r\n");
            out.write("\t\t\t\t\t\t\t\t<td>");
            out.print(pendingwith);
            out.write("</td>\r\n");
            out.write("\t\t\t\t\t\t\t\t<td>");
            out.print(frezestr);
            out.write("</td>\r\n");
            out.write("\t\t\t\t\t\t\t\t<td><a\r\n");
            out.write("\t\t\t\t\t\thref=\"recordReport.jsp?Document_Type=");
            out.print(Document_Type);
            out.write("&doc_id=");
            out.print(Document_Map_Id);
            out.write(" \" target=\"_blank\">\r\n");
            out.write("\t\t\t\t\t\t\tLog Details </a>\r\n");
            out.write("\t\t\t\t\t</td>\r\n");
            out.write("\t\t\t\t\t\t\t\t");
            out.write("\r\n");
            out.write("\t\t\t\t\t\t\t\t\r\n");
            out.write("\t\t\t\t\t\t\t\t\r\n");
            out.write("\t\t\t\t\t\t\t\t\t");
            out.write("\r\n");
            out.write("\t\t\t");


				} 
			
			
			
			
			
		}
		} 

    try { conn.close(); } catch (Exception e) { /* ignored */ }
	
	
	
            out.write("\r\n");
            out.write("\t\t</table>\r\n");
            int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
        _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
        _jspx_th_c_005fif_005f0_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
      }
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t</form>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
