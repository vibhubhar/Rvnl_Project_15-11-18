/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.86
 * Generated at: 2018-07-20 05:35:04 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.Admin;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.net.HttpURLConnection;
import javax.servlet.*;
import javax.servlet.http.*;
import java.util.*;
import javax.naming.*;
import java.sql.*;
import javax.sql.*;
import javax.servlet.*;
import javax.servlet.http.*;
import javax.naming.*;
import java.sql.*;
import javax.sql.*;
import java.util.*;
import java.util.Date;
import java.text.*;
import javax.mail.*;
import javax.mail.internet.*;
import java.util.*;
import javax.mail.internet.*;
import java.net.URL.*;
import java.io.*;
import java.io.BufferedReader;
import java.net.URLEncoder.*;
import java.io.InputStreamReader.*;
import java.net.URLConnection.*;
import java.io.InputStreamReader.*;
import java.io.OutputStreamWriter.*;

public final class forwarding_005fusr_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/Admin/included/NewHeader1.jsp", Long.valueOf(1532003898981L));
    _jspx_dependants.put("/WEB-INF/sessionCheck1.jspf", Long.valueOf(1524567358000L));
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fvar_005fdataSource;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fvar_005fdataSource = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
    _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fvar_005fdataSource.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

 
int timeout = session.getMaxInactiveInterval();
response.setHeader("Refresh", timeout + "; URL = admn_login.jsp");

      out.write("\r\n");
      out.write("\r\n");
      out.write("    \r\n");
      out.write("\r\n");
      out.write("//");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=iso-8859-1\" />\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"/Application/Admin/resources/bootstrap-3.3.7-dist/css1/bootstrap.css\"/>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"/Application/Admin/resources/bootstrap-3.3.7-dist/css1/bootstrap-theme.css\"/> \r\n");
      out.write("<link rel=\"stylesheet\" href=\"/Application/Admin/resources/css/main.css\"/>\t\r\n");
      out.write("\t\t");

 String theme3 = (String) pageContext.getAttribute("myTheme", PageContext.SESSION_SCOPE);
		System.out.println("Theme="+theme3);
 
      out.write("\r\n");
      out.write("\t\t\r\n");
      out.write("<meta charset=\"ISO-8859-1\">\r\n");
      out.write("<title>PDAMS</title>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write(".white-marquee {\r\n");
      out.write("   font-family: arial, calibri, \"Times New Roman\", Times, serif;\r\n");
      out.write("\tfont-size: 16px;\r\n");
      out.write("\tcolor: white;// blue;//white;\r\n");
      out.write("\t//margin-left:50px;\r\n");
      out.write("\tfont-weight:bold;\r\n");
      out.write("\tpadding:5px;\r\n");
      out.write("\tpadding-bottom:5px;\r\n");
      out.write("}\r\n");
      out.write(".marquee_section {\r\n");
      out.write("\twidth: 73%;\r\n");
      out.write("\tfloat: right;\r\n");
      out.write("\tline-height: 64px;\r\n");
      out.write("\theight: 65px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>   \r\n");

//String mailstatus=(String)session.getAttribute("MailStatus"); 
//String user = (String) session.getAttribute("user_name");
String user_code = (String) session.getAttribute("User_Code");
if (user_code!=null) {} else {user_code="0";}
 String mq=null,  mqLaunch=null, mqMaint=null, mqOther=null, mqRly=null, mqRVNL=null;					
// System.out.println("code="+user_code);	
  Connection conn7 = null;
     			PreparedStatement ps777=null;
     			ResultSet  rs777=null;
     						//Statement stmt7 = null;
     						try {
     							Context initCtx = new InitialContext();
     							Context envCtx = (Context) initCtx.lookup("java:comp/env");
     							DataSource ds = (DataSource) envCtx.lookup("jdbc/MySQLDB");

     							conn7 = ds.getConnection();
     							String sql35 = "select item, description from xx_maintenance";
     									
    								ps777 = conn7.prepareStatement(sql35);
    								rs777 = ps777.executeQuery();
    								while (rs777.next()) {
    									String item=rs777.getString(1);
    									 String desc=rs777.getString(2);
    									if (item.equalsIgnoreCase("marquee-launch")) {
    										mqLaunch=desc;
    									} else if (item.equalsIgnoreCase("marquee-maint")) {
    										mqMaint=desc;
    									} else if (item.equalsIgnoreCase("marquee-other")) {
    										mqOther=desc;
    									} else if (item.equalsIgnoreCase("marquee-Rly")) {
    										mqRly=desc;
    									} else if (item.equalsIgnoreCase("marquee-RVNL")) {
    										mqRVNL=desc;
    									} 
    								}
    								if (user_code.equalsIgnoreCase("2")) {
    									mq= mqLaunch+"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"+mqMaint+"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"+mqOther+"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"+mqRly;
    								} else if (user_code.equalsIgnoreCase("5")) {
    									mq= mqLaunch+"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"+mqMaint+"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"+mqOther+"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"+mqRVNL;
    								} else {
    								mq= mqLaunch+"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"+mqMaint+"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"+mqOther;
    								} 		 
    								//System.out.println("marquee="+mq);			
     						}catch(Exception e){
    							
    							e.printStackTrace();
    						} finally {
    						    try { rs777.close(); } catch (Exception e) { /* ignored */ }
    						    try { ps777.close(); } catch (Exception e) { /* ignored */ }
    						    try { conn7.close(); } catch (Exception e) { /* ignored */ }
    						}


      out.write("\r\n");
      out.write("  <input type=\"hidden\" id=\"menu1\" value='");
      out.print(session.getAttribute("user_name") );
      out.write("'> \r\n");
      out.write("  <!-- header -->\r\n");
      out.write("     \t   <div class=\"container-fluid top_bar\">\r\n");
      out.write("           <div class=\"row\">\r\n");
      out.write("           <div class=\"col-md-4 col-sm-4 col-xs-4\" >\r\n");
      out.write("           <img src=\"/Application/Admin/images/Rail_logo.png\" alt=\"\" class=\"img-responsive\"/>\r\n");
      out.write("           </div>\r\n");
      out.write("           <div class=\"col-md-4 col-sm-4 col-xs-4 top_middle_bar\">\r\n");
      out.write("           <h2 ><p class=\"text-white bg-dark\"><i>Project Documents Approval Monitoring System (PDAMS)</i></p></h2>\r\n");
      out.write("           </div>\r\n");
      out.write("           <div class=\"col-md-4 col-sm-4 col-xs-4 right_bar\" >\r\n");
      out.write("           <img src=\"/Application/Admin/images/RVNL_LOGO.jpg\" alt=\"\" class=\"img-responsive pull-right\"/>\r\n");
      out.write("           </div>\r\n");
      out.write(" \t\t   \r\n");
      out.write(" \t\t  \r\n");
      out.write("   \r\n");
      out.write(" \t\t \r\n");
      out.write("   \r\n");
      out.write("   </div>\r\n");
      out.write("   </div>\r\n");
      out.write("   <!-- end of header -->\r\n");
      out.write("\t   <div class=\"topmenu\" id=\"menu\">\r\n");
      out.write("\t  <div id=\"menu1\"  style=\"float:left;\"> \r\n");
      out.write("\t  \t\t<ul>\r\n");
      out.write("\t  \t\t\r\n");
      out.write("\t  \t\t<!-- <li><a href=\"user_index.jsp\">Add/Modify Docs</a></li>\r\n");
      out.write("\t   \t\t\t\t\t<li><a href=\"user_Project.jsp\">My Projects</a></li>\r\n");
      out.write("\t   \t\t\t\t\t<li><a href=\"Reportpiuinitiate.jsp\">My Reports</a></li>\r\n");
      out.write("\t   \t\t\t\t\t<li><a href=\"MoreInfo.jsp\">Returned Tasks</a></li>\r\n");
      out.write("\t   \t\t\t\t\t<li><a href=\"PullBack.jsp\">PullBack Doc</a></li>\r\n");
      out.write("\t   \t\t\t\t\t<li><a href=\"FinalApproval.jsp\">Docs under Approval</a></li>\r\n");
      out.write("\t   \t\t\t\t\t<li><a href=\"FinallyApprovedShow.jsp\">Approved Docs</a></li>\r\n");
      out.write("\t   \t\t\t\t\t<li><a href=\"ManualMail.jsp\">Reminders</a></li>\r\n");
      out.write("\t   \t\t\t\t\t<li><a href=\"User_List.jsp\">User List</a></li>\r\n");
      out.write("\t   \t\t\t\t\t<li><a href=\"changepasswordlocaladmin.jsp\">Change Password</a></li>\r\n");
      out.write("\t   \t\t\t\t\t<li><a href=\"helpmain.jsp\">Help</a></li>\r\n");
      out.write("\t   \t\t\t\t\t<li><a href=\"admn_logout.jsp\">Logout</a></li>  \r\n");
      out.write("\t   \t\t\t\t\t\t<li><a href=\"NewIndex.jsp\">Home</a></li> -->\r\n");
      out.write("\t   \t\t\t\t\t\r\n");
      out.write("\t   \t\t\t\t\t</ul>\t \r\n");
      out.write("\t   \t\t\t\t\t</div>  \t\r\n");
      out.write("\t   \t\t\t\t\t");

	   					if (!mq.equalsIgnoreCase("") && mq!=null) {       
	   					
      out.write("\t\t\t\t\r\n");
      out.write("\t   <div id=\"menu2\"  style=\"width:100%; float:right;\">     \t\t\t\t\t\r\n");
      out.write("\t   <marquee><span class=\"white-marquee\" id=\"white-marquee\" style=\"float:left;\">");
      out.print(mq );
      out.write("</span></marquee>  </div>\r\n");
      out.write("\t");

	}
	
      out.write("\t\r\n");
      out.write("\t</div> \r\n");
      out.write("\t<script type=\"text/javascript\" src=\"/Application/Admin/resources/bootstrap-3.3.7-dist/js/jquery-3.3.1.js\"></script> \r\n");
      out.write("   <script type=\"text/javascript\" src=\"/Application/Admin/resources/bootstrap-3.3.7-dist/js/bootstrap.js\"></script>  \t\t\t\t\t\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\r\n");
      out.write("<title>Forwarding User</title>\r\n");
      out.write("<script src=\"resources/jQuery/jquery-1.12.3.min.js\"></script>\r\n");
      out.write("<script src=\"resources/jQuery/jquery-ui.js\"></script>\r\n");
      out.write(" <script src=\"//code.jquery.com/jquery-1.10.2.js\"></script>\r\n");
      out.write(" <link rel=\"stylesheet\" href=\"//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css\">\r\n");
      out.write("<link href=\"resources/bootstrap/css/bootstrap.min.css\" rel=\"stylesheet\"/>\r\n");
      out.write("<link href=\"resources/bootstrap/css/bootstrap.css\" rel=\"stylesheet\"/>\r\n");
      out.write("<link href=\"resources/css/main.css\" rel=\"stylesheet\" type=\"text/css\">\r\n");
      out.write("<script src=\"resources/JS/Approval_wf230.js\"></script>\r\n");
      out.write("<!--   <link\r\n");
      out.write("\thref=\"http://ajax.aspnetcdn.com/ajax/jquery.ui/1.8.9/themes/blitzer/jquery-ui.css\"\r\n");
      out.write("\trel=\"stylesheet\" type=\"text/css\" /> -->\r\n");
      out.write("\t<script type=\"text/javascript\"\r\n");
      out.write("\tsrc=\"https://code.jquery.com/jquery-1.12.4.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\"\r\n");
      out.write("\tsrc=\"https://code.jquery.com/ui/1.12.1/jquery-ui.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\"\r\n");
      out.write("\tsrc=\"http://ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js\"></script>\r\n");
      out.write(" <script\r\n");
      out.write("\tsrc=\"http://ajax.aspnetcdn.com/ajax/jquery.ui/1.8.9/jquery-ui.js\"\r\n");
      out.write("\ttype=\"text/javascript\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write(" $(window).on (\"beforeunload\", function() { //window.opener.close(); \r\n");
      out.write(" //var stage1= document.getElementById(\"stage\").value;\r\n");
      out.write(" //alert(\",,stage\"+stage1);\r\n");
      out.write("//\tif (stage1!= null) { \r\n");
      out.write("\t//\talert(\"...closing...\"); \r\n");
      out.write("//\twindow.opener.location.reload(true);\r\n");
      out.write("\t// window.open(\"javascript:location.reload(true);\",\"c_document\");\r\n");
      out.write("//\t}\r\n");
      out.write("\t}); \r\n");
      out.write("\r\n");
      out.write(" </script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<form id='Forward_Usr' name='Forward_Usr'>\r\n");
      out.write("<INPUT TYPE='HIDDEN' NAME=\"document_id\">\r\n");
      out.write("<INPUT TYPE='HIDDEN' NAME=\"stage\">\r\n");
      out.write("<INPUT TYPE='HIDDEN' NAME=\"user_id\">\r\n");
      out.write("<INPUT TYPE='HIDDEN' NAME=\"Submitted_by\">\r\n");
      out.write("<INPUT TYPE='HIDDEN' NAME=\"Submition_date\">\r\n");
      out.write("<INPUT TYPE='HIDDEN' NAME=\"initatedfrm1\">\r\n");
      out.write("<INPUT TYPE='HIDDEN' NAME=\"daysfinal\">\r\n");
      out.write("\r\n");
      //  c:if
      org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
      boolean _jspx_th_c_005fif_005f0_reused = false;
      try {
        _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
        _jspx_th_c_005fif_005f0.setParent(null);
        // /Admin/forwarding_usr.jsp(77,0) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${param.stage == null}", java.lang.Boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false)).booleanValue());
        int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
        if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("<br>\t\r\n");
            out.write("\t\t<div style='vertical-align: baseline; padding: 10px; margin: 20px;'>\r\n");
            out.write("\t\t<b>\r\n");
            out.write("\t\tForward To User :-\r\n");
            out.write("\t\t</b>\r\n");
            out.write("\t\t<br>\r\n");
            out.write("\t\t<br>\r\n");
            out.write("\t\t<br>\r\n");
            out.write("\t\t\r\n");
            out.write("\r\n");

String doc_id=request.getParameter("document_id");
String sub_date=request.getParameter("submitiondate");
String initatedfrm=request.getParameter("initatedfrm");
Connection conn=null;
String htype=null,submitted_by=null;
try {
	Context initCtx = new InitialContext();
	Context envCtx = (Context) initCtx.lookup("java:comp/env");
	DataSource ds = (DataSource) envCtx.lookup("jdbc/MySQLDB");

	conn = ds.getConnection();
	

String documentq="select HierarchyType,Submitted_by from xx_document_mapping where Document_Map_ID='"+doc_id+"' order by Submitted_by";
PreparedStatement divPS1 = conn.prepareStatement(documentq);


ResultSet divRS1 = divPS1.executeQuery();
if (divRS1.next()){
	htype=divRS1.getString(1);
	submitted_by=divRS1.getString(2);

}

if(htype.equalsIgnoreCase("Zone")){
	String documentq1="select Zone_HierarchyId from xx_document_mapping where Document_Map_ID='"+doc_id+"' order by Zone_HierarchyId";
	PreparedStatement divPS11 = conn.prepareStatement(documentq1);

	String Zonehi=null;
	ResultSet divRS11 = divPS11.executeQuery();
	if (divRS11.next()){
		Zonehi=divRS11.getString(1);
	}	
	
	String queryusers="select userid from xx_doc_zones_hierarchy where Hierarchy_id='"+Zonehi+"' order by userid";
	PreparedStatement divPS12 = conn.prepareStatement(queryusers);
	ResultSet divRS12 = divPS12.executeQuery();
	while(divRS12.next()){
		String user=divRS12.getString(1);
	
            out.write("\t\r\n");
            out.write("\t\t<div><input style=\"margin-left:150px;\"  TYPE=radio name=userid VALUE='");
            out.print(user);
            out.write('\'');
            out.write('>');
            out.write(' ');
            out.print(user);
            out.write(" <BR></div>\r\n");
            out.write("\t\t\r\n");
		
	}
	
}else if(htype.equalsIgnoreCase("Division")){
	
	String documentq1="select Division_HierarchyId from xx_document_mapping where Document_Map_ID='"+doc_id+"' order by Division_HierarchyId";
	PreparedStatement divPS11 = conn.prepareStatement(documentq1);

	String divhi=null;
	ResultSet divRS11 = divPS11.executeQuery();
	if (divRS11.next()){
		divhi=divRS11.getString(1);
		}
	
	String queryusers="select userid from xx_doc_divisions_hierarchy where Hierarchy_id='"+divhi+"' order by userid";
	PreparedStatement divPS12 = conn.prepareStatement(queryusers);
	ResultSet divRS12 = divPS12.executeQuery();
	while(divRS12.next()){
		String user=divRS12.getString(1);
	
            out.write("\t\r\n");
            out.write("\t\t<div><input style=\"margin-left:150px;\" TYPE=radio name=userid VALUE='");
            out.print(user);
            out.write('\'');
            out.write('>');
            out.write(' ');
            out.print(user);
            out.write(" <BR></div>\r\n");
            out.write("\t\t\r\n");
		
	}
	
}else if(htype.equalsIgnoreCase("Both")){
	
	String documentq1="select Division_HierarchyId,Zone_HierarchyId from xx_document_mapping where Document_Map_ID='"+doc_id+"'";
	PreparedStatement divPS11 = conn.prepareStatement(documentq1);

	String Divhierid=null,Zonhierid=null;
	ResultSet divRS11 = divPS11.executeQuery();
	if (divRS11.next()){
		Divhierid=divRS11.getString(1);
		Zonhierid=divRS11.getString(2);

	}
	String queryusers="select userid from xx_doc_divisions_hierarchy where Hierarchy_id='"+Divhierid+"' order by userid";
	PreparedStatement divPS12 = conn.prepareStatement(queryusers);
	ResultSet divRS12 = divPS12.executeQuery();
	
            out.write("\r\n");
            out.write("\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<strong>Division:</strong>\r\n");
            out.write("\t");

	while(divRS12.next()){
		String user=divRS12.getString(1);
	
            out.write("\t\r\n");
            out.write("\t\t<div><input style=\"margin-left:150px;\" TYPE=radio name=userid VALUE='");
            out.print(user);
            out.write('\'');
            out.write('>');
            out.write(' ');
            out.print(user);
            out.write(" <BR></div>\r\n");
            out.write("\t\t\r\n");
		
	}
	
	

	String queryusersz="select userid from xx_doc_zones_hierarchy where Hierarchy_id='"+Zonhierid+"' order by userid";
	PreparedStatement divPS121 = conn.prepareStatement(queryusersz);
	ResultSet divRS121 = divPS121.executeQuery();
	
            out.write("\r\n");
            out.write("\t<br> <br>\r\n");
            out.write("\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <strong>Zone:</strong>\r\n");
            out.write("\t");

	
	while(divRS121.next()){
		String user=divRS121.getString(1);
	
            out.write("\t\r\n");
            out.write("\t\t<div><input style=\"margin-left:150px;\" TYPE=radio name=userid VALUE='");
            out.print(user);
            out.write('\'');
            out.write('>');
            out.write(' ');
            out.print(user);
            out.write(" <BR></div>\r\n");
            out.write("\t\t\r\n");
		
	}
	
	
	
}
	
}catch(Exception e){
	
	e.printStackTrace();
} finally {
    try { conn.close(); } catch (Exception e) { /* ignored */ }
}




            out.write("\r\n");
            out.write("<br>\r\n");
            out.write("\t\t<br>\r\n");
            out.write("\t\t\r\n");
            out.write("\r\n");
            out.write("&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<button type=\"button\" class=\"btn btn-primary\" onclick=\"javascript:forwd_usr(");
            out.print(doc_id);
            out.write(',');
            out.print(submitted_by);
            out.write(',');
            out.write('\'');
            out.print(sub_date);
            out.write('\'');
            out.write(',');
            out.write('\'');
            out.print(initatedfrm);
            out.write("')\">Forward</button>\r\n");
            out.write("\r\n");
            out.write("</div>\r\n");
            out.write("<div id=\"dialogid\" style=\"display: none\"\r\n");
            out.write("\t\t\t\t\t\t\t\talign=\"center\">\r\n");
            out.write("\t\t\t\t\t\t\t\t<br> Please Select Data!<br>\r\n");
            out.write("\t\t\t\t\t\t\t\t<br>\r\n");
            out.write("\t\t\t\t\t\t\t\t<button id=\"cancle\" class=\"btn btn-primary\"\r\n");
            out.write("\t\t\t\t\t\t\t\t\tonclick=\"jQuery.noConflict();$('#dialogid').dialog('close');\">Ok</button>\r\n");
            out.write("\t\t\t\t\t\t\t</div>\r\n");
            int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
        _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
        _jspx_th_c_005fif_005f0_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
      }
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      //  c:if
      org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f1 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
      boolean _jspx_th_c_005fif_005f1_reused = false;
      try {
        _jspx_th_c_005fif_005f1.setPageContext(_jspx_page_context);
        _jspx_th_c_005fif_005f1.setParent(null);
        // /Admin/forwarding_usr.jsp(235,0) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_c_005fif_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${param.stage != null}", java.lang.Boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false)).booleanValue());
        int _jspx_eval_c_005fif_005f1 = _jspx_th_c_005fif_005f1.doStartTag();
        if (_jspx_eval_c_005fif_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write('\r');
            out.write('\n');


String stage11=null, user1 = null,documentname=null,documenttype=null,emailidsup=null,contact_No_sup=null,supemailid=null,supcontact=null,user_id=null;
stage11 = request.getParameter("stage");
System.out.println("1 stage-----"+stage11);
if (stage11.equalsIgnoreCase("first")) {
	System.out.println("2 stage-----"+stage11);
user1 = (String) session.getAttribute("user_name");
 user_id = request.getParameter("user_id");
 String doc_action_alert2=(String)session.getAttribute("doc_action_Alert");
//Select email id of user to forward document

Context initCtx = new InitialContext();
			Context envCtx = (Context) initCtx.lookup("java:comp/env");
			DataSource ds = (DataSource) envCtx.lookup("jdbc/MySQLDB");

Connection conn = ds.getConnection();
String emailq = "select Email_Id,Contact_No from xx_user_master where User_name='"
					+ user_id + "'";

			PreparedStatement emailp = conn
					.prepareStatement(emailq);
			ResultSet emailr = emailp.executeQuery();
			while (emailr.next()) {
				emailidsup = emailr.getString("Email_Id");
				contact_No_sup = emailr.getString("Contact_No");
				 
			}
			
			String supervisoremail = "select Email_Id,Contact_No from xx_user_master where User_name='"
					+ user1 + "'";

			PreparedStatement supervisorp = conn
					.prepareStatement(supervisoremail);
			ResultSet supervisorr = supervisorp.executeQuery();
			while (supervisorr.next()) {
				supemailid = supervisorr.getString("Email_Id");
				supcontact = supervisorr.getString("Contact_No");
			 
			}

//end of email id code
String daysfinal=null,username=null, subdate=null;
//System.out.println("sajghsajgdjgjsagjdgdsaj username username------"+user1);
String initatedfrm=request.getParameter("initatedfrm1");
String doc_id=request.getParameter("document_id");
System.out.println("documnet id of forward_user page"+doc_id); 
String Submitted_by=request.getParameter("Submitted_by");
String Submition_date=request.getParameter("Submition_date");
System.out.println("sub date="+Submition_date);
Date date =new SimpleDateFormat("dd/MM/yyyy").parse(Submition_date);
java.sql.Date Submitiondate = new java.sql.Date(date.getTime());
System.out.println("ssst"+Submitiondate);
//getting days final
String docname1 = "select Days from xx_doc_divisions_hierarchy where Document_id='"
		+ doc_id + "' and userid='"+user_id+"'";

PreparedStatement docnamep1 = conn
		.prepareStatement(docname1);
ResultSet rsdoc1 = docnamep1.executeQuery();
while (rsdoc1.next()) {
	 daysfinal=rsdoc1.getString("Days");						

}

if(daysfinal==null){
String docname2 = "select Days from xx_doc_zones_hierarchy where Document_id='"
		+ doc_id + "' and userid='"+user_id+"'";

PreparedStatement docnamep2 = conn
		.prepareStatement(docname2);
ResultSet rsdoc2 = docnamep2.executeQuery();
while (rsdoc2.next()) {
	 daysfinal=rsdoc2.getString("Days");						

        	}
}
int daysofapproval1=Integer.parseInt(daysfinal) ;
int daysofapproval=daysofapproval1+1;
// ending days final data------
String docname = "select Document_Name, Document_Type, Date_of_Submission from xx_document_mapping where Document_Map_ID='"
		+ doc_id + "'";
PreparedStatement docnamep = conn
		.prepareStatement(docname);
ResultSet rsdoc = docnamep.executeQuery();
while (rsdoc.next()) {
	 documentname = rsdoc.getString("Document_Name");
	 documenttype = rsdoc.getString("Document_Type");
}   
SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
Calendar cal = Calendar.getInstance();
cal.add(cal.DATE, -daysofapproval1);
String cDate1= sdf.format(cal.getTime());
java.util.Date Date1 = sdf.parse(cDate1);


   //get addition of days

            out.write("\r\n");
            out.write("\r\n");
            out.write("\r\n");
            //  sql:update
            org.apache.taglibs.standard.tag.rt.sql.UpdateTag _jspx_th_sql_005fupdate_005f0 = (org.apache.taglibs.standard.tag.rt.sql.UpdateTag) _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fvar_005fdataSource.get(org.apache.taglibs.standard.tag.rt.sql.UpdateTag.class);
            boolean _jspx_th_sql_005fupdate_005f0_reused = false;
            try {
              _jspx_th_sql_005fupdate_005f0.setPageContext(_jspx_page_context);
              _jspx_th_sql_005fupdate_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f1);
              // /Admin/forwarding_usr.jsp(336,0) name = dataSource type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_sql_005fupdate_005f0.setDataSource("jdbc/MySQLDB");
              // /Admin/forwarding_usr.jsp(336,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_sql_005fupdate_005f0.setVar("rs");
              int[] _jspx_push_body_count_sql_005fupdate_005f0 = new int[] { 0 };
              try {
                int _jspx_eval_sql_005fupdate_005f0 = _jspx_th_sql_005fupdate_005f0.doStartTag();
                if (_jspx_eval_sql_005fupdate_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                  if (_jspx_eval_sql_005fupdate_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                    _jspx_push_body_count_sql_005fupdate_005f0[0]++;
                    out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_sql_005fupdate_005f0);
                  }
                  do {
                    out.write("\r\n");
                    out.write("  insert into xx_approval_workflow (Document_id,Added_byUser,Assigned_To,Action,CurrentDate,level,AssignedDays) Values (");
                    out.print(doc_id);
                    out.write(',');
                    out.write('\'');
                    out.print(Submitted_by);
                    out.write('\'');
                    out.write(',');
                    out.write('\'');
                    out.print(user_id );
                    out.write("','N','");
                    out.print(Submitiondate);
                    out.write("',1,'");
                    out.print(daysfinal);
                    out.write("')\r\n");
                    int evalDoAfterBody = _jspx_th_sql_005fupdate_005f0.doAfterBody();
                    if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                      break;
                  } while (true);
                  if (_jspx_eval_sql_005fupdate_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                    out = _jspx_page_context.popBody();
                    _jspx_push_body_count_sql_005fupdate_005f0[0]--;
                  }
                }
                if (_jspx_th_sql_005fupdate_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                  return;
                }
              } catch (java.lang.Throwable _jspx_exception) {
                while (_jspx_push_body_count_sql_005fupdate_005f0[0]-- > 0)
                  out = _jspx_page_context.popBody();
                _jspx_th_sql_005fupdate_005f0.doCatch(_jspx_exception);
              } finally {
                _jspx_th_sql_005fupdate_005f0.doFinally();
              }
              _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fvar_005fdataSource.reuse(_jspx_th_sql_005fupdate_005f0);
              _jspx_th_sql_005fupdate_005f0_reused = true;
            } finally {
              org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sql_005fupdate_005f0, _jsp_getInstanceManager(), _jspx_th_sql_005fupdate_005f0_reused);
            }
            out.write("\r\n");
            out.write("\r\n");
            //  sql:update
            org.apache.taglibs.standard.tag.rt.sql.UpdateTag _jspx_th_sql_005fupdate_005f1 = (org.apache.taglibs.standard.tag.rt.sql.UpdateTag) _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fvar_005fdataSource.get(org.apache.taglibs.standard.tag.rt.sql.UpdateTag.class);
            boolean _jspx_th_sql_005fupdate_005f1_reused = false;
            try {
              _jspx_th_sql_005fupdate_005f1.setPageContext(_jspx_page_context);
              _jspx_th_sql_005fupdate_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f1);
              // /Admin/forwarding_usr.jsp(340,0) name = dataSource type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_sql_005fupdate_005f1.setDataSource("jdbc/MySQLDB");
              // /Admin/forwarding_usr.jsp(340,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_sql_005fupdate_005f1.setVar("rs");
              int[] _jspx_push_body_count_sql_005fupdate_005f1 = new int[] { 0 };
              try {
                int _jspx_eval_sql_005fupdate_005f1 = _jspx_th_sql_005fupdate_005f1.doStartTag();
                if (_jspx_eval_sql_005fupdate_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                  if (_jspx_eval_sql_005fupdate_005f1 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                    _jspx_push_body_count_sql_005fupdate_005f1[0]++;
                    out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_sql_005fupdate_005f1);
                  }
                  do {
                    out.write("\r\n");
                    out.write("  update xx_document_mapping set forwarded='yes', Doc_forwd_date=now() where Document_Map_ID = ");
                    out.print(doc_id);
                    out.write('\r');
                    out.write('\n');
                    int evalDoAfterBody = _jspx_th_sql_005fupdate_005f1.doAfterBody();
                    if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                      break;
                  } while (true);
                  if (_jspx_eval_sql_005fupdate_005f1 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                    out = _jspx_page_context.popBody();
                    _jspx_push_body_count_sql_005fupdate_005f1[0]--;
                  }
                }
                if (_jspx_th_sql_005fupdate_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                  return;
                }
              } catch (java.lang.Throwable _jspx_exception) {
                while (_jspx_push_body_count_sql_005fupdate_005f1[0]-- > 0)
                  out = _jspx_page_context.popBody();
                _jspx_th_sql_005fupdate_005f1.doCatch(_jspx_exception);
              } finally {
                _jspx_th_sql_005fupdate_005f1.doFinally();
              }
              _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fvar_005fdataSource.reuse(_jspx_th_sql_005fupdate_005f1);
              _jspx_th_sql_005fupdate_005f1_reused = true;
            } finally {
              org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sql_005fupdate_005f1, _jsp_getInstanceManager(), _jspx_th_sql_005fupdate_005f1_reused);
            }
            out.write("\r\n");
            out.write("\r\n");
            //  sql:update
            org.apache.taglibs.standard.tag.rt.sql.UpdateTag _jspx_th_sql_005fupdate_005f2 = (org.apache.taglibs.standard.tag.rt.sql.UpdateTag) _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fvar_005fdataSource.get(org.apache.taglibs.standard.tag.rt.sql.UpdateTag.class);
            boolean _jspx_th_sql_005fupdate_005f2_reused = false;
            try {
              _jspx_th_sql_005fupdate_005f2.setPageContext(_jspx_page_context);
              _jspx_th_sql_005fupdate_005f2.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f1);
              // /Admin/forwarding_usr.jsp(344,0) name = dataSource type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_sql_005fupdate_005f2.setDataSource("jdbc/MySQLDB");
              // /Admin/forwarding_usr.jsp(344,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_sql_005fupdate_005f2.setVar("rs");
              int[] _jspx_push_body_count_sql_005fupdate_005f2 = new int[] { 0 };
              try {
                int _jspx_eval_sql_005fupdate_005f2 = _jspx_th_sql_005fupdate_005f2.doStartTag();
                if (_jspx_eval_sql_005fupdate_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                  if (_jspx_eval_sql_005fupdate_005f2 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                    _jspx_push_body_count_sql_005fupdate_005f2[0]++;
                    out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_sql_005fupdate_005f2);
                  }
                  do {
                    out.write("  \r\n");
                    out.write("  insert into xx_record_actions (Document_id,ActionPerformed,ActionPerformedBy,ActionedOn,Real_ActionDate) values('");
                    out.print(doc_id);
                    out.write("','Submitted','");
                    out.print(user1 );
                    out.write('\'');
                    out.write(',');
                    out.write('\'');
                    out.print(Submitiondate);
                    out.write("', now())\r\n");
                    int evalDoAfterBody = _jspx_th_sql_005fupdate_005f2.doAfterBody();
                    if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                      break;
                  } while (true);
                  if (_jspx_eval_sql_005fupdate_005f2 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                    out = _jspx_page_context.popBody();
                    _jspx_push_body_count_sql_005fupdate_005f2[0]--;
                  }
                }
                if (_jspx_th_sql_005fupdate_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                  return;
                }
              } catch (java.lang.Throwable _jspx_exception) {
                while (_jspx_push_body_count_sql_005fupdate_005f2[0]-- > 0)
                  out = _jspx_page_context.popBody();
                _jspx_th_sql_005fupdate_005f2.doCatch(_jspx_exception);
              } finally {
                _jspx_th_sql_005fupdate_005f2.doFinally();
              }
              _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fvar_005fdataSource.reuse(_jspx_th_sql_005fupdate_005f2);
              _jspx_th_sql_005fupdate_005f2_reused = true;
            } finally {
              org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sql_005fupdate_005f2, _jsp_getInstanceManager(), _jspx_th_sql_005fupdate_005f2_reused);
            }
            out.write('\r');
            out.write('\n');
            //  sql:update
            org.apache.taglibs.standard.tag.rt.sql.UpdateTag _jspx_th_sql_005fupdate_005f3 = (org.apache.taglibs.standard.tag.rt.sql.UpdateTag) _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fvar_005fdataSource.get(org.apache.taglibs.standard.tag.rt.sql.UpdateTag.class);
            boolean _jspx_th_sql_005fupdate_005f3_reused = false;
            try {
              _jspx_th_sql_005fupdate_005f3.setPageContext(_jspx_page_context);
              _jspx_th_sql_005fupdate_005f3.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f1);
              // /Admin/forwarding_usr.jsp(347,0) name = dataSource type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_sql_005fupdate_005f3.setDataSource("jdbc/MySQLDB");
              // /Admin/forwarding_usr.jsp(347,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_sql_005fupdate_005f3.setVar("rs");
              int[] _jspx_push_body_count_sql_005fupdate_005f3 = new int[] { 0 };
              try {
                int _jspx_eval_sql_005fupdate_005f3 = _jspx_th_sql_005fupdate_005f3.doStartTag();
                if (_jspx_eval_sql_005fupdate_005f3 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                  if (_jspx_eval_sql_005fupdate_005f3 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                    _jspx_push_body_count_sql_005fupdate_005f3[0]++;
                    out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_sql_005fupdate_005f3);
                  }
                  do {
                    out.write("\r\n");
                    out.write("  insert into xx_record_actions (Document_id,CurrentDate,ActionPerformed,ActionPerformedBy,AssignedDays,Real_ActionDate) values('");
                    out.print(doc_id);
                    out.write('\'');
                    out.write(',');
                    out.write('\'');
                    out.print(Submitiondate);
                    out.write("','pending','");
                    out.print(user_id );
                    out.write('\'');
                    out.write(',');
                    out.write('\'');
                    out.print(daysfinal);
                    out.write("', now())\r\n");
                    int evalDoAfterBody = _jspx_th_sql_005fupdate_005f3.doAfterBody();
                    if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                      break;
                  } while (true);
                  if (_jspx_eval_sql_005fupdate_005f3 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                    out = _jspx_page_context.popBody();
                    _jspx_push_body_count_sql_005fupdate_005f3[0]--;
                  }
                }
                if (_jspx_th_sql_005fupdate_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                  return;
                }
              } catch (java.lang.Throwable _jspx_exception) {
                while (_jspx_push_body_count_sql_005fupdate_005f3[0]-- > 0)
                  out = _jspx_page_context.popBody();
                _jspx_th_sql_005fupdate_005f3.doCatch(_jspx_exception);
              } finally {
                _jspx_th_sql_005fupdate_005f3.doFinally();
              }
              _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fvar_005fdataSource.reuse(_jspx_th_sql_005fupdate_005f3);
              _jspx_th_sql_005fupdate_005f3_reused = true;
            } finally {
              org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sql_005fupdate_005f3, _jsp_getInstanceManager(), _jspx_th_sql_005fupdate_005f3_reused);
            }
            out.write('\r');
            out.write('\n');


//response.setHeader("Refresh", "0; URL=http://localhost:8080/RVNLDocumentPortal/Admin/user_index.jsp");
//if (!initatedfrm.equalsIgnoreCase("recreate")) {response.sendRedirect("user_index.jsp");}

		// Mail code starts from here
		System.out.println("today:"+Date1+"approval date:"+date);
if (Date1.compareTo(date)<=0 && doc_action_alert2.equalsIgnoreCase("on")) {					
					 String result;
					    // Get recipient's email-ID, message & subject-line from index.html page
					    
					    final String to = emailidsup;
					    final String subject = "RVNL DOCUMENT PORTAL";
					    final String messg = "<div style='font-family:Georgia; font-size:16px; text-align:justify; line-height:150%;'>To <BR> <b>"+user_id.toUpperCase()+"</b> <br><br>"+user1+"/RVNL has forwarded a document/drawing for your approval and further necessary action please.The details of the document/drawing are as under:<br><BR> Document Name:  "+documentname+" <BR> Document Type:  "+documenttype+"<BR>Submission Date: "+Submition_date+"<BR>Target Time of days: "+daysofapproval1+" <br><br><br> <span style='color:brown;  font-size:20px; font-style:italic;'><b> RVNL Document Portal</b></span><br><br><span style='color:gray;  font-size:10px; font-style:italic;'>Note: This is a system generated email. Don't reply to system email address i.e. indiarvnl@gmail.com.</span></div>";
	
					
					    // Sender's email ID and password needs to be mentioned
					    final String from = "indiarvnl@gmail.com";
					    final String pass = "vsam3WSCJAIw4cj7";
					    
					    final String cc = supemailid;
					    // Defining the gmail host
					    String host = "smtp-relay.sendinblue.com";
					 
					    // Creating Properties object
					    Properties props = new Properties();
					 
					    // Defining properties
					   
					    props.put("mail.smtp.starttls.enable", "true");
					    props.put("mail.smtp.host", host);
					    props.put("mail.smtp.user", from);
					    props.put("mail.smtp.password", pass);
					    props.put("mail.smtp.port", "587");
					    props.put("mail.smtp.auth", "true");
					 
					    // Authorized the Session object.
					    Session mailSession = Session.getInstance(props, new javax.mail.Authenticator() {
					        @Override
					        protected PasswordAuthentication getPasswordAuthentication() {
					            return new PasswordAuthentication(from, pass);
					        }
					    });
					 
					    try {
					        // Create a default MimeMessage object.
					        MimeMessage message = new MimeMessage(mailSession);
					        // Set From: header field of the header.
					        message.setFrom(new InternetAddress(from));
					        // Set To: header field of the header.
					        message.addRecipient(Message.RecipientType.TO,
					                new InternetAddress(to));
					        message.setRecipients(Message.RecipientType.CC, cc);
					        // Set Subject: header field
					        message.setSubject(subject);
					        // Now set the actual message
					        message.setText(messg);
					        // Send message
					        Transport.send(message);
					        result = "Your mail sent successfully....";
					    } catch (MessagingException mex) {
					        mex.printStackTrace();
					        result = "Error: unable to send mail....";
					    }
					 
					    // Mail code ends here
					    //SMS code 
					    
					    try {
		// Construct data
		//contact number supervisor------contact_No_sup
		//contact number sender ------------- supcontact
		
		String user = "username=" + "indiarvnl@gmail.com";
		String hash = "&hash=" + "60b97ac840106a43c5a0e44fb778276d90330ece5e2da9ad534868c03137636d";
		String message = "&message=" + "A request for approval of RVNL document has been initiated by "+user1+"/RVNL for '"+documentname+"'.\n\nRVNL Document Portal";
		String sender = "&sender=" + "RPDAMS";
		String numbers = "&numbers=" + ""+supcontact+"";
		//+","+contact_No_sup+"";
		
		// Send data
		HttpURLConnection connsms = (HttpURLConnection) new java.net.URL("https://api.textlocal.in/send in/?").openConnection();
		
		String data = user + hash + numbers + message + sender;
	
		connsms.setDoOutput(true);
		connsms.setRequestMethod("POST");
		connsms.setRequestProperty("Content-Length", Integer.toString(data.length()));
		connsms.getOutputStream().write(data.getBytes("UTF-8"));
		final BufferedReader rd = new BufferedReader(new InputStreamReader(connsms.getInputStream()));
		final StringBuffer stringBuffer = new StringBuffer();
		String line;
		while ((line = rd.readLine()) != null) {
			stringBuffer.append(line);
		}
		rd.close();
		System.out.println("Message sent successfully");
		//return stringBuffer.toString();
	} catch (Exception e) {
		System.out.println("Error SMS "+e);
		//return "Error "+e;
	}
}
conn.close();

            out.write("\r\n");
            out.write("<script>\r\n");
            out.write("document.Forward_Usr.stage.value = \"second\";\r\n");
            out.write("document.getElementById(\"Forward_Usr\").submit();\r\n");
            out.write("</script>\r\n");
            out.write(" ");

} 

            out.write("\r\n");
            out.write("<!-- <div style='vertical-align: baseline; padding: 10px; margin: 20px;'>\r\n");
            out.write(" <div class=\"alert alert-success\">\r\n");
            out.write(" <strong>Success!</strong> Document has been Forwarded successfully.\r\n");
            out.write("</div>\r\n");
            out.write("</div> -->\r\n");
            int evalDoAfterBody = _jspx_th_c_005fif_005f1.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fif_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
        _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f1);
        _jspx_th_c_005fif_005f1_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f1_reused);
      }
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</form>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
