/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.86
 * Generated at: 2018-07-31 11:15:48 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.Admin;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.net.HttpURLConnection;
import javax.servlet.*;
import javax.servlet.http.*;
import java.util.*;
import javax.naming.*;
import java.sql.*;
import javax.sql.*;
import javax.servlet.*;
import java.util.*;
import javax.servlet.http.*;
import javax.naming.*;
import java.sql.*;
import javax.sql.*;
import javax.mail.*;
import javax.mail.internet.*;
import java.net.URL.*;
import java.io.*;
import java.net.URLEncoder.*;
import java.net.URLConnection.*;
import java.io.InputStreamReader.*;
import java.io.OutputStreamWriter.*;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.*;

public final class updateuser_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("/Admin/included/NewHeader.jsp", Long.valueOf(1527967178274L));
    _jspx_dependants.put("/WEB-INF/sessionCheck1.jspf", Long.valueOf(1524567358000L));
    _jspx_dependants.put("/Admin/sessionCheck.jsp", Long.valueOf(1524567356000L));
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fvar_005fdataSource;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fvar_005fdataSource = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fvar_005fdataSource.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 1120256, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

 
int timeout = session.getMaxInactiveInterval();
response.setHeader("Refresh", timeout + "; URL = admn_login.jsp");

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t");

 String theme3 = (String) pageContext.getAttribute("myTheme", PageContext.SESSION_SCOPE);
if (theme3!=null) {
if (theme3.equalsIgnoreCase("brown") ) { 
      out.write("\r\n");
      out.write("\t\t<link rel=\"stylesheet\" type=\"text/css\" href=\"resources/css/ThmBrown.css\">\r\n");
      out.write("\t\t");
 } else if (theme3.equalsIgnoreCase("blue")) { 
      out.write(" \r\n");
      out.write("\t\t<link rel=\"stylesheet\" type=\"text/css\" href=\"resources/css/ThmBlue.css\">\r\n");
      out.write("\t\t");
} else if (theme3.equalsIgnoreCase("green")) { 
      out.write(" \r\n");
      out.write("\t\t<link rel=\"stylesheet\" type=\"text/css\" href=\"resources/css/ThmGreen.css\">\r\n");
      out.write("\t\t");
} else if (theme3.equalsIgnoreCase("magenta")) { 
      out.write(" \r\n");
      out.write("\t\t<link rel=\"stylesheet\" type=\"text/css\" href=\"resources/css/Thmmagenta.css\">\r\n");
      out.write("\t\t");
}
} else {
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"resources/css/ThmBrown.css\">\r\n");
      out.write("\t\t");
} 
      out.write("\r\n");
      out.write("\t\t\r\n");
      out.write("<meta charset=\"ISO-8859-1\">\r\n");
      out.write("<title>PDAMS</title>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script src=\"//code.jquery.com/jquery-1.10.2.js\"></script>\r\n");
      out.write("<style>\r\n");
      out.write(".white-marquee {\r\n");
      out.write("   font-family:   arial, serif, \"Times New Roman\", calibri, Times;\r\n");
      out.write("\tfont-size: 14px;\r\n");
      out.write("\tcolor:  white;\r\n");
      out.write("\t//margin-left:50px;\r\n");
      out.write("\tfont-weight:bold;\r\n");
      out.write("\tpadding:10px;\r\n");
      out.write("\tpadding-bottom:5px;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>   \r\n");

//String mailstatus=(String)session.getAttribute("MailStatus"); 
//String user = (String) session.getAttribute("user_name");
String user_code = (String) session.getAttribute("User_Code");
if (user_code!=null) {} else {user_code="0";}
 String mq=null, mqLaunch=null, mqMaint=null, mqOther=null, mqRly=null, mqRVNL=null;					
 //System.out.println("code="+user_code);	
  Connection conn7 = null;                                                      
     			PreparedStatement ps777=null;
     			ResultSet  rs777=null;
     						//Statement stmt7 = null;
     						try {
     							Context initCtx = new InitialContext();
     							Context envCtx = (Context) initCtx.lookup("java:comp/env");
     							DataSource ds = (DataSource) envCtx.lookup("jdbc/MySQLDB");

     							conn7 = ds.getConnection();
     							String sql35 = "select item, description from xx_maintenance";
     									
    								ps777 = conn7.prepareStatement(sql35);
    								rs777 = ps777.executeQuery();
    								while (rs777.next()) {
    									String item=rs777.getString(1);
    									 String desc=rs777.getString(2);
    									if (item.equalsIgnoreCase("marquee-launch")) {
    										mqLaunch=desc;
    									} else if (item.equalsIgnoreCase("marquee-maint")) {
    										mqMaint=desc;
    									} else if (item.equalsIgnoreCase("marquee-other")) {
    										mqOther=desc;
    									} else if (item.equalsIgnoreCase("marquee-Rly")) {
    										mqRly=desc;
    									} else if (item.equalsIgnoreCase("marquee-RVNL")) {
    										mqRVNL=desc;
    									} 
    								}
    								if (user_code.equalsIgnoreCase("2")) {
    									mq= mqLaunch+"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"+mqMaint+"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"+mqOther+"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"+mqRly;
    								} else if (user_code.equalsIgnoreCase("5")) {
    									mq= mqLaunch+"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"+mqMaint+"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"+mqOther+"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"+mqRVNL;
    								} else {
    								mq= mqLaunch+"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"+mqMaint+"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"+mqOther;
    								}		 
    				    				//System.out.println("marquee="+mq);
     						}catch(Exception e){
    							
    							e.printStackTrace();
    						} finally {
    						    try { rs777.close(); } catch (Exception e) { /* ignored */ }
    						    try { ps777.close(); } catch (Exception e) { /* ignored */ }
    						    try { conn7.close(); } catch (Exception e) { /* ignored */ }
    						}



      out.write("\r\n");
      out.write("<input type=\"hidden\" id=\"menu1\" value='");
      out.print(session.getAttribute("user_name") );
      out.write("'>\r\n");
      out.write("     \t   <div class=\"header\">\r\n");
      out.write("   \r\n");
      out.write(" \t\t   <table width=\"100%\"><tr><th width=15%>\r\n");
      out.write("    \t\t  <img src=\"images/Rail_logo.png\"  class=\"img-responsive\" style=\"float:left;height:80px;margin-left:10px;\">\r\n");
      out.write("    \t\t  \r\n");
      out.write("   </td>\r\n");
      out.write("   <th width=60%>\r\n");
      out.write("      \t\t <h2 style=\" margin-left:5px;\"><i>Project Documents Approval Monitoring System (PDAMS)</i></h2>\t\r\n");
      out.write("   \r\n");
      out.write("   </th><th width=25%>\r\n");
      out.write("\t  <img src=\"images/RVNL_LOGO.jpg\"  class=\"img-responsive\" style=\"float:left;height:80px;margin-left:10px;\">\r\n");
      out.write(" \t\t  </table>\t\r\n");
      out.write("   </div>\r\n");
      out.write("\t   <div class=\"topmenu\" id=\"menu\">\r\n");
      out.write("\t  <div id=\"menu1\"  style=\"float:left;\"> \r\n");
      out.write("\t  \t\t<ul>\r\n");
      out.write("\t  \t\t\r\n");
      out.write("\t  \t\t<!-- <li><a href=\"user_index.jsp\">Add/Modify Docs</a></li>\r\n");
      out.write("\t   \t\t\t\t\t<li><a href=\"user_Project.jsp\">My Projects</a></li>\r\n");
      out.write("\t   \t\t\t\t\t<li><a href=\"Reportpiuinitiate.jsp\">My Reports</a></li>\r\n");
      out.write("\t   \t\t\t\t\t<li><a href=\"MoreInfo.jsp\">Returned Tasks</a></li>\r\n");
      out.write("\t   \t\t\t\t\t<li><a href=\"PullBack.jsp\">PullBack Doc</a></li>\r\n");
      out.write("\t   \t\t\t\t\t<li><a href=\"FinalApproval.jsp\">Docs under Approval</a></li>\r\n");
      out.write("\t   \t\t\t\t\t<li><a href=\"FinallyApprovedShow.jsp\">Approved Docs</a></li>\r\n");
      out.write("\t   \t\t\t\t\t<li><a href=\"ManualMail.jsp\">Reminders</a></li>\r\n");
      out.write("\t   \t\t\t\t\t<li><a href=\"User_List.jsp\">User List</a></li>\r\n");
      out.write("\t   \t\t\t\t\t<li><a href=\"changepasswordlocaladmin.jsp\">Change Password</a></li>\r\n");
      out.write("\t   \t\t\t\t\t<li><a href=\"helpmain.jsp\">Help</a></li>\r\n");
      out.write("\t   \t\t\t\t\t<li><a href=\"admn_logout.jsp\">Logout</a></li>  -->\r\n");
      out.write("\t   \t\t\t\t\t<li><a href=\"NewIndex.jsp\">Home</a></li>\r\n");
      out.write("\t   \t\t\t\t\t\r\n");
      out.write("\t   \t\t\t\t\t</ul>\t \r\n");
      out.write("\t   \t\t\t\t\t</div>  \r\n");
      out.write("\t   \t\t\t\t\t");

	   					if (!mq.equalsIgnoreCase("") && mq!=null) {
	   					
      out.write("\t\r\n");
      out.write("\t   \t<div id=\"menu11\" ></div>\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t   <div id=\"menu2\"  style=\"width:70%; float:left;\">     \t\t\t\t\t\r\n");
      out.write("\t   <marquee><span class=\"white-marquee\" id=\"white-marquee\" style=\"float:right; width:100%\">");
      out.print(mq );
      out.write("</span></marquee>  </div>\r\n");
      out.write("\t  ");

	  	}
	   	
      out.write("\t\r\n");
      out.write("\t   \t\r\n");
      out.write("\t\t\t\t\t\t\t</div> \r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write(" ");
 

int timeout1 = session.getMaxInactiveInterval();
response.setHeader("Refresh", timeout1 + "; URL = admn_login.jsp");

if(((String)session.getAttribute("user_name"))==null)
       {
           
	response.sendRedirect("admn_login.jsp");
           
       }
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<link href=\"resources/css/main.css\" rel=\"stylesheet\" type=\"text/css\">\r\n");
      out.write("<!-- <link rel=\"stylesheet\" href=\"http://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css\"> -->\r\n");
      out.write("<link href=\"resources/bootstrap/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n");
      out.write("<link href=\"resources/bootstrap/css/bootstrap.css\" rel=\"stylesheet\" />\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("    window.onunload = refreshParent;\r\n");
      out.write("    function refreshParent() {\r\n");
      out.write("        window.opener.location.reload();\r\n");
      out.write("    }\r\n");
      out.write("</script>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("    function refreshAndClose() {\r\n");
      out.write("       // window.opener.location.reload(true);\r\n");
      out.write("        window.close();\r\n");
      out.write("    }\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");

String user = (String)session.getAttribute("user_name");
String prof_alert2=(String)session.getAttribute("Profile_Alert");
String doc_action_alert2=(String)session.getAttribute("doc_action_Alert");
PreparedStatement pstatement = null;
		String email_old = request.getParameter("email_old");
		String no_old = request.getParameter("no_old");
		String Type = request.getParameter("type_test");
		String user_name1 = request.getParameter("user_name");
		String test1 = request.getParameter("test");
		String officer_name = request.getParameter("officer_name");
		String email_id = request.getParameter("email_id");
		String contact_no = request.getParameter("contact_no");
		String Role = request.getParameter("Role");
		String PIU_name = request.getParameter("PIU_name");
		String Department_RVNL2 = request.getParameter("Department_RVNL2");
		String designation_RVNL11 = request.getParameter("DesgDiv_RVNL2");

		String Zone = request.getParameter("Zone");
		String division1 = request.getParameter("division1");
		String designation_RVNL21 = request.getParameter("DesgDiv_RVNL1");
		String Department_RVNL1 = request.getParameter("Department_RVNL1");
		String queryString=null;
        PreparedStatement p1 =null;
		Connection conn=null;
		Statement stmt=null;
		int updateQuery = 0;
		//System.out.println("comoing upto here-------------------"+user_name1);
	try{
		
		String desigid=null;
		Context initCtx = new InitialContext();
		Context envCtx = (Context) initCtx.lookup("java:comp/env");
		DataSource ds = (DataSource) envCtx.lookup("jdbc/MySQLDB");
		 String depid=null;
		conn = ds.getConnection();
		 System.out.println(" Type----"+Type+user_name1);
		if (Type.equalsIgnoreCase("Others")) {
					if(user_name1!="" && user_name1!=null){
						   queryString = "UPDATE xx_user_master SET User_name='"+user_name1+"', Created_by='"+user+"', Date_created=now() where User_name='"+test1+"'";
					}
			
		} else {

		if(Department_RVNL1!=null){
		String deptartmentname="select * from xx_departments_master where Department_Name='"+Department_RVNL1+"' and Type='MOR'";
		
		 PreparedStatement ps4dep = conn.prepareStatement(deptartmentname);
		  // ps3.setString(1, piu);
		   ResultSet rsldep = ps4dep.executeQuery(); 
		  
		 while(rsldep.next()){
		 depid=rsldep.getString("Department_Id");
		 }
		}
		else{
			String deptartmentname="select * from xx_departments_master where Department_Name='"+Department_RVNL2+"' and Type='RVNL'";
			
			 PreparedStatement ps4dep = conn.prepareStatement(deptartmentname);
			  // ps3.setString(1, piu);
			   ResultSet rsldep = ps4dep.executeQuery(); 
			   
			 while(rsldep.next()){
			 depid=rsldep.getString("Department_Id");
			 }
			
			
		}
		if(designation_RVNL11 !=null){
		 String depts="Select designation_id from xx_designation_mapping where Designation_name='"+designation_RVNL11+"' and Type='RVNL'";
		
		 PreparedStatement ps4 = conn.prepareStatement(depts);
		  // ps3.setString(1, piu);
		   ResultSet rsl = ps4.executeQuery(); 
		   
		 while(rsl.next()){
		 desigid=rsl.getString("designation_id");
		 }
		 }
		 else{
			 String depts1="Select designation_id from xx_designation_mapping where Designation_name='"+designation_RVNL21+"' and Type='MOR'";
			
			 PreparedStatement ps41 = conn.prepareStatement(depts1);
			  // ps3.setString(1, piu);
			   ResultSet rsl1 = ps41.executeQuery(); 
			   
			 while(rsl1.next()){
			 desigid=rsl1.getString("designation_id");
			 }	 		 
		 }
		//System.out.println("name="+user_name1+"o"+officer_name+"e"+email_id+"no"+contact_no+"des"+desigid);
		if (user_name1!="" && officer_name!="" &&  email_id!="" && contact_no!="" && desigid!="" && user_name1!=null && officer_name!=null &&  email_id!=null && contact_no!=null && desigid!=null){
		   queryString = "UPDATE xx_user_master SET User_name='"+user_name1+"',Department_id='"+depid+"', Officer_Name='"+officer_name+"',Email_Id='"+email_id+"',Contact_No='"+contact_no+"',Designation_Id='"+desigid+"', Created_by='"+user+"', Date_created=now() where User_name='"+test1+"'";
		} 
		}
		  // System.out.println("final query----"+queryString+desigid);
         if (queryString != null) {
		   p1 = conn.prepareStatement(queryString);
                   updateQuery = p1.executeUpdate();
                if (updateQuery != 0) {
                	
                	//response.setHeader("Refresh", "0; URL=http://localhost:8080/RVNLDocumentPortal/Admin/user_index.jsp");       	
            }
                   	 
                   
      out.write("\r\n");
      out.write("           ");
      //  sql:update
      org.apache.taglibs.standard.tag.rt.sql.UpdateTag _jspx_th_sql_005fupdate_005f0 = (org.apache.taglibs.standard.tag.rt.sql.UpdateTag) _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fvar_005fdataSource.get(org.apache.taglibs.standard.tag.rt.sql.UpdateTag.class);
      boolean _jspx_th_sql_005fupdate_005f0_reused = false;
      try {
        _jspx_th_sql_005fupdate_005f0.setPageContext(_jspx_page_context);
        _jspx_th_sql_005fupdate_005f0.setParent(null);
        // /Admin/updateuser.jsp(162,11) name = dataSource type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_sql_005fupdate_005f0.setDataSource("jdbc/MySQLDB");
        // /Admin/updateuser.jsp(162,11) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_sql_005fupdate_005f0.setVar("rs");
        int[] _jspx_push_body_count_sql_005fupdate_005f0 = new int[] { 0 };
        try {
          int _jspx_eval_sql_005fupdate_005f0 = _jspx_th_sql_005fupdate_005f0.doStartTag();
          if (_jspx_eval_sql_005fupdate_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
            if (_jspx_eval_sql_005fupdate_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
              _jspx_push_body_count_sql_005fupdate_005f0[0]++;
              out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_sql_005fupdate_005f0);
            }
            do {
              out.write("\r\n");
              out.write("           \t\t   update xx_record_actions set ActionPerformedBy='");
              out.print(user_name1);
              out.write("' where ActionPerformedBy='");
              out.print(test1);
              out.write("';\r\n");
              out.write("           \t\t   \r\n");
              out.write("\t\t");
              int evalDoAfterBody = _jspx_th_sql_005fupdate_005f0.doAfterBody();
              if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                break;
            } while (true);
            if (_jspx_eval_sql_005fupdate_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
              out = _jspx_page_context.popBody();
              _jspx_push_body_count_sql_005fupdate_005f0[0]--;
            }
          }
          if (_jspx_th_sql_005fupdate_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
            return;
          }
        } catch (java.lang.Throwable _jspx_exception) {
          while (_jspx_push_body_count_sql_005fupdate_005f0[0]-- > 0)
            out = _jspx_page_context.popBody();
          _jspx_th_sql_005fupdate_005f0.doCatch(_jspx_exception);
        } finally {
          _jspx_th_sql_005fupdate_005f0.doFinally();
        }
        _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fvar_005fdataSource.reuse(_jspx_th_sql_005fupdate_005f0);
        _jspx_th_sql_005fupdate_005f0_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sql_005fupdate_005f0, _jsp_getInstanceManager(), _jspx_th_sql_005fupdate_005f0_reused);
      }
      out.write("\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t  ");
      //  sql:update
      org.apache.taglibs.standard.tag.rt.sql.UpdateTag _jspx_th_sql_005fupdate_005f1 = (org.apache.taglibs.standard.tag.rt.sql.UpdateTag) _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fvar_005fdataSource.get(org.apache.taglibs.standard.tag.rt.sql.UpdateTag.class);
      boolean _jspx_th_sql_005fupdate_005f1_reused = false;
      try {
        _jspx_th_sql_005fupdate_005f1.setPageContext(_jspx_page_context);
        _jspx_th_sql_005fupdate_005f1.setParent(null);
        // /Admin/updateuser.jsp(167,4) name = dataSource type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_sql_005fupdate_005f1.setDataSource("jdbc/MySQLDB");
        // /Admin/updateuser.jsp(167,4) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_sql_005fupdate_005f1.setVar("rs");
        int[] _jspx_push_body_count_sql_005fupdate_005f1 = new int[] { 0 };
        try {
          int _jspx_eval_sql_005fupdate_005f1 = _jspx_th_sql_005fupdate_005f1.doStartTag();
          if (_jspx_eval_sql_005fupdate_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
            if (_jspx_eval_sql_005fupdate_005f1 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
              _jspx_push_body_count_sql_005fupdate_005f1[0]++;
              out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_sql_005fupdate_005f1);
            }
            do {
              out.write("\r\n");
              out.write("        \t\t\tupdate xx_moreammendments set action_performedBy='");
              out.print(user_name1);
              out.write("' where action_performedBy='");
              out.print(test1);
              out.write("';\r\n");
              out.write("\t\t");
              int evalDoAfterBody = _jspx_th_sql_005fupdate_005f1.doAfterBody();
              if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                break;
            } while (true);
            if (_jspx_eval_sql_005fupdate_005f1 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
              out = _jspx_page_context.popBody();
              _jspx_push_body_count_sql_005fupdate_005f1[0]--;
            }
          }
          if (_jspx_th_sql_005fupdate_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
            return;
          }
        } catch (java.lang.Throwable _jspx_exception) {
          while (_jspx_push_body_count_sql_005fupdate_005f1[0]-- > 0)
            out = _jspx_page_context.popBody();
          _jspx_th_sql_005fupdate_005f1.doCatch(_jspx_exception);
        } finally {
          _jspx_th_sql_005fupdate_005f1.doFinally();
        }
        _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fvar_005fdataSource.reuse(_jspx_th_sql_005fupdate_005f1);
        _jspx_th_sql_005fupdate_005f1_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sql_005fupdate_005f1, _jsp_getInstanceManager(), _jspx_th_sql_005fupdate_005f1_reused);
      }
      out.write("\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t ");
      //  sql:update
      org.apache.taglibs.standard.tag.rt.sql.UpdateTag _jspx_th_sql_005fupdate_005f2 = (org.apache.taglibs.standard.tag.rt.sql.UpdateTag) _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fvar_005fdataSource.get(org.apache.taglibs.standard.tag.rt.sql.UpdateTag.class);
      boolean _jspx_th_sql_005fupdate_005f2_reused = false;
      try {
        _jspx_th_sql_005fupdate_005f2.setPageContext(_jspx_page_context);
        _jspx_th_sql_005fupdate_005f2.setParent(null);
        // /Admin/updateuser.jsp(171,3) name = dataSource type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_sql_005fupdate_005f2.setDataSource("jdbc/MySQLDB");
        // /Admin/updateuser.jsp(171,3) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_sql_005fupdate_005f2.setVar("rs");
        int[] _jspx_push_body_count_sql_005fupdate_005f2 = new int[] { 0 };
        try {
          int _jspx_eval_sql_005fupdate_005f2 = _jspx_th_sql_005fupdate_005f2.doStartTag();
          if (_jspx_eval_sql_005fupdate_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
            if (_jspx_eval_sql_005fupdate_005f2 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
              _jspx_push_body_count_sql_005fupdate_005f2[0]++;
              out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_sql_005fupdate_005f2);
            }
            do {
              out.write("\r\n");
              out.write("        \t\t\r\n");
              out.write("\t\t\t\t  update xx_moreammendments set action_To='");
              out.print(user_name1);
              out.write("' where action_To='");
              out.print(test1);
              out.write("';\r\n");
              out.write("           \t\r\n");
              out.write("\t\t");
              int evalDoAfterBody = _jspx_th_sql_005fupdate_005f2.doAfterBody();
              if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                break;
            } while (true);
            if (_jspx_eval_sql_005fupdate_005f2 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
              out = _jspx_page_context.popBody();
              _jspx_push_body_count_sql_005fupdate_005f2[0]--;
            }
          }
          if (_jspx_th_sql_005fupdate_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
            return;
          }
        } catch (java.lang.Throwable _jspx_exception) {
          while (_jspx_push_body_count_sql_005fupdate_005f2[0]-- > 0)
            out = _jspx_page_context.popBody();
          _jspx_th_sql_005fupdate_005f2.doCatch(_jspx_exception);
        } finally {
          _jspx_th_sql_005fupdate_005f2.doFinally();
        }
        _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fvar_005fdataSource.reuse(_jspx_th_sql_005fupdate_005f2);
        _jspx_th_sql_005fupdate_005f2_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sql_005fupdate_005f2, _jsp_getInstanceManager(), _jspx_th_sql_005fupdate_005f2_reused);
      }
      out.write("\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t ");
      //  sql:update
      org.apache.taglibs.standard.tag.rt.sql.UpdateTag _jspx_th_sql_005fupdate_005f3 = (org.apache.taglibs.standard.tag.rt.sql.UpdateTag) _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fvar_005fdataSource.get(org.apache.taglibs.standard.tag.rt.sql.UpdateTag.class);
      boolean _jspx_th_sql_005fupdate_005f3_reused = false;
      try {
        _jspx_th_sql_005fupdate_005f3.setPageContext(_jspx_page_context);
        _jspx_th_sql_005fupdate_005f3.setParent(null);
        // /Admin/updateuser.jsp(177,3) name = dataSource type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_sql_005fupdate_005f3.setDataSource("jdbc/MySQLDB");
        // /Admin/updateuser.jsp(177,3) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_sql_005fupdate_005f3.setVar("rs");
        int[] _jspx_push_body_count_sql_005fupdate_005f3 = new int[] { 0 };
        try {
          int _jspx_eval_sql_005fupdate_005f3 = _jspx_th_sql_005fupdate_005f3.doStartTag();
          if (_jspx_eval_sql_005fupdate_005f3 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
            if (_jspx_eval_sql_005fupdate_005f3 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
              _jspx_push_body_count_sql_005fupdate_005f3[0]++;
              out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_sql_005fupdate_005f3);
            }
            do {
              out.write("\r\n");
              out.write("     \t\t\t\t  update xx_doc_zones_hierarchy set UserId ='");
              out.print(user_name1);
              out.write("' where UserId ='");
              out.print(test1);
              out.write("';\r\n");
              out.write("           \t");
              int evalDoAfterBody = _jspx_th_sql_005fupdate_005f3.doAfterBody();
              if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                break;
            } while (true);
            if (_jspx_eval_sql_005fupdate_005f3 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
              out = _jspx_page_context.popBody();
              _jspx_push_body_count_sql_005fupdate_005f3[0]--;
            }
          }
          if (_jspx_th_sql_005fupdate_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
            return;
          }
        } catch (java.lang.Throwable _jspx_exception) {
          while (_jspx_push_body_count_sql_005fupdate_005f3[0]-- > 0)
            out = _jspx_page_context.popBody();
          _jspx_th_sql_005fupdate_005f3.doCatch(_jspx_exception);
        } finally {
          _jspx_th_sql_005fupdate_005f3.doFinally();
        }
        _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fvar_005fdataSource.reuse(_jspx_th_sql_005fupdate_005f3);
        _jspx_th_sql_005fupdate_005f3_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sql_005fupdate_005f3, _jsp_getInstanceManager(), _jspx_th_sql_005fupdate_005f3_reused);
      }
      out.write("\r\n");
      out.write("          \t\r\n");
      out.write("\t\t ");
      //  sql:update
      org.apache.taglibs.standard.tag.rt.sql.UpdateTag _jspx_th_sql_005fupdate_005f4 = (org.apache.taglibs.standard.tag.rt.sql.UpdateTag) _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fvar_005fdataSource.get(org.apache.taglibs.standard.tag.rt.sql.UpdateTag.class);
      boolean _jspx_th_sql_005fupdate_005f4_reused = false;
      try {
        _jspx_th_sql_005fupdate_005f4.setPageContext(_jspx_page_context);
        _jspx_th_sql_005fupdate_005f4.setParent(null);
        // /Admin/updateuser.jsp(181,3) name = dataSource type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_sql_005fupdate_005f4.setDataSource("jdbc/MySQLDB");
        // /Admin/updateuser.jsp(181,3) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_sql_005fupdate_005f4.setVar("rs");
        int[] _jspx_push_body_count_sql_005fupdate_005f4 = new int[] { 0 };
        try {
          int _jspx_eval_sql_005fupdate_005f4 = _jspx_th_sql_005fupdate_005f4.doStartTag();
          if (_jspx_eval_sql_005fupdate_005f4 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
            if (_jspx_eval_sql_005fupdate_005f4 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
              _jspx_push_body_count_sql_005fupdate_005f4[0]++;
              out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_sql_005fupdate_005f4);
            }
            do {
              out.write("\r\n");
              out.write("        \t\t\t update xx_doc_divisions_hierarchy set userId ='");
              out.print(user_name1);
              out.write("' where userId ='");
              out.print(test1);
              out.write("';\r\n");
              out.write("\t\t");
              int evalDoAfterBody = _jspx_th_sql_005fupdate_005f4.doAfterBody();
              if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                break;
            } while (true);
            if (_jspx_eval_sql_005fupdate_005f4 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
              out = _jspx_page_context.popBody();
              _jspx_push_body_count_sql_005fupdate_005f4[0]--;
            }
          }
          if (_jspx_th_sql_005fupdate_005f4.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
            return;
          }
        } catch (java.lang.Throwable _jspx_exception) {
          while (_jspx_push_body_count_sql_005fupdate_005f4[0]-- > 0)
            out = _jspx_page_context.popBody();
          _jspx_th_sql_005fupdate_005f4.doCatch(_jspx_exception);
        } finally {
          _jspx_th_sql_005fupdate_005f4.doFinally();
        }
        _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fvar_005fdataSource.reuse(_jspx_th_sql_005fupdate_005f4);
        _jspx_th_sql_005fupdate_005f4_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sql_005fupdate_005f4, _jsp_getInstanceManager(), _jspx_th_sql_005fupdate_005f4_reused);
      }
      out.write("\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t ");
      //  sql:update
      org.apache.taglibs.standard.tag.rt.sql.UpdateTag _jspx_th_sql_005fupdate_005f5 = (org.apache.taglibs.standard.tag.rt.sql.UpdateTag) _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fvar_005fdataSource.get(org.apache.taglibs.standard.tag.rt.sql.UpdateTag.class);
      boolean _jspx_th_sql_005fupdate_005f5_reused = false;
      try {
        _jspx_th_sql_005fupdate_005f5.setPageContext(_jspx_page_context);
        _jspx_th_sql_005fupdate_005f5.setParent(null);
        // /Admin/updateuser.jsp(185,3) name = dataSource type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_sql_005fupdate_005f5.setDataSource("jdbc/MySQLDB");
        // /Admin/updateuser.jsp(185,3) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_sql_005fupdate_005f5.setVar("rs");
        int[] _jspx_push_body_count_sql_005fupdate_005f5 = new int[] { 0 };
        try {
          int _jspx_eval_sql_005fupdate_005f5 = _jspx_th_sql_005fupdate_005f5.doStartTag();
          if (_jspx_eval_sql_005fupdate_005f5 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
            if (_jspx_eval_sql_005fupdate_005f5 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
              _jspx_push_body_count_sql_005fupdate_005f5[0]++;
              out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_sql_005fupdate_005f5);
            }
            do {
              out.write("\r\n");
              out.write("              \t\t  update xx_approval_workflow set Assigned_To  ='");
              out.print(user_name1);
              out.write("' where Assigned_To ='");
              out.print(test1);
              out.write("';\r\n");
              out.write("\t\t");
              int evalDoAfterBody = _jspx_th_sql_005fupdate_005f5.doAfterBody();
              if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                break;
            } while (true);
            if (_jspx_eval_sql_005fupdate_005f5 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
              out = _jspx_page_context.popBody();
              _jspx_push_body_count_sql_005fupdate_005f5[0]--;
            }
          }
          if (_jspx_th_sql_005fupdate_005f5.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
            return;
          }
        } catch (java.lang.Throwable _jspx_exception) {
          while (_jspx_push_body_count_sql_005fupdate_005f5[0]-- > 0)
            out = _jspx_page_context.popBody();
          _jspx_th_sql_005fupdate_005f5.doCatch(_jspx_exception);
        } finally {
          _jspx_th_sql_005fupdate_005f5.doFinally();
        }
        _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fvar_005fdataSource.reuse(_jspx_th_sql_005fupdate_005f5);
        _jspx_th_sql_005fupdate_005f5_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sql_005fupdate_005f5, _jsp_getInstanceManager(), _jspx_th_sql_005fupdate_005f5_reused);
      }
      out.write("\r\n");
      out.write("\t\t\t \t\r\n");
      out.write("\t\t<div class=\"alert alert-success\" style=\"width: 500px; margin-top: 100px; margin-left: 100px;\">\r\n");
      out.write("\t <strong>Success!</strong> User data has been updated successfully.\r\n");
      out.write("\t <br>\r\n");
      out.write("\t <br>\r\n");
      out.write("\t <center><input class='btn btn-primary' value='OK'  onClick=\"refreshAndClose()\" type='button'/></center>\r\n");
      out.write("\t </div>\r\n");
      out.write("    \r\n");
      out.write("    ");

	if (!Type.equalsIgnoreCase("Others")) {
		if (prof_alert2.equalsIgnoreCase("On")) {
		// Mail code starts from here
//System.out.println("today:"+Date1+"approval date:"+date);			
		 String result, cc1, cc2, id1, no2;
		    // Get recipient's email-ID, message & subject-line from index.html page
		    StringBuffer url =   request.getRequestURL();
			if (!email_old.equalsIgnoreCase(email_id)) {
				cc1=email_old;
				cc2="<br> New Email Id: "+email_id+"<br> Old Email Id: "+email_old;
			} else { 
				cc1=""; cc2="";
			}
			if (!no_old.equalsIgnoreCase(contact_no)) {
				no2="<br> New Contact No: "+contact_no+"<br> Old Contact No: "+no_old;
			} else { 
				no2="";
			}
			if (!user_name1.equalsIgnoreCase(test1)) {
				id1="<br> Old Uder Id: "+test1;
			} else {id1="";}
					
			String pageName1 = url.substring(0, url.lastIndexOf("/"))+"/admn_login.jsp";
		    final String to = email_id;
		    final String subject = "RVNL DOCUMENT PORTAL - Change in User details";
		    final String messg = "<div style='font-family:Georgia; font-size:16px; text-align:justify; line-height:150%;'>To <BR> <b>"+user_name1.toUpperCase()+" </b><br><br> Your portal login details have been modifed as under;"
		     +"<br><BR> New User Id:  "+user_name1+id1+cc2+no2+"<br> Login webpage: <a href=\""+ pageName1+"\">"+pageName1+"</a> <br><br><br><span style='color:brown; font-size:20px; font-style:italic;'<b> RVNL Document Portal</b></span><br><br><span style='color:gray;  font-size:10px; font-style:italic;'>Note: This is a system generated email. Don't reply to system email address i.e. indiarvnl@gmail.com.</span></div>";
		    						
		    // Sender's email ID and password needs to be mentioned
		    final String from = "vibhardwaj55@gmail.com";
		    final String pass = "8899403746";
		    
		    final String cc = cc1;
		    // Defining the gmail host
		    String host = "smtp.gmail.com";
		 
		    // Creating Properties object
		    Properties props = new Properties();
		 
		    // Defining properties
		   
		    props.put("mail.smtp.starttls.enable", "true");
		    props.put("mail.smtp.host", host);
		    props.put("mail.smtp.user", from);
		    props.put("mail.smtp.password", pass);
		    props.put("mail.smtp.port", "587");
		    props.put("mail.smtp.auth", "true");
		 
		    // Authorized the Session object.
		    Session mailSession = Session.getInstance(props, new javax.mail.Authenticator() {
		        @Override
		        protected PasswordAuthentication getPasswordAuthentication() {
		            return new PasswordAuthentication(from, pass);
		        }
		    });
		 
		    try {
		        // Create a default MimeMessage object.
		        MimeMessage message = new MimeMessage(mailSession);
		        // Set From: header field of the header.
		        message.setFrom(new InternetAddress(from));
		        // Set To: header field of the header.
		        message.addRecipient(Message.RecipientType.TO,
		                new InternetAddress(to));
		        message.setRecipients(Message.RecipientType.CC, cc);
		        // Set Subject: header field
		        message.setSubject(subject);
		        // Now set the actual message
		        message.setText(messg);
		        // Send message
		        Transport.send(message);
		        result = "Your mail sent successfully....";
		        System.out.println("Email sent successfully");
		    } catch (MessagingException mex) {
		        mex.printStackTrace();
		        result = "Error: unable to send mail....";
		    }
		 
		    // mail code ends here
		     //SMS code 

try {
//Construct data
//contact number supervisor------contact_No_sup
//contact number sender ------------- supcontact

String usersms = "username=" + "indiarvnl@gmail.com";
String hash = "&hash=" + "60b97ac840106a43c5a0e44fb778276d90330ece5e2da9ad534868c03137636d";
//String apiKey = "apikey=" + "noVebn4XbP0-UFyeK1rRwkvCNdDw5ZXfVqrSNPndk2";
String message = "&message=" + "Please check your email ("+email_id+") for modified login details.\n\nRVNL Document Portal";
String sender = "&sender=" + "RPDAMS";
String numbers = "&numbers=" + ""+contact_no+","+no_old+"";

//Send data
HttpURLConnection connsms = (HttpURLConnection) new java.net.URL("http://api.textlocal.in/send in/?").openConnection();

String data = usersms + hash + numbers + message + sender;
//String data = apiKey + numbers + message + sender;
connsms.setDoOutput(true);
connsms.setRequestMethod("POST");
connsms.setRequestProperty("Content-Length", Integer.toString(data.length()));
connsms.getOutputStream().write(data.getBytes("UTF-8"));
final BufferedReader rd = new BufferedReader(new InputStreamReader(connsms.getInputStream()));
final StringBuffer stringBuffer = new StringBuffer();
String line;
while ((line = rd.readLine()) != null) {
stringBuffer.append(line);
}
rd.close();
System.out.println("Message sent successfully");
//return stringBuffer.toString();
} catch (Exception e) {
System.out.println("Error SMS "+e);
//return "Error "+e;
}					   
//sms code ends here
		}
	}    
         
         
         } else {
			
			
      out.write("\r\n");
      out.write("\t\t\t<div class=\"alert alert-warning\" style=\"width: 500px; margin-top: 100px; margin-left: 100px; text-align:center;\">\r\n");
      out.write("  <strong>Warning!</strong> Data is not Updated Please check it ! <br>\r\n");
      out.write("  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (Trick: re-enter designation)\r\n");
      out.write("<br> <br>\r\n");
      out.write("\t <center><input class='btn btn-primary' value='OK'  onClick=\"refreshAndClose()\" type='button'/></center>\r\n");
      out.write("\t </div>\r\n");
 
		}
		 p1.close();
         conn.close();
	}  catch (Exception ex) { 
	 }
		
            /* finally {
                // close all the connections.
                p1.close();
                conn.close();
            } */
		
	
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
