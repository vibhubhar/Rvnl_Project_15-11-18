/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.86
 * Generated at: 2018-07-31 11:50:52 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.Admin;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import javax.servlet.*;
import java.util.*;
import javax.servlet.http.*;
import javax.naming.*;
import java.sql.*;
import javax.sql.*;
import java.util.Date;
import java.text.SimpleDateFormat;
import javax.mail.*;
import javax.mail.internet.*;
import java.util.*;
import javax.mail.internet.*;
import java.net.URL.*;
import java.io.*;
import java.net.URLEncoder.*;
import java.io.InputStreamReader.*;
import java.net.URLConnection.*;
import java.io.InputStreamReader.*;
import java.io.OutputStreamWriter.*;
import java.net.HttpURLConnection;

public final class returned_005frvnl_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/sessionCheck1.jspf", Long.valueOf(1524567358000L));
    _jspx_dependants.put("/Admin/sessionCheck.jsp", Long.valueOf(1524567356000L));
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fvar_005fdataSource;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fvar_005fdataSource = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
    _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fvar_005fdataSource.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 1120256, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

 
int timeout = session.getMaxInactiveInterval();
response.setHeader("Refresh", timeout + "; URL = admn_login.jsp");

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write(" ");
 

int timeout1 = session.getMaxInactiveInterval();
response.setHeader("Refresh", timeout1 + "; URL = admn_login.jsp");

if(((String)session.getAttribute("user_name"))==null)
       {
           
	response.sendRedirect("admn_login.jsp");
           
       }
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=iso-8859-1\" />\r\n");
      out.write("<title>Create User</title>\r\n");
      out.write("<link href=\"resources/css/main.css\" rel=\"stylesheet\" type=\"text/css\">\r\n");
      out.write("<link href=\"resources/bootstrap/css/bootstrap.min.css\" rel=\"stylesheet\"/>\r\n");
      out.write("<link\r\n");
      out.write("\thref=\"http://ajax.aspnetcdn.com/ajax/jquery.ui/1.8.9/themes/blitzer/jquery-ui.css\"\r\n");
      out.write("\trel=\"stylesheet\" type=\"text/css\" />\r\n");
      out.write("<link href=\"resources/bootstrap/css/bootstrap.css\" rel=\"stylesheet\"/>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script src=\"resources/JS/backButton.js\"></script>\r\n");
      out.write("<script src=\"resources/JS/validateSysAdmin230.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\"\r\n");
      out.write("\tsrc=\"https://code.jquery.com/jquery-1.12.4.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\"\r\n");
      out.write("\tsrc=\"https://code.jquery.com/ui/1.12.1/jquery-ui.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\"\r\n");
      out.write("\tsrc=\"http://ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js\"></script>\r\n");
      out.write("<script\r\n");
      out.write("\tsrc=\"http://ajax.aspnetcdn.com/ajax/jquery.ui/1.8.9/jquery-ui.js\"\r\n");
      out.write("\ttype=\"text/javascript\"></script>\r\n");
      out.write("<script src=\"resources/JS/PIU_depend230.js\"></script>\r\n");
      out.write("<script src=\"resources/JS/Approval_wf230.js\"></script>\r\n");
      out.write("<script src=\"resources/JS/Headquarter.js\"></script>\r\n");
      out.write("<script src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\r\n");
      out.write("$(document).ready(function(){\r\n");
      out.write("\r\n");
      out.write("$(\"input[name$='forwardr']\").click(function() {\r\n");
      out.write("        var test = $(this).val();\r\n");
      out.write("\r\n");
      out.write("        $(\"div.desc\").hide();\r\n");
      out.write("        $(\"#Fwd\"+test).show();\r\n");
      out.write("    });\r\n");
      out.write("});\r\n");
      out.write("</script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("function refreshAndClose()\r\n");
      out.write("{\r\n");
      out.write("    window.close();\r\n");
      out.write("    if (window.opener && !window.opener.closed) \r\n");
      out.write("    {\r\n");
      out.write("      window.opener.location.reload();\r\n");
      out.write("    }\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("    window.onunload = refreshParent;\r\n");
      out.write("    function refreshParent() {\r\n");
      out.write("        window.opener.location.reload();\r\n");
      out.write("    }\r\n");
      out.write("</script>\r\n");
      out.write("<style>.boxed {\r\n");
      out.write("  border: 1px solid black ;\r\n");
      out.write("}</style>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<form id='Forward' name='Forward'>\r\n");
      out.write("<INPUT TYPE=\"HIDDEN\" NAME=\"Doc_Id\" id=\"docid\">\r\n");
      out.write("<INPUT TYPE=\"HIDDEN\" NAME=\"Division1\" id=\"division1\">\r\n");
      out.write("<INPUT TYPE=\"HIDDEN\" NAME=\"Department\" id=\"department\">\r\n");
      out.write("<INPUT TYPE=\"HIDDEN\" NAME=\"Designation\" id=\"designation\">\r\n");
      out.write("<INPUT TYPE=\"HIDDEN\" NAME=\"submited\" id=\"submited\">\r\n");
      out.write("<INPUT TYPE=\"HIDDEN\" NAME=\"finalsubmited\" id=\"finalsubmited\">\r\n");
      out.write("<INPUT TYPE=\"HIDDEN\" NAME=\"usern\" id=\"usern\">\r\n");
      out.write("<INPUT TYPE=\"HIDDEN\" NAME=\"docdivision\" id=\"docdivision\">\t\r\n");
      out.write("<INPUT TYPE=\"HIDDEN\" NAME=\"touser\" id=\"touser\">\r\n");
      out.write("<INPUT TYPE=\"HIDDEN\" NAME=\"action\" id=\"action\">\r\n");
      out.write("<INPUT TYPE=\"HIDDEN\" NAME=\"approvalDate\" id=\"approvalDate\">\r\n");
      out.write("<INPUT TYPE=\"HIDDEN\" NAME=\"remarks\" id=\"remarks\">\r\n");
      out.write("\r\n");
      out.write("\r\n");

String Doc_Id =request.getParameter("Doc_Id");
String Doc_no =request.getParameter("Doc_no");
String RequestedBy =request.getParameter("RequestedBy");
String usern =request.getParameter("usern");
String docdivision=request.getParameter("division");
String actiontaken=request.getParameter("action");
String approvaldate1=request.getParameter("approvalDate");
String remark = request.getParameter("remark");


String zone="";
String user = (String)session.getAttribute("user_name");


      out.write("\r\n");
      out.write("\r\n");
      //  c:if
      org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
      boolean _jspx_th_c_005fif_005f0_reused = false;
      try {
        _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
        _jspx_th_c_005fif_005f0.setParent(null);
        // /Admin/returned_rvnl.jsp(120,0) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${param.submited == null }", java.lang.Boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false)).booleanValue());
        int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
        if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("\r\n");
            out.write("<!-- &nbsp;&nbsp;&nbsp;<INPUT TYPE=\"radio\" NAME=\"forwardr\" VALUE=\"3\" checked=\"checked\" />\r\n");
            out.write("Zonal Headquarter-->\r\n");
            out.write("&nbsp;&nbsp;&nbsp;&nbsp;\r\n");
            out.write("<INPUT TYPE=\"radio\" NAME=\"forwardr\" VALUE=\"1\" checked />\r\n");
            out.write("Resubmit\r\n");
            out.write("&nbsp;&nbsp;&nbsp;&nbsp;\r\n");
            out.write("<!-- <INPUT TYPE=\"radio\" NAME=\"forwardr\" VALUE=\"2\"/> \r\n");
            out.write("Intra Zone-->\r\n");
            out.write("&nbsp;&nbsp;&nbsp;&nbsp;\r\n");
            out.write("<!-- <INPUT TYPE=\"radio\" NAME=\"forwardr\" VALUE=\"4\"/>\r\n");
            out.write("Final Approval -->\r\n");
            out.write("<div id=\"Fwd1\" class=\"desc\" >\r\n");

Connection conn = null;
Statement stmt = null;
ResultSet rs = null, rs1 = null, rs3 = null,rs4=null,rs5=null,rs12=null;
PreparedStatement ps1 = null, ps3 = null,ps4=null,ps5=null,ps12=null;
try {
	Context initCtx = new InitialContext();
	Context envCtx = (Context) initCtx.lookup("java:comp/env");
	DataSource ds = (DataSource) envCtx.lookup("jdbc/MySQLDB");

	conn = ds.getConnection();

String hierarchyidq="select HierarchyType,Zone_HierarchyId,Division_HierarchyId from xx_document_mapping where Document_Map_ID="+Doc_Id;
PreparedStatement divPShier = conn.prepareStatement(hierarchyidq);
ResultSet divRShier = divPShier.executeQuery();
String ZoneHierarchyid=null,DivisionHierarchyid=null,userlist=null;
if (divRShier.next()){

            out.write("\r\n");
            out.write("<div class=\"boxed\" style=\"18px 0px 27px 22px;margin-left: 19px;margin-top: 10px;\">\r\n");


if(divRShier.getString("HierarchyType").equalsIgnoreCase("Both")){
ZoneHierarchyid=divRShier.getString("Zone_HierarchyId");
DivisionHierarchyid=divRShier.getString("Division_HierarchyId");
String sqlq2 ="select * from xx_doc_divisions_hierarchy where userid!='"+user+"' and Hierarchy_id="+DivisionHierarchyid;
Statement stmt3 = conn.createStatement();
ResultSet rs32 = stmt3.executeQuery(sqlq2);
while(rs32.next()){
userlist=rs32.getString("userid");

            out.write("\r\n");
            out.write("<input TYPE=radio name=userid VALUE='");
            out.print(userlist);
            out.write("' > ");
            out.print(userlist);
            out.write(" <BR> \r\n");

}
String sqlq21 ="select * from xx_doc_zones_hierarchy where userid!='"+user+"' and Hierarchy_id="+ZoneHierarchyid;
Statement stmt31 = conn.createStatement();
ResultSet rs31 = stmt31.executeQuery(sqlq21);
while(rs31.next()){
userlist=rs31.getString("userid"); 

            out.write("\r\n");
            out.write("\r\n");
            out.write("<input TYPE=radio name=userid VALUE='");
            out.print(userlist);
            out.write("' > ");
            out.print(userlist);
            out.write(" <BR> \r\n");
            out.write("\r\n");

}

}else if(divRShier.getString("HierarchyType").equalsIgnoreCase("Zone")){
	ZoneHierarchyid=divRShier.getString("Zone_HierarchyId");
	
	String sqlq21 ="select * from xx_doc_zones_hierarchy where userid!='"+user+"' and Hierarchy_id="+ZoneHierarchyid;
	Statement stmt31 = conn.createStatement();
	ResultSet rs31 = stmt31.executeQuery(sqlq21);
	
	while(rs31.next()){
	userlist=rs31.getString("userid");
	
	
            out.write("\r\n");
            out.write("\t\r\n");
            out.write("\t<input TYPE=radio name=userid VALUE='");
            out.print(userlist);
            out.write("' > ");
            out.print(userlist);
            out.write(" <BR>\r\n");
            out.write("\t\r\n");
            out.write("\t");

	}

}else {
	DivisionHierarchyid=divRShier.getString("Division_HierarchyId");
	String sqlq2 ="select * from xx_doc_divisions_hierarchy where userid!='"+user+"' and Hierarchy_id="+DivisionHierarchyid;
	Statement stmt3 = conn.createStatement();
	ResultSet rs32 = stmt3.executeQuery(sqlq2);
	
	while(rs32.next()){
	userlist=rs32.getString("userid");
	
	
            out.write("\r\n");
            out.write("\t\r\n");
            out.write("\t<input TYPE=radio name=userid VALUE='");
            out.print(userlist);
            out.write("' > ");
            out.print(userlist);
            out.write(" <BR>\r\n");
            out.write("\t\r\n");
            out.write("\t");

	}
	
	
}
}					
					
					
            out.write("\r\n");
            out.write("\t\t\t\t\t</div>\r\n");
            out.write("\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b>Resubmit with Remarks</b>\r\n");
            out.write("\t\t\t\t\t\r\n");
            out.write("\t\t\t\t\t<br>\r\n");
            out.write("\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<textarea name=\"remark\" id=\"remark\" maxlength=\"500\" rows=\"5\" cols=\"50\" name=\"comment\" placeholder=\"Enter Remarks\"></textarea>\r\n");
            out.write("\t\t\t\t<br>\r\n");
            out.write("\t\t\t\t<br>\r\n");
            out.write("\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<button type=\"button\" class=\"btn btn-primary\" onclick=\"ReSubmited('");
            out.print(Doc_Id);
            out.write('\'');
            out.write(',');
            out.write('\'');
            out.print(usern);
            out.write("','1','");
            out.print(actiontaken);
            out.write('\'');
            out.write(',');
            out.write('\'');
            out.print(approvaldate1);
            out.write("')\">Submit</button> \r\n");
            out.write("\t\t\t\t\r\n");
            out.write("\t\t\t\t</div>\r\n");
            out.write("\t\t\t\t\t<!-- </div> -->\r\n");
            out.write("\t\t\t\t\t\t\r\n");
            out.write("\t<div id=\"Fwd2\" class=\"desc\" style='display:none; '>\r\n");
            out.write("\t<br>\r\n");
            out.write("\t");

	
	String zone_id=null;
	String div_sql = "select division_id from xx_divisions_master where xx_divisions_master.division_name='"+docdivision+"'";
	PreparedStatement divPS = conn.prepareStatement(div_sql);
	
	
	ResultSet divRS = divPS.executeQuery();
	while(divRS.next()){
		
		String zonid_sql = "select Ext_Zone_Id from xx_divisions_map where Division_Id='"+divRS.getString("division_id")+"'";
		PreparedStatement zonidPS = conn.prepareStatement(zonid_sql);
		
		
		ResultSet zonidRS = zonidPS.executeQuery();
		while(zonidRS.next()){
			zone_id=zonidRS.getString("Ext_Zone_Id");
			String zon_sql = "select Zone_Name from xx_zones_master where Zone_Id='"+zonidRS.getString("Ext_Zone_Id")+"'";
			PreparedStatement zonPS = conn.prepareStatement(zon_sql);
			ResultSet zonRS = zonPS.executeQuery();
			while(zonRS.next()){
			zone=zonRS.getString("Zone_Name");
			
			}
		
		}
		
	}
	
	
            out.write("\r\n");
            out.write("\t\r\n");
            out.write("\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Zone:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;");
            out.print(zone );
            out.write("\r\n");
            out.write("\t\r\n");
            out.write("\t<br>\r\n");
            out.write("\t<br>\r\n");
            out.write("\t<div style='vertical-align: baseline; padding: 10px; margin: 20px;'>\t   \r\n");
            out.write("\t\t\t\t\t");

					
					String zone_sql2="select * from xx_user_master where Zone_ID='"+zone_id+"' and Division_Id= 86";
					PreparedStatement zonPS1 = conn.prepareStatement(zone_sql2);
					ResultSet zonRS1 = zonPS1.executeQuery();
					String userid1=null;
					while(zonRS1.next()){
						
						userid1=zonRS1.getString("User_name");
						
						
            out.write("\r\n");
            out.write("\t\t\t\t\t\t\r\n");
            out.write("\t\t\t\t\t\t<input TYPE=radio name=userid VALUE='");
            out.print(userid1);
            out.write('\'');
            out.write('>');
            out.write(' ');
            out.print(userid1);
            out.write(" <BR>\r\n");
            out.write("\t\t\t\t\t\t");

					
					}
					
					
            out.write("\t\t   \r\n");
            out.write("\t\t\r\n");
            out.write("\t\t\r\n");
            out.write("\t\t</div>\r\n");
            out.write("\t\t\t\t<br /> <br />\r\n");
            out.write("\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b>Resubmit with Remarks</b>\r\n");
            out.write("\t\t\t\t\t<br>\r\n");
            out.write("\t\t\t\t\t<br>\r\n");
            out.write("\t\t\t\t\t<br>\r\n");
            out.write("\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<textarea name=\"remark\" id=\"remark\" maxlength=\"500\" rows=\"10\" cols=\"50\" name=\"comment\" placeholder=\"Enter Remarks\"></textarea>\r\n");
            out.write("\t\t\t\t<br>\r\n");
            out.write("\t\t\t\t<br>\r\n");
            out.write("\t\t\t\t<br>\r\n");
            out.write("\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n");
            out.write("\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n");
            out.write("\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<button type=\"button\" class=\"btn btn-primary\" onclick=\"Submit('");
            out.print(Doc_Id);
            out.write('\'');
            out.write(',');
            out.write('\'');
            out.print(usern);
            out.write("','9','");
            out.print(actiontaken);
            out.write('\'');
            out.write(',');
            out.write('\'');
            out.print(approvaldate1);
            out.write("')\">Submit</button>\r\n");
            out.write("\t</div>\t\t\t\t\t\r\n");
            out.write("\t\r\n");
            out.write("\t\t\t\t\t\t\r\n");
            out.write("<div id=\"Fwd3\" class=\"desc\" style='display:none;'>\r\n");


            out.write("\r\n");
            out.write("<br>\r\n");
            out.write("&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Zone:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n");
            out.write("\t\t\t\t   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n");
            out.write("<select name=zones id=\"zones\" style=\"width: 205px\">\r\n");
            out.write("\t<option value=\"none\">-- Select Zone --</option>\r\n");

String querypkg="select Package_ID from xx_document_mapping where xx_document_mapping.Document_Map_ID = '"+Doc_Id+"'";
PreparedStatement ps=conn.prepareStatement(querypkg);
ResultSet rspkg=ps.executeQuery();
rspkg.next();
String pkgid=rspkg.getString("Package_ID");
String queryzonid="select distinct zone_id from xx_project_division_map where Package_ID='"+pkgid+"'";
PreparedStatement pszon=conn.prepareStatement(queryzonid);
ResultSet rszon=pszon.executeQuery();
while(rszon.next()){
String zoned =rszon.getString("zone_id");
String queryzonename="select Zone_Name from xx_zones_master where zone_id='"+zoned+"'";
PreparedStatement pszonename=conn.prepareStatement(queryzonename);
ResultSet rszonename=pszonename.executeQuery();
while (rszonename.next()){
String namez=rszonename.getString("Zone_Name");

            out.write("\r\n");
            out.write("<option value=\"zoned\">");
            out.print(namez );
            out.write("</option>\r\n");

}
}
}catch(Exception e){
						e.printStackTrace();
					}	finally {
					    try { conn.close(); } catch (Exception e) { /* ignored */ }
					}

            out.write("\r\n");
            out.write("</select>\r\n");
            out.write("<br>\r\n");
            out.write("<br>\r\n");
            out.write("&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n");
            out.write("\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n");
            out.write("\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<button type=\"button\" class=\"btn btn-primary\" onclick=\"zonalhq('");
            out.print(Doc_Id);
            out.write('\'');
            out.write(',');
            out.write('\'');
            out.print(usern);
            out.write("')\">Submit</button>\r\n");
            out.write("</div>\t\t\t\t\t\t\r\n");
            out.write("\t\t\t\t\t\t\r\n");
            out.write("\t\t\t\t\t\t\r\n");
            out.write("\t\t\t\t\t\t<div id=\"Fwd4\" class=\"desc\" style='display:none;'>\r\n");
            out.write("\t\t\t\t\t\t<br>\r\n");
            out.write("<br>\r\n");
            out.write("&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n");
            out.write("\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n");
            out.write("\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<button type=\"button\" class=\"btn btn-primary\" onclick=\"finalapproval('");
            out.print(Doc_Id);
            out.write('\'');
            out.write(',');
            out.write('\'');
            out.print(user);
            out.write("')\">Approved</button>\r\n");
            out.write("\t\t\t\t\t\t</div>\r\n");
            out.write("\t\t\t");
            int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
        _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
        _jspx_th_c_005fif_005f0_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
      }
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\t");
      //  c:if
      org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f1 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
      boolean _jspx_th_c_005fif_005f1_reused = false;
      try {
        _jspx_th_c_005fif_005f1.setPageContext(_jspx_page_context);
        _jspx_th_c_005fif_005f1.setParent(null);
        // /Admin/returned_rvnl.jsp(355,4) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_c_005fif_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${param.submited == 'true'}", java.lang.Boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false)).booleanValue());
        int _jspx_eval_c_005fif_005f1 = _jspx_th_c_005fif_005f1.doStartTag();
        if (_jspx_eval_c_005fif_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("\t\t\t\t");

				
				Date date =new SimpleDateFormat("dd/MM/yyyy").parse(approvaldate1);
				java.sql.Date approvaldate = new java.sql.Date(date.getTime());
				
				String doc_action_alert2=(String)session.getAttribute("doc_action_Alert");
				String touser =request.getParameter("touser");
				String Doc_Id1 =request.getParameter("Doc_Id");
				
				Connection conn1 = null;
				String daysfinal=null;
				Statement stmt1 = null;
				ResultSet rs1x = null, rs11 = null, rs31 = null,rs41=null,rs51=null,rs121=null;
				PreparedStatement ps11 = null, ps31 = null,ps41=null,ps51=null,ps121=null;
				try {
					Context initCtx = new InitialContext();
					Context envCtx = (Context) initCtx.lookup("java:comp/env");
					DataSource ds = (DataSource) envCtx.lookup("jdbc/MySQLDB");
					conn1 = ds.getConnection();
					// getting days final
					String docname1 = "select Days from xx_doc_divisions_hierarchy where Document_id='"
							+ Doc_Id1 + "' and userid='"+touser+"'";
					
					PreparedStatement docnamep1 = conn1
							.prepareStatement(docname1);
					ResultSet rsdoc1 = docnamep1.executeQuery();
					while (rsdoc1.next()) {
						 daysfinal=rsdoc1.getString("Days");						
					
					}
					
					if(daysfinal==null){
					String docname2 = "select Days from xx_doc_zones_hierarchy where Document_id='"
							+ Doc_Id1 + "' and userid='"+touser+"'";
					System.out.println("Second query----"+docname2);
					PreparedStatement docnamep2 = conn1
							.prepareStatement(docname2);
					ResultSet rsdoc2 = docnamep2.executeQuery();
					while (rsdoc2.next()) {
						 daysfinal=rsdoc2.getString("Days");						
					
				            	}
					}
					
					if(daysfinal==null){
						daysfinal="3";
					}
					int daysofapproval1=Integer.parseInt(daysfinal) ;	
					int daysofapproval=daysofapproval1+1;
					String sql2 = "select MAX(Level) from xx_approval_workflow where Document_id='"+Doc_Id1+"'";
					ps11 = conn1.prepareStatement(sql2);
					rs11 = ps11.executeQuery();
					rs11.next();
					int level=rs11.getInt(1);
					level=level+1;
					String sql7 = "select Added_byUser from xx_approval_workflow where Document_id='"+Doc_Id1+"'";
					PreparedStatement ps71 = conn1.prepareStatement(sql7);
					ResultSet rs71 = ps71.executeQuery();
					rs71.next();
					String added_by=rs71.getString(1);
					
					  Statement insertStmt=(Statement) conn1.createStatement();
			        	
			        		Calendar calendar = Calendar.getInstance();
							  
							   java.util.Date currentDate = calendar.getTime();

							   java.sql.Date date11 = new java.sql.Date(currentDate.getTime());
						
						       
						       //get addition of days
						    
		calendar.setTime(date11);
		SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
		calendar.add(Calendar.DATE, -daysofapproval1);
		String cDate1= sdf.format(calendar.getTime());
		java.util.Date Date1 = sdf.parse(cDate1);
		String resubDate= sdf.format(date);
		//java.util.Date currentDate1 = calendar.getTime();
		//java.sql.Date maildate =  new java.sql.Date(currentDate1.getTime());
					
			        	String	insertStg ="insert into xx_approval_workflow (Document_id,Added_byUser,division_hierarchy_id,Assigned_To,Action,level,CurrentDate,AssignedDays) Values ("+Doc_Id1+",'"+added_by+"',"+0+",'"+touser+"','N',"+level+",'"+approvaldate+"','"+daysofapproval+"')";
			        		insertStmt.executeUpdate(insertStg);
			        		
			        		
			        		
			       
			       
			       
            out.write("\r\n");
            out.write("\t\t\t        ");
            //  sql:update
            org.apache.taglibs.standard.tag.rt.sql.UpdateTag _jspx_th_sql_005fupdate_005f0 = (org.apache.taglibs.standard.tag.rt.sql.UpdateTag) _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fvar_005fdataSource.get(org.apache.taglibs.standard.tag.rt.sql.UpdateTag.class);
            boolean _jspx_th_sql_005fupdate_005f0_reused = false;
            try {
              _jspx_th_sql_005fupdate_005f0.setPageContext(_jspx_page_context);
              _jspx_th_sql_005fupdate_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f1);
              // /Admin/returned_rvnl.jsp(445,11) name = dataSource type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_sql_005fupdate_005f0.setDataSource("jdbc/MySQLDB");
              // /Admin/returned_rvnl.jsp(445,11) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_sql_005fupdate_005f0.setVar("rs");
              int[] _jspx_push_body_count_sql_005fupdate_005f0 = new int[] { 0 };
              try {
                int _jspx_eval_sql_005fupdate_005f0 = _jspx_th_sql_005fupdate_005f0.doStartTag();
                if (_jspx_eval_sql_005fupdate_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                  if (_jspx_eval_sql_005fupdate_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                    _jspx_push_body_count_sql_005fupdate_005f0[0]++;
                    out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_sql_005fupdate_005f0);
                  }
                  do {
                    out.write("\r\n");
                    out.write("       update xx_approval_workflow set action ='Y' where document_id =");
                    out.print(Doc_Id1);
                    out.write(" and level ='");
                    out.print(level-1);
                    out.write("'\r\n");
                    out.write("     ");
                    int evalDoAfterBody = _jspx_th_sql_005fupdate_005f0.doAfterBody();
                    if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                      break;
                  } while (true);
                  if (_jspx_eval_sql_005fupdate_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                    out = _jspx_page_context.popBody();
                    _jspx_push_body_count_sql_005fupdate_005f0[0]--;
                  }
                }
                if (_jspx_th_sql_005fupdate_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                  return;
                }
              } catch (java.lang.Throwable _jspx_exception) {
                while (_jspx_push_body_count_sql_005fupdate_005f0[0]-- > 0)
                  out = _jspx_page_context.popBody();
                _jspx_th_sql_005fupdate_005f0.doCatch(_jspx_exception);
              } finally {
                _jspx_th_sql_005fupdate_005f0.doFinally();
              }
              _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fvar_005fdataSource.reuse(_jspx_th_sql_005fupdate_005f0);
              _jspx_th_sql_005fupdate_005f0_reused = true;
            } finally {
              org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sql_005fupdate_005f0, _jsp_getInstanceManager(), _jspx_th_sql_005fupdate_005f0_reused);
            }
            out.write("\t\t\r\n");
            out.write("\t");
            //  sql:update
            org.apache.taglibs.standard.tag.rt.sql.UpdateTag _jspx_th_sql_005fupdate_005f1 = (org.apache.taglibs.standard.tag.rt.sql.UpdateTag) _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fvar_005fdataSource.get(org.apache.taglibs.standard.tag.rt.sql.UpdateTag.class);
            boolean _jspx_th_sql_005fupdate_005f1_reused = false;
            try {
              _jspx_th_sql_005fupdate_005f1.setPageContext(_jspx_page_context);
              _jspx_th_sql_005fupdate_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f1);
              // /Admin/returned_rvnl.jsp(448,1) name = dataSource type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_sql_005fupdate_005f1.setDataSource("jdbc/MySQLDB");
              // /Admin/returned_rvnl.jsp(448,1) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_sql_005fupdate_005f1.setVar("rs");
              int[] _jspx_push_body_count_sql_005fupdate_005f1 = new int[] { 0 };
              try {
                int _jspx_eval_sql_005fupdate_005f1 = _jspx_th_sql_005fupdate_005f1.doStartTag();
                if (_jspx_eval_sql_005fupdate_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                  if (_jspx_eval_sql_005fupdate_005f1 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                    _jspx_push_body_count_sql_005fupdate_005f1[0]++;
                    out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_sql_005fupdate_005f1);
                  }
                  do {
                    out.write("\r\n");
                    out.write("\tupdate xx_record_actions set ActionPerformed='Resubmitted',Information='");
                    out.print(remark);
                    out.write("', ActionedOn='");
                    out.print(approvaldate);
                    out.write("',Real_ActionDate=now() where Document_id='");
                    out.print(Doc_Id1);
                    out.write("' and ActionPerformedBy='");
                    out.print(usern);
                    out.write("' and ActionPerformed='pending' \r\n");
                    out.write("\t\r\n");
                    int evalDoAfterBody = _jspx_th_sql_005fupdate_005f1.doAfterBody();
                    if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                      break;
                  } while (true);
                  if (_jspx_eval_sql_005fupdate_005f1 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                    out = _jspx_page_context.popBody();
                    _jspx_push_body_count_sql_005fupdate_005f1[0]--;
                  }
                }
                if (_jspx_th_sql_005fupdate_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                  return;
                }
              } catch (java.lang.Throwable _jspx_exception) {
                while (_jspx_push_body_count_sql_005fupdate_005f1[0]-- > 0)
                  out = _jspx_page_context.popBody();
                _jspx_th_sql_005fupdate_005f1.doCatch(_jspx_exception);
              } finally {
                _jspx_th_sql_005fupdate_005f1.doFinally();
              }
              _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fvar_005fdataSource.reuse(_jspx_th_sql_005fupdate_005f1);
              _jspx_th_sql_005fupdate_005f1_reused = true;
            } finally {
              org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sql_005fupdate_005f1, _jsp_getInstanceManager(), _jspx_th_sql_005fupdate_005f1_reused);
            }
            out.write("\t\t\r\n");
            //  sql:update
            org.apache.taglibs.standard.tag.rt.sql.UpdateTag _jspx_th_sql_005fupdate_005f2 = (org.apache.taglibs.standard.tag.rt.sql.UpdateTag) _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fvar_005fdataSource.get(org.apache.taglibs.standard.tag.rt.sql.UpdateTag.class);
            boolean _jspx_th_sql_005fupdate_005f2_reused = false;
            try {
              _jspx_th_sql_005fupdate_005f2.setPageContext(_jspx_page_context);
              _jspx_th_sql_005fupdate_005f2.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f1);
              // /Admin/returned_rvnl.jsp(452,0) name = dataSource type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_sql_005fupdate_005f2.setDataSource("jdbc/MySQLDB");
              // /Admin/returned_rvnl.jsp(452,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_sql_005fupdate_005f2.setVar("rs");
              int[] _jspx_push_body_count_sql_005fupdate_005f2 = new int[] { 0 };
              try {
                int _jspx_eval_sql_005fupdate_005f2 = _jspx_th_sql_005fupdate_005f2.doStartTag();
                if (_jspx_eval_sql_005fupdate_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                  if (_jspx_eval_sql_005fupdate_005f2 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                    _jspx_push_body_count_sql_005fupdate_005f2[0]++;
                    out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_sql_005fupdate_005f2);
                  }
                  do {
                    out.write("\r\n");
                    out.write("  insert into xx_record_actions (Document_id,CurrentDate,ActionPerformed,ActionPerformedBy, AssignedDays,Real_ActionDate) Values ('");
                    out.print(Doc_Id1);
                    out.write('\'');
                    out.write(',');
                    out.write('\'');
                    out.print(approvaldate);
                    out.write("','pending','");
                    out.print(touser);
                    out.write('\'');
                    out.write(',');
                    out.write('\'');
                    out.print(daysofapproval);
                    out.write("', now())\r\n");
                    int evalDoAfterBody = _jspx_th_sql_005fupdate_005f2.doAfterBody();
                    if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                      break;
                  } while (true);
                  if (_jspx_eval_sql_005fupdate_005f2 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                    out = _jspx_page_context.popBody();
                    _jspx_push_body_count_sql_005fupdate_005f2[0]--;
                  }
                }
                if (_jspx_th_sql_005fupdate_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                  return;
                }
              } catch (java.lang.Throwable _jspx_exception) {
                while (_jspx_push_body_count_sql_005fupdate_005f2[0]-- > 0)
                  out = _jspx_page_context.popBody();
                _jspx_th_sql_005fupdate_005f2.doCatch(_jspx_exception);
              } finally {
                _jspx_th_sql_005fupdate_005f2.doFinally();
              }
              _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fvar_005fdataSource.reuse(_jspx_th_sql_005fupdate_005f2);
              _jspx_th_sql_005fupdate_005f2_reused = true;
            } finally {
              org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sql_005fupdate_005f2, _jsp_getInstanceManager(), _jspx_th_sql_005fupdate_005f2_reused);
            }
            out.write("\r\n");
            out.write("\r\n");
            //  sql:update
            org.apache.taglibs.standard.tag.rt.sql.UpdateTag _jspx_th_sql_005fupdate_005f3 = (org.apache.taglibs.standard.tag.rt.sql.UpdateTag) _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fvar_005fdataSource.get(org.apache.taglibs.standard.tag.rt.sql.UpdateTag.class);
            boolean _jspx_th_sql_005fupdate_005f3_reused = false;
            try {
              _jspx_th_sql_005fupdate_005f3.setPageContext(_jspx_page_context);
              _jspx_th_sql_005fupdate_005f3.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f1);
              // /Admin/returned_rvnl.jsp(456,0) name = dataSource type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_sql_005fupdate_005f3.setDataSource("jdbc/MySQLDB");
              // /Admin/returned_rvnl.jsp(456,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_sql_005fupdate_005f3.setVar("rs");
              int[] _jspx_push_body_count_sql_005fupdate_005f3 = new int[] { 0 };
              try {
                int _jspx_eval_sql_005fupdate_005f3 = _jspx_th_sql_005fupdate_005f3.doStartTag();
                if (_jspx_eval_sql_005fupdate_005f3 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                  if (_jspx_eval_sql_005fupdate_005f3 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                    _jspx_push_body_count_sql_005fupdate_005f3[0]++;
                    out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_sql_005fupdate_005f3);
                  }
                  do {
                    out.write("\r\n");
                    out.write("update xx_moreammendments set status ='resubmitted' where document_id =");
                    out.print(Doc_Id1);
                    out.write('\r');
                    out.write('\n');
                    int evalDoAfterBody = _jspx_th_sql_005fupdate_005f3.doAfterBody();
                    if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                      break;
                  } while (true);
                  if (_jspx_eval_sql_005fupdate_005f3 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                    out = _jspx_page_context.popBody();
                    _jspx_push_body_count_sql_005fupdate_005f3[0]--;
                  }
                }
                if (_jspx_th_sql_005fupdate_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                  return;
                }
              } catch (java.lang.Throwable _jspx_exception) {
                while (_jspx_push_body_count_sql_005fupdate_005f3[0]-- > 0)
                  out = _jspx_page_context.popBody();
                _jspx_th_sql_005fupdate_005f3.doCatch(_jspx_exception);
              } finally {
                _jspx_th_sql_005fupdate_005f3.doFinally();
              }
              _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fvar_005fdataSource.reuse(_jspx_th_sql_005fupdate_005f3);
              _jspx_th_sql_005fupdate_005f3_reused = true;
            } finally {
              org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sql_005fupdate_005f3, _jsp_getInstanceManager(), _jspx_th_sql_005fupdate_005f3_reused);
            }
            out.write('\r');
            out.write('\n');
  
      String user1 = null, docno=null, subdate=null, documentname=null,documenttype=null,emailidsup=null,contact_No_sup=null,supemailid=null,supcontact=null,user_id=null;
		user1 = (String) session.getAttribute("user_name");
		
      String docname = "select Document_Number, Document_Name,Document_Type, Date_Of_Submission from xx_document_mapping where Document_Map_ID='"
				+ Doc_Id1 + "'";
		PreparedStatement docnamep = conn1
				.prepareStatement(docname);
		ResultSet rsdoc = docnamep.executeQuery();
		while (rsdoc.next()) {
			 docno = rsdoc.getString("Document_Number");
			 documentname = rsdoc.getString("Document_Name");
			 documenttype = rsdoc.getString("Document_Type");
			// subdate = rsdoc.getString("Date_of_Submission");
		}
		
		String emailq = "select Email_Id,Contact_No from xx_user_master where User_name='"
				+ touser + "'";

		PreparedStatement emailp = conn1
				.prepareStatement(emailq);
		ResultSet emailr = emailp.executeQuery();
		while (emailr.next()) {
			emailidsup = emailr.getString("Email_Id");
			contact_No_sup = emailr.getString("Contact_No");
			 
		}
		
		String supervisoremail = "select Email_Id,Contact_No from xx_user_master where User_name='"
				+ user1 + "'";

		PreparedStatement supervisorp = conn1
				.prepareStatement(supervisoremail);
		ResultSet supervisorr = supervisorp.executeQuery();
		while (supervisorr.next()) {
			supemailid = supervisorr.getString("Email_Id");
			supcontact = supervisorr.getString("Contact_No");
		 
		}

//end of email id code

      // Mail code starts from here
      System.out.println("1...today:"+Date1+"approval date:"+date);
		if (Date1.compareTo(date)<=0 && doc_action_alert2.equalsIgnoreCase("on")) {			
					 String result;
					    // Get recipient's email-ID, message & subject-line from index.html page
					    
					    final String to = emailidsup;
					    final String subject = "RVNL DOCUMENT PORTAL";
					    final String messg = "<div style='font-family:Georgia; font-size:16px; text-align:justify; line-height:150%;'>To <BR> <b>"+touser.toUpperCase()+" </b><br><br>"+user1+"/RVNL has resubmitted a document/drawing for your approval and further necessary action please. The details of the document/drawing are as under:<br><BR> Document No:  "+docno+"<BR> Document Name:  "+documentname+" <BR> Document Type:  "+documenttype+"<br>Re-submission Date: "+resubDate+" <br>Target Time of days: "+daysofapproval1+" <br><br><br> <span style='color:brown; font-size:20px; font-style:italic;'<b> RVNL Document Portal</b></span><br><br><span style='color:gray;  font-size:10px; font-style:italic;'>Note: This is a system generated email. Don't reply to system email address i.e. indiarvnl@gmail.com.</span></div>";
	
					
					    // Sender's email ID and password needs to be mentioned
					    final String from = "indiarvnl@gmail.com";
					    final String pass = "vsam3WSCJAIw4cj7";
					    
					    final String cc = supemailid;
					    // Defining the gmail host
					    String host = "smtp-relay.sendinblue.com";
					 
					    // Creating Properties object
					    Properties props = new Properties();
					 
					    // Defining properties
					   
					    props.put("mail.smtp.starttls.enable", "true");
					    props.put("mail.smtp.host", host);
					    props.put("mail.smtp.user", from);
					    props.put("mail.smtp.password", pass);
					    props.put("mail.smtp.port", "587");
					    props.put("mail.smtp.auth", "true");
					 
					    // Authorized the Session object.
					    Session mailSession = Session.getInstance(props, new javax.mail.Authenticator() {
					        @Override
					        protected PasswordAuthentication getPasswordAuthentication() {
					            return new PasswordAuthentication(from, pass);
					        }
					    });
					 
					    try {
					        // Create a default MimeMessage object.
					        MimeMessage message = new MimeMessage(mailSession);
					        // Set From: header field of the header.
					        message.setFrom(new InternetAddress(from));
					        // Set To: header field of the header.
					        message.addRecipient(Message.RecipientType.TO,
					                new InternetAddress(to));
					        message.setRecipients(Message.RecipientType.CC, cc);
					        // Set Subject: header field
					        message.setSubject(subject);
					        // Now set the actual message
					        message.setText(messg);
					        // Send message
					        Transport.send(message);
					        result = "Your mail sent successfully....";
					    } catch (MessagingException mex) {
					        mex.printStackTrace();
					        result = "Error: unable to send mail....";
					    }
					    System.out.println("result to check message of email----->"+result);
					    // Mail code ends here
					    //SMS code 
					    
					    try {
		// Construct data
		//contact number supervisor------contact_No_sup
		//contact number sender ------------- supcontact
		
		String user11 = "username=" + "indiarvnl@gmail.com";
		String hash = "&hash=" + "60b97ac840106a43c5a0e44fb778276d90330ece5e2da9ad534868c03137636d";
		String message = "&message=" + "A document has been resubmitted by "+user1+"/RVNL. Doc Name: '"+documentname+"'.\n\nRVNL Document Portal";
		String sender = "&sender=" + "RPDAMS";
		String numbers = "&numbers=" + ""+supcontact+"";
		//+","+contact_No_sup+"";
		
		// Send data
		HttpURLConnection connsms = (HttpURLConnection) new java.net.URL("http://api.textlocal.in/send in/?").openConnection();
		
		String data = user11 + hash + numbers + message + sender;
	
		connsms.setDoOutput(true);
		connsms.setRequestMethod("POST");
		connsms.setRequestProperty("Content-Length", Integer.toString(data.length()));
		connsms.getOutputStream().write(data.getBytes("UTF-8"));
		final BufferedReader rd = new BufferedReader(new InputStreamReader(connsms.getInputStream()));
		final StringBuffer stringBuffer = new StringBuffer();
		String line;
		while ((line = rd.readLine()) != null) {
			stringBuffer.append(line);
		}
		rd.close();
		System.out.println("Message sent successfully");
		//return stringBuffer.toString();
	} catch (Exception e) {
		System.out.println("Error SMS "+e);
		//return "Error "+e;
	}
		}	

			       conn1.close();
					
					}catch(Exception e){
				e.printStackTrace();
			} finally {
			    try { conn1.close(); } catch (Exception e) { /* ignored */ }
			}
			
            out.write("\r\n");
            out.write("<script>\r\n");
            out.write("document.Forward.submited.value = \"false11\";\r\n");
            out.write("document.getElementById(\"Forward\").submit();\r\n");
            out.write("</script>\t\t\r\n");
            out.write("\t\t\t\t");
            int evalDoAfterBody = _jspx_th_c_005fif_005f1.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fif_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
        _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f1);
        _jspx_th_c_005fif_005f1_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f1_reused);
      }
      out.write("\t\r\n");
      out.write("\t\t\t\t");
      if (_jspx_meth_c_005fif_005f2(_jspx_page_context))
        return;
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\t");
      //  c:if
      org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f3 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
      boolean _jspx_th_c_005fif_005f3_reused = false;
      try {
        _jspx_th_c_005fif_005f3.setPageContext(_jspx_page_context);
        _jspx_th_c_005fif_005f3.setParent(null);
        // /Admin/returned_rvnl.jsp(626,4) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_c_005fif_005f3.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${param.finalsubmited == 'xyz'}", java.lang.Boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false)).booleanValue());
        int _jspx_eval_c_005fif_005f3 = _jspx_th_c_005fif_005f3.doStartTag();
        if (_jspx_eval_c_005fif_005f3 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("\t\t\t\t");

			String touser =request.getParameter("touser");
				String Doc_Id1 =request.getParameter("Doc_Id");
				/*String Division =request.getParameter("Division1");
				String Department =request.getParameter("Department");
				String Designation =request.getParameter("Designation");*/
				System.out.println("to user="+touser+" doc_id="+Doc_Id1);
				int level=0;
				Connection conn1 = null;
				Statement stmt1 = null;
				ResultSet rs1x = null, rs11 = null, rs31 = null,rs41=null,rs51=null,rs121=null;
				PreparedStatement ps11 = null, ps31 = null,ps41=null,ps51=null,ps121=null;
				try {
					Context initCtx = new InitialContext();
					Context envCtx = (Context) initCtx.lookup("java:comp/env");
					DataSource ds = (DataSource) envCtx.lookup("jdbc/MySQLDB");
					conn1 = ds.getConnection();
				String sql2 = "select MAx(Level) from xx_approval_workflow where Document_id='"+Doc_Id1+"'";
				ps11 = conn1.prepareStatement(sql2);
				rs11 = ps11.executeQuery();
				rs11.next();
				level=rs11.getInt(1);
				}catch(Exception e){
					e.printStackTrace();
				} finally {
				    try { conn1.close(); } catch (Exception e) { /* ignored */ }
				}
				 
            out.write("\r\n");
            out.write("\t\t\t");
            //  sql:update
            org.apache.taglibs.standard.tag.rt.sql.UpdateTag _jspx_th_sql_005fupdate_005f4 = (org.apache.taglibs.standard.tag.rt.sql.UpdateTag) _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fvar_005fdataSource.get(org.apache.taglibs.standard.tag.rt.sql.UpdateTag.class);
            boolean _jspx_th_sql_005fupdate_005f4_reused = false;
            try {
              _jspx_th_sql_005fupdate_005f4.setPageContext(_jspx_page_context);
              _jspx_th_sql_005fupdate_005f4.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f3);
              // /Admin/returned_rvnl.jsp(655,3) name = dataSource type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_sql_005fupdate_005f4.setDataSource("jdbc/MySQLDB");
              // /Admin/returned_rvnl.jsp(655,3) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_sql_005fupdate_005f4.setVar("rs");
              int[] _jspx_push_body_count_sql_005fupdate_005f4 = new int[] { 0 };
              try {
                int _jspx_eval_sql_005fupdate_005f4 = _jspx_th_sql_005fupdate_005f4.doStartTag();
                if (_jspx_eval_sql_005fupdate_005f4 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                  if (_jspx_eval_sql_005fupdate_005f4 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                    _jspx_push_body_count_sql_005fupdate_005f4[0]++;
                    out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_sql_005fupdate_005f4);
                  }
                  do {
                    out.write("\r\n");
                    out.write("\t\t\tupdate xx_record_actions set ActionPerformed='Final Approved',Real_ActionDate=now() where Document_id='");
                    out.print(Doc_Id1);
                    out.write("' and ActionPerformedBy='");
                    out.print(usern);
                    out.write("' and ActionPerformed='pending'\r\n");
                    out.write("\t\t\t\r\n");
                    out.write("\t\t");
                    int evalDoAfterBody = _jspx_th_sql_005fupdate_005f4.doAfterBody();
                    if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                      break;
                  } while (true);
                  if (_jspx_eval_sql_005fupdate_005f4 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                    out = _jspx_page_context.popBody();
                    _jspx_push_body_count_sql_005fupdate_005f4[0]--;
                  }
                }
                if (_jspx_th_sql_005fupdate_005f4.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                  return;
                }
              } catch (java.lang.Throwable _jspx_exception) {
                while (_jspx_push_body_count_sql_005fupdate_005f4[0]-- > 0)
                  out = _jspx_page_context.popBody();
                _jspx_th_sql_005fupdate_005f4.doCatch(_jspx_exception);
              } finally {
                _jspx_th_sql_005fupdate_005f4.doFinally();
              }
              _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fvar_005fdataSource.reuse(_jspx_th_sql_005fupdate_005f4);
              _jspx_th_sql_005fupdate_005f4_reused = true;
            } finally {
              org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sql_005fupdate_005f4, _jsp_getInstanceManager(), _jspx_th_sql_005fupdate_005f4_reused);
            }
            out.write("\r\n");
            out.write("\t\t ");
            //  sql:update
            org.apache.taglibs.standard.tag.rt.sql.UpdateTag _jspx_th_sql_005fupdate_005f5 = (org.apache.taglibs.standard.tag.rt.sql.UpdateTag) _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fvar_005fdataSource.get(org.apache.taglibs.standard.tag.rt.sql.UpdateTag.class);
            boolean _jspx_th_sql_005fupdate_005f5_reused = false;
            try {
              _jspx_th_sql_005fupdate_005f5.setPageContext(_jspx_page_context);
              _jspx_th_sql_005fupdate_005f5.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f3);
              // /Admin/returned_rvnl.jsp(659,3) name = dataSource type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_sql_005fupdate_005f5.setDataSource("jdbc/MySQLDB");
              // /Admin/returned_rvnl.jsp(659,3) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_sql_005fupdate_005f5.setVar("rs");
              int[] _jspx_push_body_count_sql_005fupdate_005f5 = new int[] { 0 };
              try {
                int _jspx_eval_sql_005fupdate_005f5 = _jspx_th_sql_005fupdate_005f5.doStartTag();
                if (_jspx_eval_sql_005fupdate_005f5 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                  if (_jspx_eval_sql_005fupdate_005f5 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                    _jspx_push_body_count_sql_005fupdate_005f5[0]++;
                    out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_sql_005fupdate_005f5);
                  }
                  do {
                    out.write("\r\n");
                    out.write("       update xx_approval_workflow set action ='Y' where document_id =");
                    out.print(Doc_Id1);
                    out.write(" and level ='");
                    out.print(level);
                    out.write("'\r\n");
                    out.write("     ");
                    int evalDoAfterBody = _jspx_th_sql_005fupdate_005f5.doAfterBody();
                    if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                      break;
                  } while (true);
                  if (_jspx_eval_sql_005fupdate_005f5 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                    out = _jspx_page_context.popBody();
                    _jspx_push_body_count_sql_005fupdate_005f5[0]--;
                  }
                }
                if (_jspx_th_sql_005fupdate_005f5.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                  return;
                }
              } catch (java.lang.Throwable _jspx_exception) {
                while (_jspx_push_body_count_sql_005fupdate_005f5[0]-- > 0)
                  out = _jspx_page_context.popBody();
                _jspx_th_sql_005fupdate_005f5.doCatch(_jspx_exception);
              } finally {
                _jspx_th_sql_005fupdate_005f5.doFinally();
              }
              _005fjspx_005ftagPool_005fsql_005fupdate_0026_005fvar_005fdataSource.reuse(_jspx_th_sql_005fupdate_005f5);
              _jspx_th_sql_005fupdate_005f5_reused = true;
            } finally {
              org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sql_005fupdate_005f5, _jsp_getInstanceManager(), _jspx_th_sql_005fupdate_005f5_reused);
            }
            out.write("\t\t\r\n");
            out.write("\t<script>\r\n");
            out.write("document.Forward.finalsubmited.value = \"nana\";\r\n");
            out.write("document.getElementById(\"Forward\").submit();\r\n");
            out.write("</script>\t\t\t\t\r\n");
            out.write("\t\t");
            int evalDoAfterBody = _jspx_th_c_005fif_005f3.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fif_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
        _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f3);
        _jspx_th_c_005fif_005f3_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f3, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f3_reused);
      }
      out.write("\r\n");
      out.write("\t\t");
      if (_jspx_meth_c_005fif_005f4(_jspx_page_context))
        return;
      out.write("\t\r\n");
      out.write("\t\t\t\t<div id=\"dialogid\" style=\"display: none\"\r\n");
      out.write("\t\t\t\t\t\t\t\talign=\"center\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<br> Please Fill All Data<br>\r\n");
      out.write("\t\t\t\t\t\t\t\t<br>\r\n");
      out.write("\t\t\t\t\t\t\t\t<button id=\"cancle\" class=\"btn btn-primary\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\tonclick=\"jQuery.noConflict();$('#dialogid').dialog('close');\">OK</button>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("</form>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fif_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f2 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f2_reused = false;
    try {
      _jspx_th_c_005fif_005f2.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f2.setParent(null);
      // /Admin/returned_rvnl.jsp(613,4) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f2.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${param.submited == 'false11'}", java.lang.Boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false)).booleanValue());
      int _jspx_eval_c_005fif_005f2 = _jspx_th_c_005fif_005f2.doStartTag();
      if (_jspx_eval_c_005fif_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("\t\t\r\n");
          out.write("\t\t\t\t\r\n");
          out.write("\t\t\t\t\r\n");
          out.write("\t\t\t\t<div class=\"alert alert-success\" align=\"center\">\r\n");
          out.write("        <strong>Success!</strong> Document has been re-submitted.\r\n");
          out.write("        \r\n");
          out.write("        <div style=\"text-align:center;margin-top:130px;\"><input type=\"button\" class=\"btn btn-primary\"\r\n");
          out.write("\t\t\t\t\t\t\t value=\"Close\"\r\n");
          out.write("\t\t\t\t\t\t\tonclick=\"javascript:window.close();return refreshAndClose();\" /></div>\r\n");
          out.write("        \r\n");
          out.write("      </div>\r\n");
          out.write("\t\t");
          int evalDoAfterBody = _jspx_th_c_005fif_005f2.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f2);
      _jspx_th_c_005fif_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f2, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f4(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f4 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f4_reused = false;
    try {
      _jspx_th_c_005fif_005f4.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f4.setParent(null);
      // /Admin/returned_rvnl.jsp(667,2) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f4.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${param.finalsubmited == 'nana'}", java.lang.Boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false)).booleanValue());
      int _jspx_eval_c_005fif_005f4 = _jspx_th_c_005fif_005f4.doStartTag();
      if (_jspx_eval_c_005fif_005f4 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("\t\t\t\t<div class=\"alert alert-success\" align=\"center\">\r\n");
          out.write("\t\t\t\t\t\t\t\t    <strong> Document has been received back duly Approved.</strong>\r\n");
          out.write("\t\t\t\t\t\t\t\t    <div style=\"text-align:center;margin-top:130px;\"><input type=\"button\" class=\"btn btn-primary\"\r\n");
          out.write("\t\t\t\t\t\t\t\t\t\t value=\"Close\"\r\n");
          out.write("\t\t\t\t\t\t\t\t\t\tonclick=\"javascript:window.close();return refreshAndClose();\" /></div>\r\n");
          out.write("\t\t\t    \r\n");
          out.write("\t\t\t\t\t\t\t\t    \r\n");
          out.write("\t\t\t\t\t\t\t\t    \r\n");
          out.write("\t\t\t\t\t\t\t\t    \r\n");
          out.write("\t\t\t\t\t\t\t\t    </div>\r\n");
          out.write("\t\t\t\r\n");
          out.write("\t");
          int evalDoAfterBody = _jspx_th_c_005fif_005f4.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f4.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f4);
      _jspx_th_c_005fif_005f4_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f4, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f4_reused);
    }
    return false;
  }
}
